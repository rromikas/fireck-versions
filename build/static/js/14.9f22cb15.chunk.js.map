{"version":3,"sources":["../node_modules/@material-ui/icons/OpenInNew.js","pages/Collection.tsx","api/callComponent.tsx","components/Select.tsx","hooks/useFetch.ts","components/TableElements/CollectionTable.tsx","components/Label.tsx","components/TableElements/AddFilter.tsx","components/TooltipChild.tsx","components/TableElements/FilesCell/MediaField.tsx","components/TableElements/FilesCell/index.tsx"],"names":["_interopRequireDefault","require","_interopRequireWildcard","Object","defineProperty","exports","value","default","React","_default","createElement","d","Collection","id","match","params","collectionType","useSelector","state","collectionTypes","find","x","history","useHistory","className","name","onClick","window","open","location","origin","push","fontSize","groundColor","callComponent","Component","props","Promise","resolve","reject","wrapper","document","getElementById","appendChild","ReactDOM","render","store","proceed","val","unmountComponentAtNode","parentNode","removeChild","WarningIcon","forwardRef","ref","size","Select","options","error","classNames","spellCheck","map","i","label","title","placement","useFetch","collectionId","filters","orderBy","inView","getOptions","useNotify","useCallback","forEach","f","where","fieldId","operator","direction","length","populateRef","useInfiniteQuery","pageParam","CollectionsManager","getCollection","startAfter","keepPreviousData","getNextPageParam","lastPage","pages","lastDoc","undefined","data","fetchNextPage","hasNextPage","useEffect","docs","reduce","a","b","Table","onPick","blackList","singleSelect","valueFormatters","_filters","_onEdit","onEdit","hideFilters","useState","setFilters","fields","filter","field","displayOnTable","selected","setSelected","setOrderBy","endIsInView","setEndIsInView","onDeleteSelected","confirm","confirmation","deleteMultipleDocuments","includes","docId","doc","onOrder","selectHandler","checked","prev","arr","index","findIndex","splice","formatValue","type","moment","format","toString","substring","AddFilter","onValue","hidden","Button","disabled","autoHide","Checkbox","classes","root","onChange","e","select","target","stopPropagation","j","mediaSingle","FilesCell","file","files","colSpan","Label","children","AddFilterModal","setOpen","useFormik","onSubmit","vals","resetForm","initialValues","validate","errors","keys","values","handleChange","submitCount","handleSubmit","isSubmitting","onMouseDown","style","maxWidth","onKeyDown","key","preventDefault","placeholder","TooltipChild","MediaField","src","Tooltip","arrow","alt","tooltip","backgroundImage","Files","useRef","Math","random","slice"],"mappings":"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","file":"static/js/14.9f22cb15.chunk.js","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 19H5V5h7V3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2v-7h-2v7zM14 3v2h3.59l-9.83 9.83 1.41 1.41L19 6.41V10h2V3h-7z\"\n}), 'OpenInNew');\n\nexports.default = _default;","import React from \"react\";\r\nimport { RouteComponentProps } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { RootState } from \"store\";\r\nimport Button from \"components/Button\";\r\nimport AddRounded from \"@material-ui/icons/AddRounded\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Table from \"components/TableElements/CollectionTable\";\r\nimport OpenInNew from \"@material-ui/icons/OpenInNew\";\r\n\r\ntype CollectionParams = { id: string };\r\nexport interface CollectionProps extends RouteComponentProps<CollectionParams> {}\r\n\r\nconst Collection: React.FC<CollectionProps> = ({ match }) => {\r\n  const id = match.params.id;\r\n  const { collectionType } = useSelector((state: RootState) => {\r\n    return {\r\n      collectionType: state.collectionTypes.find((x) => x.id === id),\r\n    };\r\n  });\r\n\r\n  const history = useHistory();\r\n\r\n  return (\r\n    <div className=\"h-full flex flex-col w-full\">\r\n      <div className=\"flex flex-wrap justify-between mb-5\">\r\n        <div className=\"mr-3 mb-3 text-27px font-medium capitalize leading-none text-white\">\r\n          {!collectionType ? null : (\r\n            <div className=\"flex items-center\">\r\n              {collectionType.name}\r\n              <div\r\n                onClick={() =>\r\n                  window.open(window.location.origin + `/api/${collectionType.id}`, \"_blank\")\r\n                }\r\n                className=\"hover:bg-fireck-1-hover rounded h-8 w-8 ml-3 inline-flex cursor-pointer\"\r\n              >\r\n                <OpenInNew className=\"m-auto\"></OpenInNew>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n        <Button\r\n          onClick={() => history.push(`/collections/${id}/add`)}\r\n          className=\"bg-fireck-4 hover:bg-fireck-4-hover mb-3 h-34px min-w-unset\"\r\n        >\r\n          <div className=\"flex items-center\">\r\n            <AddRounded fontSize=\"inherit\" className=\"text-lg sm:mr-3\"></AddRounded>\r\n            <span className=\"sm:block hidden\">Add Document</span>\r\n            <span className=\"sm:hidden\">Add</span>\r\n          </div>\r\n        </Button>\r\n      </div>\r\n\r\n      {collectionType ? (\r\n        <div className=\"flex-grow h-0\">\r\n          <Table\r\n            groundColor=\"black\"\r\n            key={collectionType.id}\r\n            collectionType={collectionType}\r\n          ></Table>\r\n        </div>\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Collection;\r\n","import ReactDOM from \"react-dom\";\r\nimport React from \"react\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"store\";\r\nimport NotificationsProvider from \"components/NotificationsProvider\";\r\n\r\nexport interface CallableComponent<T> {\r\n  proceed: (v: T) => void;\r\n}\r\n\r\ninterface callComponentArgs<T> {\r\n  Component: React.FC<any>;\r\n  props: Omit<T, \"proceed\">;\r\n}\r\n\r\nexport function callComponent<T, RT>({ Component, props }: callComponentArgs<T>): Promise<RT> {\r\n  return new Promise((resolve, reject) => {\r\n    const wrapper = document.getElementById(\"root\")?.appendChild(document.createElement(\"div\"));\r\n\r\n    if (wrapper) {\r\n      ReactDOM.render(\r\n        <Provider store={store}>\r\n          <NotificationsProvider>\r\n            <Component\r\n              {...props}\r\n              proceed={(val: RT) => {\r\n                ReactDOM.unmountComponentAtNode(wrapper);\r\n                wrapper.parentNode?.removeChild(wrapper);\r\n                resolve(val);\r\n              }}\r\n            />\r\n          </NotificationsProvider>\r\n        </Provider>,\r\n        wrapper\r\n      );\r\n    }\r\n  });\r\n}\r\n","import { IoAlertCircleOutline } from \"react-icons/io5\";\r\nimport Tooltip from \"@mui/material/Tooltip\";\r\nimport React, { SelectHTMLAttributes } from \"react\";\r\nimport classNames from \"classnames\";\r\n\r\nconst WarningIcon = React.forwardRef(function MyComponent(props: any, ref: any) {\r\n  return (\r\n    <div {...props} ref={ref}>\r\n      <IoAlertCircleOutline className=\"text-red-FF0000\" size={20}></IoAlertCircleOutline>\r\n    </div>\r\n  );\r\n});\r\n\r\nexport interface SelectProps extends SelectHTMLAttributes<HTMLSelectElement> {\r\n  className?: string;\r\n  options: { label: string; value: string | number }[];\r\n  error?: string | boolean;\r\n  groundColor: \"white\" | \"black\";\r\n}\r\n\r\nconst Select: React.FC<SelectProps> = ({\r\n  className = \"\",\r\n  options,\r\n  error,\r\n  groundColor,\r\n  ...props\r\n}) => {\r\n  return (\r\n    <div className={`${className} relative flex items-center`}>\r\n      <select\r\n        className={classNames(\"px-3 h-full border-2 border-solid w-full rounded outline-none\", {\r\n          \"border-red-FF0000\": error,\r\n          \"focus:border-fireck-4\": !error,\r\n          \"border-gray-300 bg-gray-300\": groundColor === \"white\",\r\n          \"border-white bg-white\": groundColor === \"black\",\r\n        })}\r\n        {...props}\r\n        spellCheck={false}\r\n      >\r\n        {options.map((x, i) => (\r\n          <option data-testid={`select-option-${x.value}`} key={\"opt-\" + i} value={x.value}>\r\n            {x.label}\r\n          </option>\r\n        ))}\r\n      </select>\r\n      {error ? (\r\n        <Tooltip title={error} placement=\"top\">\r\n          <WarningIcon className=\"absolute right-2 my-auto w-auto\"></WarningIcon>\r\n        </Tooltip>\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Select;\r\n","import { useNotify } from \"components/NotificationsProvider\";\r\nimport { FilterType } from \"components/TableElements/CollectionTable\";\r\nimport { createIndex } from \"components/TableElements/CreateIndex\";\r\nimport { useEffect, useCallback } from \"react\";\r\nimport { Document, GetCollectionOptions } from \"utils/interfaces\";\r\nimport CollectionsManager from \"facades/CollectionsManager\";\r\nimport { useInfiniteQuery } from \"react-query\";\r\n\r\ninterface UseFetchProps {\r\n  collectionId: string;\r\n  filters?: FilterType[];\r\n  orderBy?: { fieldId: string; direction: \"asc\" | \"desc\" };\r\n  inView: boolean;\r\n}\r\n\r\nconst useFetch = ({ collectionId, filters = [], orderBy, inView }: UseFetchProps) => {\r\n  const notify = useNotify();\r\n\r\n  const getOptions = useCallback(() => {\r\n    let options: GetCollectionOptions = { collectionId };\r\n\r\n    options.where = \"\";\r\n    options.orderBy = \"\";\r\n\r\n    filters.forEach((f, i) => {\r\n      options.where += (i > 0 ? \";\" : \"\") + f.fieldId + \",\" + f.operator + \",\" + f.value;\r\n      if (orderBy && orderBy.fieldId !== f.fieldId) {\r\n        options.orderBy += (options.orderBy ? \";\" : \"\") + f.fieldId;\r\n      }\r\n    });\r\n\r\n    if (orderBy) {\r\n      options.orderBy += (options.orderBy ? \";\" : \"\") + `${orderBy.fieldId},${orderBy.direction}`;\r\n    }\r\n    if (!orderBy && !filters.length) {\r\n      options.orderBy = \"createdAt,asc\";\r\n    }\r\n\r\n    options.populateRef = false;\r\n\r\n    return options;\r\n  }, [orderBy, filters, collectionId]);\r\n\r\n  const { data, error, fetchNextPage, hasNextPage } = useInfiniteQuery<Document[]>(\r\n    [collectionId, orderBy, filters],\r\n    ({ pageParam }) => {\r\n      return CollectionsManager.getCollection({ ...getOptions(), startAfter: pageParam });\r\n    },\r\n    {\r\n      keepPreviousData: true,\r\n      getNextPageParam: (lastPage, pages) => {\r\n        let lastDoc = lastPage?.length && lastPage.length === 10 ? lastPage[9] : null;\r\n        return lastDoc ? lastDoc[orderBy ? orderBy.fieldId : \"createdAt\"] : undefined;\r\n      },\r\n    }\r\n  );\r\n\r\n  const onError = (message: string) => {\r\n    if (message.includes(\"FAILED_PRECONDITION\")) {\r\n      createIndex(message.split(\"it here:\")[1]);\r\n    } else {\r\n      notify(message, { variant: \"error\" });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (inView && hasNextPage) {\r\n      fetchNextPage();\r\n    }\r\n  }, [inView, fetchNextPage, hasNextPage]);\r\n\r\n  return { docs: data?.pages.reduce((a, b) => [...a, ...b], []) || [] };\r\n};\r\n\r\nexport default useFetch;\r\n","import { Document } from \"utils/interfaces\";\r\nimport { CollectionType, AnyField } from \"api/collectionTypes\";\r\nimport FilesCell from \"./FilesCell\";\r\nimport React, { useEffect } from \"react\";\r\nimport ExpandMoreRounded from \"@mui/icons-material/ExpandMoreRounded\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { confirm } from \"components/Confirm\";\r\nimport AddFilter from \"./AddFilter\";\r\nimport Button from \"components/Button\";\r\nimport SimpleBar from \"simplebar-react\";\r\nimport classNames from \"classnames\";\r\nimport useFetch from \"hooks/useFetch\";\r\nimport { InView } from \"react-intersection-observer\";\r\nimport Checkbox from \"@mui/material/Checkbox\";\r\nimport moment from \"moment\";\r\nimport CollectionsManager from \"facades/CollectionsManager\";\r\n\r\nexport interface TableProps {\r\n  collectionType: CollectionType;\r\n  onPick?: (a: Document[]) => void;\r\n  blackList?: string[];\r\n  singleSelect?: boolean;\r\n  valueFormatters?: { [key: string]: (val: any) => any };\r\n  groundColor: \"white\" | \"black\";\r\n  filters?: FilterType[];\r\n  onEdit?: (doc: Document) => void;\r\n  hideFilters?: boolean;\r\n}\r\n\r\nexport type FilterType = { fieldId: string; operator: string; value: string; hidden?: boolean };\r\n\r\nconst Table: React.FC<TableProps> = ({\r\n  collectionType,\r\n  onPick,\r\n  blackList = [],\r\n  singleSelect = false,\r\n  valueFormatters,\r\n  groundColor,\r\n  filters: _filters = [],\r\n  onEdit: _onEdit,\r\n  hideFilters = false,\r\n}) => {\r\n  const history = useHistory();\r\n\r\n  const [filters, setFilters] = React.useState<FilterType[]>([]);\r\n  const fields = collectionType.fields.filter((field) => field.displayOnTable);\r\n  const [selected, setSelected] = React.useState<string[]>([]);\r\n  const [orderBy, setOrderBy] = React.useState<{ fieldId: string; direction: \"asc\" | \"desc\" }>();\r\n  const [endIsInView, setEndIsInView] = React.useState(false);\r\n\r\n  const { docs } = useFetch({\r\n    collectionId: collectionType.id,\r\n    filters,\r\n    orderBy,\r\n    inView: endIsInView,\r\n  });\r\n\r\n  const onDeleteSelected = async () => {\r\n    if (await confirm({ confirmation: `Delete ${selected.length} documents?` })) {\r\n      CollectionsManager.deleteMultipleDocuments(\r\n        collectionType.id,\r\n        docs.filter((x) => selected.includes(x.docId))\r\n      );\r\n\r\n      setSelected([]);\r\n    }\r\n  };\r\n\r\n  const onEdit =\r\n    _onEdit ||\r\n    ((doc: Document) => {\r\n      history.push(`/collections/${collectionType.id}/edit/${doc.docId}`);\r\n    });\r\n\r\n  const onOrder = (field: AnyField) =>\r\n    orderBy?.fieldId !== field.id\r\n      ? () => {\r\n          setOrderBy({ fieldId: field.id, direction: \"asc\" });\r\n        }\r\n      : orderBy?.direction !== \"asc\"\r\n      ? () => setOrderBy(undefined)\r\n      : () => setOrderBy({ fieldId: field.id, direction: \"desc\" });\r\n\r\n  const selectAll = (select: boolean) => setSelected(select ? docs.map((x) => x.docId) : []);\r\n\r\n  const selectHandler = (docId: string, checked: boolean) => {\r\n    if (checked) {\r\n      if (singleSelect) {\r\n        setSelected([docId]);\r\n      } else {\r\n        setSelected((prev) => [...prev, docId]);\r\n      }\r\n\r\n      return;\r\n    }\r\n    setSelected((prev) => {\r\n      let arr = [...prev];\r\n      let index = arr.findIndex((x) => x === docId);\r\n      if (index != null) {\r\n        arr.splice(index, 1);\r\n      }\r\n      return arr;\r\n    });\r\n  };\r\n\r\n  const formatValue = (field: AnyField, value: any) => {\r\n    return field.type === \"date\"\r\n      ? moment(value).format(\"YYYY-MM-DD HH:mm\")\r\n      : valueFormatters && field.id in valueFormatters\r\n      ? valueFormatters[field.id](value)\r\n      : value.toString().substring(0, 40);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (_filters.length) {\r\n      setFilters((prev) => [...prev, ..._filters]);\r\n    }\r\n  }, [_filters]);\r\n\r\n  return (\r\n    <div className=\"h-full w-full flex-col flex\">\r\n      <div className=\"flex justify-between mb-3\">\r\n        {hideFilters ? null : (\r\n          <div className=\"flex flex-wrap\">\r\n            <AddFilter\r\n              collectionType={collectionType}\r\n              onValue={(val: FilterType) => setFilters((prev) => [val, ...prev])}\r\n            ></AddFilter>\r\n            {filters.map((f, i) =>\r\n              f.hidden ? null : (\r\n                <div\r\n                  key={`f-${i}`}\r\n                  className={classNames(\r\n                    \"rounded min-h-28px border leading-28px pl-3 text-sm pr-3 flex mr-3 mb-3 relative\",\r\n                    { \"text-white border-white\": groundColor === \"black\" },\r\n                    { \"text-black border-black\": groundColor === \"white\" }\r\n                  )}\r\n                >\r\n                  {f.fieldId} {f.operator} {f.value}{\" \"}\r\n                  <span\r\n                    onClick={() =>\r\n                      setFilters((prev) => {\r\n                        let arr = [...prev];\r\n                        arr.splice(i, 1);\r\n                        return arr;\r\n                      })\r\n                    }\r\n                    className=\"text-xs leading-28px ml-3 cursor-pointer\"\r\n                  >\r\n                    ✕\r\n                  </span>\r\n                </div>\r\n              )\r\n            )}\r\n          </div>\r\n        )}\r\n\r\n        {!onPick ? (\r\n          <Button\r\n            onClick={onDeleteSelected}\r\n            disabled={selected.length === 0}\r\n            className={`px-7 mb-3 min-w-unset rounded h-28px ${\r\n              selected.length === 0\r\n                ? \"bg-gray-E1E1E1 text-gray-6C6C6C cursor-default\"\r\n                : \"bg-red-FF0000 hover:bg-red-FF0000-hover text-white\"\r\n            } `}\r\n          >\r\n            Delete\r\n          </Button>\r\n        ) : (\r\n          <Button\r\n            onClick={() => onPick(docs.filter((x) => selected.includes(x.docId)))}\r\n            className={`h-28px min-w-unset rounded mb-3 px-7 ${\r\n              selected.length === 0\r\n                ? \"bg-gray-300 text-gray-500 cursor-default\"\r\n                : \"bg-fireck-4 hover:bg-fireck-4-hover\"\r\n            } `}\r\n          >\r\n            Select\r\n          </Button>\r\n        )}\r\n      </div>\r\n      <div\r\n        className={classNames(\"flex-grow h-0 -mt-3 rounded overflow-hidden bg-white\", {\r\n          \"shadow-border-gray\": groundColor === \"white\",\r\n        })}\r\n      >\r\n        <SimpleBar className={\"relative scrollbar-light h-full\"} autoHide={false}>\r\n          <table className=\"w-full text-center\">\r\n            <thead>\r\n              <tr className=\"whitespace-nowrap\">\r\n                <th className=\"sticky top-0 bg-gray-E1E1E1 z-10 px-1\">\r\n                  {singleSelect ? null : (\r\n                    <Checkbox\r\n                      size=\"small\"\r\n                      classes={{ checked: \"text-fireck-1\", root: \"p-0\" }}\r\n                      checked={selected.length === docs.length}\r\n                      onChange={(e) => selectAll(e.target.checked)}\r\n                    ></Checkbox>\r\n                  )}\r\n                </th>\r\n                {fields.map((field, i) => (\r\n                  <th className=\"font-semibold sticky top-0 bg-gray-E1E1E1\" key={`th-${i}`}>\r\n                    <div className=\"flex items-center justify-center\">\r\n                      <div className=\"w-5\"></div>\r\n                      <div className=\"cursor-pointer select-none\" onClick={onOrder(field)}>\r\n                        {field.id}\r\n                      </div>\r\n                      <div className=\"w-5\">\r\n                        {orderBy?.fieldId === field.id ? (\r\n                          <ExpandMoreRounded\r\n                            fontSize=\"small\"\r\n                            className={`${\r\n                              orderBy?.direction === \"asc\" ? \"transform rotate-180\" : \"\"\r\n                            }`}\r\n                          ></ExpandMoreRounded>\r\n                        ) : null}\r\n                      </div>\r\n                    </div>\r\n                  </th>\r\n                ))}\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {docs.map((doc, i) =>\r\n                blackList.includes(doc.docId) ? null : (\r\n                  <tr\r\n                    onClick={() =>\r\n                      onPick ? selectHandler(doc.docId, !selected.includes(doc.docId)) : onEdit(doc)\r\n                    }\r\n                    key={`row-${i}`}\r\n                    className={\"cursor-pointer hover:bg-fireck-4\"}\r\n                  >\r\n                    <td className=\"px-1\" onClick={(e) => e.stopPropagation()}>\r\n                      <Checkbox\r\n                        size=\"small\"\r\n                        classes={{ checked: \"text-fireck-1\", root: \"p-0\" }}\r\n                        checked={selected.includes(doc.docId)}\r\n                        onChange={(e) => selectHandler(doc.docId, e.target.checked)}\r\n                      ></Checkbox>\r\n                    </td>\r\n                    {fields.map((field, j) => (\r\n                      <td key={`row-${i}-col-${j}`} className=\"px-2\">\r\n                        {doc[field.id] != null ? (\r\n                          field.type === \"media\" ? (\r\n                            field.mediaSingle ? (\r\n                              <FilesCell file={doc[field.id]}></FilesCell>\r\n                            ) : (\r\n                              <FilesCell files={doc[field.id]} />\r\n                            )\r\n                          ) : (\r\n                            <div className=\"whitespace-nowrap\">\r\n                              {formatValue(field, doc[field.id])}\r\n                            </div>\r\n                          )\r\n                        ) : null}\r\n                      </td>\r\n                    ))}\r\n                  </tr>\r\n                )\r\n              )}\r\n              <tr>\r\n                <td colSpan={fields.length + 1}>\r\n                  <InView\r\n                    onChange={async (inView) => {\r\n                      setEndIsInView(inView);\r\n                    }}\r\n                  >\r\n                    <div className=\"w-full\"></div>\r\n                  </InView>\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n\r\n          <div></div>\r\n        </SimpleBar>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Table;\r\n","import React from \"react\";\r\nimport ErrorRounded from \"@mui/icons-material/ErrorRounded\";\r\nimport Tooltip from \"@mui/material/Tooltip\";\r\nimport classNames from \"classnames\";\r\n\r\nexport interface LabelProps {\r\n  error?: string | undefined | null;\r\n  className?: string;\r\n  children: any;\r\n  groundColor: \"black\" | \"white\";\r\n}\r\n\r\nconst WarningIcon = React.forwardRef(function MyComponent(props: any, ref: any) {\r\n  return (\r\n    <div {...props} ref={ref}>\r\n      <ErrorRounded className=\"text-red-500 text-xl\" fontSize=\"inherit\"></ErrorRounded>\r\n    </div>\r\n  );\r\n});\r\n\r\nconst Label: React.FC<LabelProps> = ({ className = \"\", children, error, groundColor }) => {\r\n  return (\r\n    <div\r\n      className={classNames(`flex justify-between relative ${className}`, {\r\n        \"text-white\": groundColor === \"black\",\r\n        \"text-black\": groundColor === \"white\",\r\n      })}\r\n    >\r\n      <div>{children}</div>\r\n      {error ? (\r\n        <Tooltip title={error} placement=\"top\">\r\n          <WarningIcon className=\"absolute right-2 my-auto w-auto\"></WarningIcon>\r\n        </Tooltip>\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Label;\r\n","import Modal from \"@mui/material/Modal\";\r\nimport Input from \"components/Input\";\r\nimport Select from \"components/Select\";\r\nimport Button from \"components/Button\";\r\nimport { CollectionType } from \"api/collectionTypes\";\r\nimport React from \"react\";\r\nimport { useFormik } from \"formik\";\r\nimport Label from \"components/Label\";\r\nimport CloseRounded from \"@mui/icons-material/CloseRounded\";\r\n\r\nexport interface AddFilterModalProps {\r\n  collectionType: Pick<CollectionType, \"fields\">;\r\n  onValue: Function;\r\n  groundColor?: \"black\" | \"white\";\r\n}\r\n\r\nconst AddFilterModal: React.FC<AddFilterModalProps> = ({\r\n  collectionType,\r\n  onValue,\r\n  groundColor = \"white\",\r\n}) => {\r\n  const operators = [\r\n    \"<\",\r\n    \"<=\",\r\n    \"==\",\r\n    \">\",\r\n    \">=\",\r\n    \"!=\",\r\n    \"array-contains\",\r\n    \"array-contains-any\",\r\n    \"in\",\r\n    \"not-in\",\r\n  ];\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const { values, errors, handleChange, submitCount, handleSubmit, isSubmitting } = useFormik({\r\n    onSubmit: async (vals, { resetForm }) => {\r\n      onValue(vals);\r\n      setOpen(false);\r\n      resetForm();\r\n    },\r\n    initialValues: {\r\n      value: \"\",\r\n      operator: \"\",\r\n      fieldId: \"\",\r\n    },\r\n    validate: (vals: any) => {\r\n      let errors: any = {};\r\n      Object.keys(vals).forEach((x) => {\r\n        if (!vals[x]) {\r\n          errors[x] = \"Required\";\r\n        }\r\n      });\r\n      return errors;\r\n    },\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <Button\r\n        onClick={() => setOpen(true)}\r\n        className=\"bg-fireck-4 hover:bg-fireck-4-hover min-w-unset flex items-center justify-center h-28px px-7 rounded text-sm mr-3 mb-3\"\r\n      >\r\n        Filters\r\n      </Button>\r\n      {!open ? null : (\r\n        <Modal open={open}>\r\n          <div\r\n            className=\"fixed left-0 top-0 w-full h-full flex p-7\"\r\n            onMouseDown={() => setOpen(false)}\r\n          >\r\n            <div\r\n              onMouseDown={(e) => e.stopPropagation()}\r\n              className=\"bg-white rounded p-7 m-auto relative animate-littlemoveup\"\r\n              style={{ maxWidth: 600 }}\r\n            >\r\n              <CloseRounded\r\n                className=\"absolute top-0 right-0 cursor-pointer\"\r\n                onClick={() => setOpen(false)}\r\n              ></CloseRounded>\r\n              <div className=\"flex flex-wrap -mx-2 mb-4\">\r\n                <div className=\"sm:w-1/3 w-full mb-3 px-2\">\r\n                  <Label\r\n                    groundColor={groundColor}\r\n                    className=\"mb-2\"\r\n                    error={submitCount > 0 ? errors.fieldId : null}\r\n                  >\r\n                    Field\r\n                  </Label>\r\n                  <Select\r\n                    className=\"h-34px\"\r\n                    groundColor=\"white\"\r\n                    name=\"fieldId\"\r\n                    onChange={handleChange}\r\n                    value={values.fieldId}\r\n                    options={[\r\n                      { value: \"\", label: \"Select\" },\r\n                      ...collectionType.fields.map((x) => ({ value: x.id, label: x.id })),\r\n                    ]}\r\n                  ></Select>\r\n                </div>\r\n                <div className=\"sm:w-1/3 w-full mb-3 px-2\">\r\n                  <Label\r\n                    groundColor={groundColor}\r\n                    className=\"mb-2\"\r\n                    error={submitCount > 0 ? errors.operator : null}\r\n                  >\r\n                    Operator\r\n                  </Label>\r\n                  <Select\r\n                    className=\"h-34px\"\r\n                    groundColor=\"white\"\r\n                    name=\"operator\"\r\n                    onChange={handleChange}\r\n                    value={values.operator}\r\n                    options={[\r\n                      { value: \"\", label: \"Select\" },\r\n                      ...operators.map((x) => ({ value: x, label: x })),\r\n                    ]}\r\n                  ></Select>\r\n                </div>\r\n                <div className=\"sm:w-1/3 w-full mb-3 px-2\">\r\n                  <Label\r\n                    groundColor={groundColor}\r\n                    className=\"mb-2 text-black\"\r\n                    error={submitCount > 0 ? errors.value : null}\r\n                  >\r\n                    Value\r\n                  </Label>\r\n                  <Input\r\n                    onKeyDown={(e) => {\r\n                      if (e.key === \"Enter\") {\r\n                        e.preventDefault();\r\n                        handleSubmit();\r\n                      }\r\n                    }}\r\n                    groundColor=\"white\"\r\n                    placeholder={\r\n                      [\"in\", \"not in\", \"array-contains-any\"].includes(values.operator)\r\n                        ? \"value, value, value\"\r\n                        : \"value\"\r\n                    }\r\n                    className=\"placeholder-black h-34px\"\r\n                    value={values.value}\r\n                    onChange={handleChange}\r\n                    name=\"value\"\r\n                  ></Input>\r\n                </div>\r\n              </div>\r\n              <div className=\"flex justify-end\">\r\n                <Button\r\n                  disabled={isSubmitting}\r\n                  onClick={() => handleSubmit()}\r\n                  className=\"bg-fireck-4 hover:bg-fireck-4-hover h-34px\"\r\n                >\r\n                  Add\r\n                </Button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Modal>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AddFilterModal;\r\n","import { forwardRef } from \"react\";\r\n\r\nconst TooltipChild = forwardRef(function MyComponent(props: any, ref: any) {\r\n  return <div {...props} ref={ref}></div>;\r\n});\r\n\r\nexport default TooltipChild;\r\n","import TooltipChild from \"components/TooltipChild\";\r\nimport Tooltip from \"@mui/material/Tooltip\";\r\n\r\ninterface MediaFieldProps {\r\n  src: string;\r\n}\r\n\r\nconst MediaField: React.FC<MediaFieldProps> = ({ src }) => {\r\n  return (\r\n    <Tooltip\r\n      arrow\r\n      title={\r\n        <div className=\"p-1\">\r\n          <img src={src} className=\"max-w-136px max-h-136px w-auto h-auto\" alt=\"\" />\r\n        </div>\r\n      }\r\n      placement=\"top\"\r\n      classes={{\r\n        tooltip: \"font-poppins text-xs p-0 rounded bg-fireck-1\",\r\n        arrow: \"text-fireck-1\",\r\n      }}\r\n    >\r\n      <TooltipChild>\r\n        <div className=\"group w-4 h-4 relative flex items-center justify-center rounded hover:bg-gray-535371 hover:bg-opacity-5 cursor-pointer\">\r\n          <div\r\n            className=\"relative w-4 h-4 rounded-full bg-center bg-cover pointer-events-none\"\r\n            style={{ backgroundImage: `url(${src})` }}\r\n          ></div>\r\n        </div>\r\n      </TooltipChild>\r\n    </Tooltip>\r\n  );\r\n};\r\n\r\nexport default MediaField;\r\n","import React from \"react\";\r\nimport MediaField from \"./MediaField\";\r\n\r\nexport interface FilesProps {\r\n  files?: string[];\r\n  file?: string;\r\n}\r\n\r\nconst Files: React.FC<FilesProps> = ({ files, file }) => {\r\n  const id = React.useRef<number>(Math.random());\r\n\r\n  return (\r\n    <div className=\"flex justify-center\">\r\n      {(files ? files : file ? [file] : []).slice(0, 4).map((f, i) => (\r\n        <div key={`${id}-file-${i}`} className=\"mr-0.5\">\r\n          <MediaField src={f}></MediaField>\r\n        </div>\r\n      ))}\r\n      {files && files.length > 4 ? (\r\n        <div className=\"relative\">\r\n          <div className=\"w-4 h-4 rounded-full bg-fireck-4 text-10px flex items-center justify-center\">\r\n            {files.length - 4}+\r\n          </div>\r\n        </div>\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Files;\r\n"],"sourceRoot":""}