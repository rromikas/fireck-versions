{"version":3,"sources":["pages/Emails/index.tsx"],"names":["a"],"mappings":"oIA2KeA,UAJL,WACR,OAAO","file":"static/js/18.35455dbe.chunk.js","sourcesContent":["// import Button from \"components/Button\";\r\n// import PageTitle from \"components/PageTitle\";\r\n// import { useState, useEffect } from \"react\";\r\n// import { useSelector, useDispatch } from \"react-redux\";\r\n// import { RootState } from \"store\";\r\n// import { CollectionType } from \"api/collectionTypes\";\r\n// import EmptyScreen from \"components/EmptyScreen\";\r\n// import { addDocument, updateDocument, getCollection } from \"api/collections\";\r\n// import EmailEditorModal from \"components/EmailEditorModal\";\r\n// import AddRounded from \"@material-ui/icons/AddRounded\";\r\n// import EmailTemplateCard from \"components/EmailTemplateCard\";\r\n// import useWindowSize from \"hooks/useWindowSize\";\r\n// import { deleteDocument } from \"api/collections\";\r\n\r\n// import { confirm } from \"components/Confirm\";\r\n\r\n// export interface EmailsProps {}\r\n\r\n// export type Template = { name: string; html: string; template: Object; docId: string };\r\n\r\n// const COLLECTION_ID = \"EmailsTemplatesReservedCollection\";\r\n\r\n// const Emails: React.FC<EmailsProps> = () => {\r\n//   const [templates, setTemplates] = useState<Template[]>([]);\r\n//   const [openEditor, setOpenEditor] = useState(false);\r\n//   const [editTemplate, setEditTemplate] = useState<Template>();\r\n//   const { width: windowWidth } = useWindowSize();\r\n\r\n//   useEffect(() => {\r\n//     (async () => {\r\n//       try {\r\n//         const res = await getCollection({ collectionId: COLLECTION_ID });\r\n\r\n//         setTemplates(res);\r\n//       } catch (error) {\r\n//         console.log(error);\r\n//       }\r\n//     })();\r\n//   }, []);\r\n\r\n//   const emailsColType = useSelector((state: RootState) =>\r\n//     state.collectionTypes.find((x) => x.id === COLLECTION_ID)\r\n//   );\r\n\r\n//   const dispatch = useDispatch();\r\n\r\n//   const onEnable = () => {\r\n//     const colType = {\r\n//       id: COLLECTION_ID,\r\n//       name: COLLECTION_ID,\r\n//       docId: COLLECTION_ID,\r\n//       isSystem: true,\r\n//       fields: [\r\n//         { type: \"string\", id: \"name\" },\r\n//         { type: \"string\", id: \"html\" },\r\n//         { type: \"json\", id: \"template\" },\r\n//         { id: \"createdAt\", type: \"date\", displayOnTable: true, isDefault: true },\r\n//         { id: \"modifiedAt\", type: \"date\", displayOnTable: true, isDefault: true },\r\n//         { id: \"docId\", type: \"string\", displayOnTable: true, isDefault: true },\r\n//       ],\r\n//     } as CollectionType;\r\n\r\n//     addDocument(COLLECTION_ID, colType);\r\n\r\n//     dispatch({ type: \"ADD_COLLECTION_TYPE\", payload: colType });\r\n//   };\r\n\r\n//   const closeEditor = () => {\r\n//     setOpenEditor(false);\r\n//     setEditTemplate(undefined);\r\n//   };\r\n\r\n//   return !emailsColType ? (\r\n//     <div className=\"w-full h-full flex\">\r\n//       <div className=\"m-auto\">\r\n//         <div className=\"text-center mb-4 text-28px font-medium text-white\">Emails</div>\r\n//         <Button onClick={onEnable} className=\"bg-fireck-4 hover:bg-fireck-4-hover h-34px\">\r\n//           Enable\r\n//         </Button>\r\n//       </div>\r\n//     </div>\r\n//   ) : (\r\n//     <div>\r\n//       <div className=\"flex justify-between flex-wrap mb-7\">\r\n//         <PageTitle className=\"mb-4 mr-4\">Emails</PageTitle>\r\n//         <Button\r\n//           onClick={() => setOpenEditor(true)}\r\n//           className=\"bg-fireck-4 hover:bg-fireck-4-hover h-34px mb-4 min-w-unset\"\r\n//         >\r\n//           <div className=\"flex items-center\">\r\n//             <AddRounded className=\"mr-3 text-xl\"></AddRounded>\r\n//             <span>Add template</span>\r\n//           </div>\r\n//         </Button>\r\n//       </div>\r\n//       {!templates.length ? (\r\n//         <EmptyScreen\r\n//           title=\"There are no templates\"\r\n//           buttonTitle=\"Create\"\r\n//           onCreate={() => setOpenEditor(true)}\r\n//         ></EmptyScreen>\r\n//       ) : (\r\n//         <div className=\"flex flex-wrap -mx-3\">\r\n//           {templates.map((x, i) => (\r\n//             <div key={`email-template-${i}`} className=\"lg:w-3/12 md:w-4/12 w-6/12 px-3\">\r\n//               <div className=\"w-full relative\">\r\n//                 <EmailTemplateCard\r\n//                   onOpen={() => {\r\n//                     setEditTemplate(x);\r\n//                     setOpenEditor(true);\r\n//                   }}\r\n//                   onDelete={async () => {\r\n//                     if (\r\n//                       await confirm({\r\n//                         confirmation: \"Do you really want to delete template?\",\r\n//                       })\r\n//                     ) {\r\n//                       setTemplates((prev) => {\r\n//                         let arr = [...prev];\r\n//                         arr.splice(i, 1);\r\n//                         return arr;\r\n//                       });\r\n//                       deleteDocument(\"EmailTemplatesReservedCollection\", x.docId);\r\n//                     }\r\n//                   }}\r\n//                   windowWidth={windowWidth}\r\n//                   name={x.name}\r\n//                   html={x.html}\r\n//                 ></EmailTemplateCard>\r\n//               </div>\r\n//             </div>\r\n//           ))}\r\n//         </div>\r\n//       )}\r\n//       {!openEditor ? null : (\r\n//         <EmailEditorModal\r\n//           onSave={async (template: any) => {\r\n//             if (template.docId) {\r\n//               updateDocument(\"EmailTemplatesReservedCollection\", template.docId, template);\r\n//               setTemplates((prev) => {\r\n//                 let arr = [...prev];\r\n//                 const index = arr.findIndex((x) => x.docId === template.docId);\r\n//                 if (index === -1) return prev;\r\n//                 arr[index] = template;\r\n//                 return arr;\r\n//               });\r\n//             } else {\r\n//               try {\r\n//                 const res = await addDocument(\"EmailTemplatesReservedCollection\", template);\r\n//                 setTemplates((prev) => [res, ...prev]);\r\n//               } catch (error) {\r\n//                 console.log(error);\r\n//               }\r\n//             }\r\n\r\n//             closeEditor();\r\n//           }}\r\n//           onClose={closeEditor}\r\n//           editTemplate={editTemplate}\r\n//         ></EmailEditorModal>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Emails;\r\n\r\nconst a = () => {\r\n  return <div></div>;\r\n};\r\n\r\nexport default a;\r\n"],"sourceRoot":""}