{"version":3,"sources":["pages/Webhooks/WebhookModal.tsx","pages/Webhooks/index.tsx","components/CallComponent.tsx","components/Select.tsx","components/Label.tsx","hooks/useFetch.ts","components/TableElements/CollectionTable.tsx","components/TableElements/AddFilter.tsx","components/TooltipChild.tsx","components/TableElements/FilesCell/MediaField.tsx","components/TableElements/FilesCell/index.tsx","components/SettingsPage.tsx"],"names":["events","methods","WebhookModal","onValue","initialValue","open","onClose","collectionTypeDocId","useFormik","onSubmit","vals","a","resetForm","enableReinitialize","initialValues","event","method","url","validate","errors","Object","keys","forEach","x","values","handleChange","submitCount","handleSubmit","isSubmitting","Modal","className","onMouseDown","e","stopPropagation","style","maxWidth","onClick","Label","ground","error","Select","name","onChange","value","options","label","map","Input","onKeyDown","key","preventDefault","placeholder","Button","disabled","Webhooks","collectionTypes","useSelector","state","webhookColType","find","docId","COLLECTION_IDS","WEBHOOKS","useHistory","useState","modalOpen","setModalOpen","editWebhook","setEditWebhook","tableRefreshCounter","setTableRefreshCounter","filters","setFilters","setCollectionTypeDocId","colType","notify","useNotify","useEffect","length","fieldId","operator","hidden","undefined","val","dataProvider","updateDocument","res","addDocument","variant","prev","SettingsPage","entityContent","CollectionTable","onEdit","doc","collectionType","selectedEntityId","entities","onSelectEntity","entity","enitityPlural","entityButtons","type","callComponent","Component","props","Promise","resolve","reject","wrapper","document","getElementById","appendChild","createElement","ReactDOM","render","store","client","queryClient","proceed","unmountComponentAtNode","parentNode","removeChild","WarningIcon","React","forwardRef","ref","size","mainClasses","classNames","spellCheck","i","title","placement","memo","fontSize","children","toLowerCase","classes","tooltip","tooltipArrow","useFetch","collectionId","orderBy","inView","getOptions","useCallback","f","where","direction","populateRef","useInfiniteQuery","pageParam","getCollection","startAfter","keepPreviousData","getNextPageParam","lastPage","pages","lastDoc","data","fetchNextPage","hasNextPage","docs","reduce","b","Table","onPick","blackList","singleSelect","valueFormatters","_filters","_onEdit","hideFilters","history","fields","filter","field","displayOnTable","selected","setSelected","setOrderBy","endIsInView","setEndIsInView","id","onDeleteSelected","confirm","confirmation","CollectionsManager","deleteMultipleDocuments","includes","push","onOrder","selectHandler","checked","arr","index","findIndex","splice","formatValue","moment","format","toString","substring","AddFilter","uncapitalize","Checkbox","root","select","target","j","mediaSingle","FilesCell","file","files","colSpan","AddFilterModal","setOpen","TooltipChild","MediaField","src","Tooltip","arrow","alt","window","backgroundImage","Files","useRef","Math","random","slice","onAddEntity","onInvokeEntityEdit","search","setSearch","width","maxHeight","autoHide"],"mappings":"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","file":"static/js/10.4b2fed62.chunk.js","sourcesContent":["import Modal from \"@material-ui/core/Modal\";\r\nimport Input from \"components/Input\";\r\nimport Select from \"components/Select\";\r\nimport Button from \"components/Button\";\r\nimport { WebhookDocument } from \"utils/interfaces\";\r\nimport React from \"react\";\r\nimport { useFormik } from \"formik\";\r\nimport Label from \"components/Label\";\r\nimport CloseRounded from \"@material-ui/icons/CloseRounded\";\r\n\r\nexport interface WebhookModalProps {\r\n  onValue: (val: Partial<WebhookDocument>) => void;\r\n  initialValue?: WebhookDocument;\r\n  open: boolean;\r\n  onClose: () => void;\r\n  collectionTypeDocId: string;\r\n}\r\n\r\nconst events = [\"find\", \"find one\", \"create\", \"update\", \"delete\"];\r\nconst methods = [\"GET\", \"POST\", \"PUT\", \"PATCH\", \"DELETE\"];\r\n\r\nconst WebhookModal: React.FC<WebhookModalProps> = ({\r\n  onValue,\r\n  initialValue,\r\n  open,\r\n  onClose,\r\n  collectionTypeDocId,\r\n}) => {\r\n  const { values, errors, handleChange, submitCount, handleSubmit, isSubmitting } = useFormik({\r\n    onSubmit: async (vals, { resetForm }) => {\r\n      onValue(vals);\r\n      onClose();\r\n      resetForm();\r\n    },\r\n    enableReinitialize: true,\r\n    initialValues: initialValue || {\r\n      event: \"\",\r\n      method: \"\",\r\n      url: \"\",\r\n      collectionTypeDocId: collectionTypeDocId,\r\n    },\r\n    validate: (vals: any) => {\r\n      let errors: any = {};\r\n      Object.keys(vals).forEach((x) => {\r\n        if (!vals[x]) {\r\n          errors[x] = \"Required\";\r\n        }\r\n      });\r\n      return errors;\r\n    },\r\n  });\r\n\r\n  return !open ? null : (\r\n    <Modal open={open}>\r\n      <div className=\"fixed left-0 top-0 w-full h-full flex p-7\" onMouseDown={onClose}>\r\n        <div\r\n          onMouseDown={(e) => e.stopPropagation()}\r\n          className=\"bg-white rounded p-7 m-auto relative animate-littlemoveup\"\r\n          style={{ maxWidth: 600 }}\r\n        >\r\n          <CloseRounded\r\n            className=\"absolute top-0 right-0 cursor-pointer\"\r\n            onClick={onClose}\r\n          ></CloseRounded>\r\n          <div className=\"flex flex-wrap -mx-2 mb-4\">\r\n            <div className=\"sm:w-1/3 w-full mb-3 px-2\">\r\n              <Label ground=\"Dialog\" className=\"mb-2\" error={submitCount > 0 ? errors.event : null}>\r\n                Event\r\n              </Label>\r\n              <Select\r\n                ground=\"Dialog\"\r\n                className=\"h-34px\"\r\n                name=\"event\"\r\n                onChange={handleChange}\r\n                value={values.event}\r\n                options={[\r\n                  { value: \"\", label: \"Select\" },\r\n                  ...events.map((x) => ({ value: x, label: x })),\r\n                ]}\r\n              ></Select>\r\n            </div>\r\n            <div className=\"sm:w-1/3 w-full mb-3 px-2\">\r\n              <Label\r\n                ground=\"Dialog\"\r\n                className=\"mb-2\"\r\n                error={submitCount > 0 ? errors.method : null}\r\n              >\r\n                Method\r\n              </Label>\r\n              <Select\r\n                className=\"h-34px\"\r\n                ground=\"Dialog\"\r\n                name=\"method\"\r\n                onChange={handleChange}\r\n                value={values.method}\r\n                options={[\r\n                  { value: \"\", label: \"Select\" },\r\n                  ...methods.map((x) => ({ value: x, label: x })),\r\n                ]}\r\n              ></Select>\r\n            </div>\r\n            <div className=\"sm:w-1/3 w-full mb-3 px-2\">\r\n              <Label\r\n                ground=\"Dialog\"\r\n                className=\"mb-2 text-black\"\r\n                error={submitCount > 0 ? errors.url : null}\r\n              >\r\n                Url\r\n              </Label>\r\n              <Input\r\n                onKeyDown={(e) => {\r\n                  if (e.key === \"Enter\") {\r\n                    e.preventDefault();\r\n                    handleSubmit();\r\n                  }\r\n                }}\r\n                ground=\"Dialog\"\r\n                placeholder={\"url\"}\r\n                className=\"placeholder-black h-34px\"\r\n                value={values.url}\r\n                onChange={handleChange}\r\n                name=\"url\"\r\n              ></Input>\r\n            </div>\r\n          </div>\r\n          <div className=\"flex justify-end\">\r\n            <Button\r\n              disabled={isSubmitting}\r\n              onClick={() => handleSubmit()}\r\n              className=\"primaryBackground buttonPrimaryTextColor h-34px\"\r\n            >\r\n              {initialValue ? \"Save\" : \"Add\"}\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default WebhookModal;\r\n","import { useSelector } from \"react-redux\";\r\nimport { RootState } from \"store\";\r\nimport { WebhookDocument } from \"utils/interfaces\";\r\nimport SettingsPage from \"components/SettingsPage\";\r\nimport CollectionTable, { FilterType } from \"components/TableElements/CollectionTable\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Button from \"components/Button\";\r\nimport WebhookModal from \"./WebhookModal\";\r\nimport dataProvider from \"api/dataProvider\";\r\nimport { useNotify } from \"components/NotificationsProvider\";\r\nimport { COLLECTION_IDS } from \"utils/constants\";\r\n\r\nexport interface WebhooksProps {}\r\n\r\nconst Webhooks: React.FC<WebhooksProps> = () => {\r\n  const collectionTypes = useSelector((state: RootState) => state.collectionTypes);\r\n  const webhookColType = collectionTypes.find((x) => x.docId === COLLECTION_IDS.WEBHOOKS);\r\n  const history = useHistory();\r\n  const [modalOpen, setModalOpen] = useState(false);\r\n  const [editWebhook, setEditWebhook] = useState<WebhookDocument>();\r\n  const [tableRefreshCounter, setTableRefreshCounter] = useState(0);\r\n  const [filters, setFilters] = useState<FilterType[]>([]);\r\n\r\n  const [collectionTypeDocId, setCollectionTypeDocId] = useState(\"\");\r\n  const colType = collectionTypes.find((x) => x.docId === collectionTypeDocId);\r\n  const notify = useNotify();\r\n\r\n  useEffect(() => {\r\n    if (collectionTypes.length) {\r\n      setCollectionTypeDocId(collectionTypes[0].docId);\r\n    }\r\n  }, [collectionTypes]);\r\n\r\n  useEffect(() => {\r\n    setFilters(\r\n      collectionTypeDocId\r\n        ? [\r\n            {\r\n              fieldId: \"collectionTypeDocId\",\r\n              operator: \"==\",\r\n              value: collectionTypeDocId,\r\n              hidden: true,\r\n            },\r\n          ]\r\n        : []\r\n    );\r\n  }, [colType]);\r\n\r\n  const closeModal = () => {\r\n    setModalOpen(false);\r\n    setEditWebhook(undefined);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {!colType ? null : (\r\n        <WebhookModal\r\n          collectionTypeDocId={collectionTypeDocId}\r\n          open={modalOpen}\r\n          initialValue={editWebhook}\r\n          onClose={closeModal}\r\n          onValue={async (val) => {\r\n            let res;\r\n            if (val.docId) {\r\n              res = await dataProvider.updateDocument(COLLECTION_IDS.WEBHOOKS, val.docId, val);\r\n            } else {\r\n              res = await dataProvider.addDocument(COLLECTION_IDS.WEBHOOKS, val);\r\n            }\r\n            if (res.error) {\r\n              notify(res.error, { variant: \"error\" });\r\n            } else {\r\n              setTableRefreshCounter((prev) => prev + 1);\r\n            }\r\n          }}\r\n        ></WebhookModal>\r\n      )}\r\n      <SettingsPage\r\n        entityContent={\r\n          webhookColType ? (\r\n            <CollectionTable\r\n              key={`webhooks-table-${\r\n                filters.length ? filters[0].value : \"\"\r\n              }-${tableRefreshCounter}`}\r\n              onEdit={(doc) => {\r\n                setEditWebhook(doc as WebhookDocument);\r\n                setModalOpen(true);\r\n              }}\r\n              ground=\"GroundContainer\"\r\n              collectionType={webhookColType}\r\n              filters={filters}\r\n            ></CollectionTable>\r\n          ) : (\r\n            <div></div>\r\n          )\r\n        }\r\n        selectedEntityId={collectionTypeDocId}\r\n        entities={collectionTypes}\r\n        onSelectEntity={(docId) => setCollectionTypeDocId(docId)}\r\n        entity=\"webhook\"\r\n        enitityPlural=\"webhooks\"\r\n        entityButtons={\r\n          <div className=\"flex\">\r\n            <Button\r\n              type=\"button\"\r\n              onClick={() => setModalOpen(true)}\r\n              className=\"buttonPrimaryBackground buttonPrimaryTextColor h-28px px-6 min-w-unset\"\r\n            >\r\n              Add hook\r\n            </Button>\r\n          </div>\r\n        }\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Webhooks;\r\n","import ReactDOM from \"react-dom\";\r\nimport React from \"react\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"store\";\r\nimport NotificationsProvider from \"components/NotificationsProvider\";\r\nimport { QueryClientProvider } from \"react-query\";\r\nimport { queryClient } from \"index\";\r\n\r\nexport interface CallableComponent<T> {\r\n  proceed: (v: T) => void;\r\n}\r\n\r\ninterface callComponentArgs<T> {\r\n  Component: React.FC<any>;\r\n  props: Omit<T, \"proceed\">;\r\n}\r\n\r\nexport function callComponent<T, RT>({ Component, props }: callComponentArgs<T>): Promise<RT> {\r\n  return new Promise((resolve, reject) => {\r\n    const wrapper = document.getElementById(\"root\")?.appendChild(document.createElement(\"div\"));\r\n\r\n    if (wrapper) {\r\n      ReactDOM.render(\r\n        <Provider store={store}>\r\n          <NotificationsProvider>\r\n            <QueryClientProvider client={queryClient}>\r\n              <Component\r\n                {...props}\r\n                proceed={(val: RT) => {\r\n                  ReactDOM.unmountComponentAtNode(wrapper);\r\n                  wrapper.parentNode?.removeChild(wrapper);\r\n                  resolve(val);\r\n                }}\r\n              />\r\n            </QueryClientProvider>\r\n          </NotificationsProvider>\r\n        </Provider>,\r\n        wrapper\r\n      );\r\n    }\r\n  });\r\n}\r\n","import { IoAlertCircleOutline } from \"react-icons/io5\";\r\nimport Tooltip from \"@mui/material/Tooltip\";\r\nimport React, { memo, SelectHTMLAttributes } from \"react\";\r\nimport classNames from \"classnames\";\r\nimport { GroundType } from \"utils/types\";\r\n\r\nconst WarningIcon = React.forwardRef(function MyComponent(props: any, ref: any) {\r\n  return (\r\n    <div {...props} ref={ref}>\r\n      <IoAlertCircleOutline className=\"text-red-FF0000\" size={20}></IoAlertCircleOutline>\r\n    </div>\r\n  );\r\n});\r\n\r\nexport interface SelectProps extends SelectHTMLAttributes<HTMLSelectElement> {\r\n  className?: string;\r\n  options: { label: string; value: string | number }[];\r\n  error?: string | boolean;\r\n  ground: GroundType;\r\n}\r\n\r\nconst Select: React.FC<SelectProps> = ({ className = \"\", options, error, ground, ...props }) => {\r\n  let mainClasses = `input${ground}TextColor input${ground}HoverBackground input${ground}FocusedTextColor input${ground}FocusedBackground input${ground}FocusedBorderColor input${ground}Background`;\r\n  return (\r\n    <div className={`${className} relative flex items-center`}>\r\n      <select\r\n        className={classNames(\"px-3 h-full border-2 border-solid w-full rounded outline-none\", {\r\n          \"border-red-FF0000\": error,\r\n          [mainClasses]: !error,\r\n        })}\r\n        {...props}\r\n        spellCheck={false}\r\n      >\r\n        {options.map((x, i) => (\r\n          <option data-testid={`select-option-${x.value}`} key={\"opt-\" + i} value={x.value}>\r\n            {x.label}\r\n          </option>\r\n        ))}\r\n      </select>\r\n      {error ? (\r\n        <Tooltip title={error} placement=\"top\">\r\n          <WarningIcon className=\"absolute right-2 my-auto w-auto\"></WarningIcon>\r\n        </Tooltip>\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default memo(Select);\r\n","import React from \"react\";\r\nimport ErrorRounded from \"@mui/icons-material/ErrorRounded\";\r\nimport Tooltip from \"@mui/material/Tooltip\";\r\nimport classNames from \"classnames\";\r\nimport { GroundType } from \"utils/types\";\r\n\r\nexport interface LabelProps {\r\n  error?: string | undefined | null;\r\n  className?: string;\r\n  children: any;\r\n  ground: GroundType;\r\n}\r\n\r\nconst WarningIcon = React.forwardRef(function MyComponent(props: any, ref: any) {\r\n  return (\r\n    <div {...props} ref={ref}>\r\n      <ErrorRounded className=\"text-red-500 text-xl\" fontSize=\"inherit\"></ErrorRounded>\r\n    </div>\r\n  );\r\n});\r\n\r\nconst Label: React.FC<LabelProps> = ({ className = \"\", children, error, ground }) => {\r\n  return (\r\n    <div\r\n      className={classNames(\r\n        `flex justify-between relative ${className}`,\r\n        `${ground.toLowerCase()}TextColor`\r\n      )}\r\n    >\r\n      <div>{children}</div>\r\n      {error ? (\r\n        <Tooltip\r\n          title={error}\r\n          placement=\"top\"\r\n          classes={{ tooltip: \"bg-red-500\", tooltipArrow: \"bg-red-500\" }}\r\n        >\r\n          <WarningIcon className=\"absolute right-2 my-auto w-auto\"></WarningIcon>\r\n        </Tooltip>\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Label;\r\n","import { useNotify } from \"components/NotificationsProvider\";\r\nimport { FilterType } from \"components/TableElements/CollectionTable\";\r\nimport { createIndex } from \"components/TableElements/CreateIndex\";\r\nimport { useEffect, useCallback } from \"react\";\r\nimport { Document, GetCollectionOptions } from \"utils/interfaces\";\r\nimport { useInfiniteQuery } from \"react-query\";\r\nimport dataProvider from \"api/dataProvider\";\r\n\r\ninterface UseFetchProps {\r\n  collectionId: string;\r\n  filters?: FilterType[];\r\n  orderBy?: { fieldId: string; direction: \"asc\" | \"desc\" };\r\n  inView: boolean;\r\n}\r\n\r\nconst useFetch = ({ collectionId, filters = [], orderBy, inView }: UseFetchProps) => {\r\n  const notify = useNotify();\r\n\r\n  const getOptions = useCallback(() => {\r\n    let options: GetCollectionOptions = { collectionId };\r\n\r\n    options.where = \"\";\r\n    options.orderBy = \"\";\r\n\r\n    filters.forEach((f, i) => {\r\n      options.where += (i > 0 ? \";\" : \"\") + f.fieldId + \",\" + f.operator + \",\" + f.value;\r\n      if (orderBy && orderBy.fieldId !== f.fieldId) {\r\n        options.orderBy += (options.orderBy ? \";\" : \"\") + f.fieldId;\r\n      }\r\n    });\r\n\r\n    if (orderBy) {\r\n      options.orderBy += (options.orderBy ? \";\" : \"\") + `${orderBy.fieldId},${orderBy.direction}`;\r\n    }\r\n    if (!orderBy && !filters.length) {\r\n      options.orderBy = \"createdAt,asc\";\r\n    }\r\n\r\n    options.populateRef = false;\r\n\r\n    return options;\r\n  }, [orderBy, filters, collectionId]);\r\n\r\n  const { data, error, fetchNextPage, hasNextPage } = useInfiniteQuery<Document[]>(\r\n    [collectionId, orderBy, filters],\r\n    ({ pageParam }) => {\r\n      return dataProvider.getCollection({ ...getOptions(), startAfter: pageParam });\r\n    },\r\n    {\r\n      keepPreviousData: true,\r\n      getNextPageParam: (lastPage, pages) => {\r\n        let lastDoc = lastPage?.length && lastPage.length === 10 ? lastPage[9] : null;\r\n        return lastDoc ? lastDoc[orderBy ? orderBy.fieldId : \"createdAt\"] : undefined;\r\n      },\r\n    }\r\n  );\r\n\r\n  const onError = (message: string) => {\r\n    if (message.includes(\"FAILED_PRECONDITION\")) {\r\n      createIndex(message.split(\"it here:\")[1]);\r\n    } else {\r\n      notify(message, { variant: \"error\" });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (inView && hasNextPage) {\r\n      fetchNextPage();\r\n    }\r\n  }, [inView, fetchNextPage, hasNextPage]);\r\n\r\n  return { docs: data?.pages.reduce((a, b) => [...a, ...b], []) || [] };\r\n};\r\n\r\nexport default useFetch;\r\n","import { Document } from \"utils/interfaces\";\r\nimport { CollectionType } from \"utils/interfaces\";\r\nimport { AnyField } from \"utils/types\";\r\nimport FilesCell from \"./FilesCell\";\r\nimport React, { useEffect } from \"react\";\r\nimport ExpandMoreRounded from \"@mui/icons-material/ExpandMoreRounded\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { confirm } from \"components/Confirm\";\r\nimport AddFilter from \"./AddFilter\";\r\nimport Button from \"components/Button\";\r\nimport SimpleBar from \"simplebar-react\";\r\nimport classNames from \"classnames\";\r\nimport useFetch from \"hooks/useFetch\";\r\nimport { InView } from \"react-intersection-observer\";\r\nimport Checkbox from \"@mui/material/Checkbox\";\r\nimport moment from \"moment\";\r\nimport CollectionsManager from \"facades/CollectionsManager\";\r\nimport { GroundType } from \"utils/types\";\r\nimport { uncapitalize } from \"helper\";\r\n\r\nexport interface TableProps {\r\n  collectionType: CollectionType;\r\n  onPick?: (a: Document[]) => void;\r\n  blackList?: string[];\r\n  singleSelect?: boolean;\r\n  valueFormatters?: { [key: string]: (val: any) => any };\r\n  ground: GroundType;\r\n  filters?: FilterType[];\r\n  onEdit?: (doc: Document) => void;\r\n  hideFilters?: boolean;\r\n}\r\n\r\nexport type FilterType = { fieldId: string; operator: string; value: string; hidden?: boolean };\r\n\r\nconst Table: React.FC<TableProps> = ({\r\n  collectionType,\r\n  onPick,\r\n  blackList = [],\r\n  singleSelect = false,\r\n  valueFormatters,\r\n  ground,\r\n  filters: _filters = [],\r\n  onEdit: _onEdit,\r\n  hideFilters = false,\r\n}) => {\r\n  const history = useHistory();\r\n\r\n  const [filters, setFilters] = React.useState<FilterType[]>([]);\r\n  const fields = collectionType.fields.filter((field) => field.displayOnTable);\r\n  const [selected, setSelected] = React.useState<string[]>([]);\r\n  const [orderBy, setOrderBy] = React.useState<{ fieldId: string; direction: \"asc\" | \"desc\" }>();\r\n  const [endIsInView, setEndIsInView] = React.useState(false);\r\n\r\n  const { docs } = useFetch({\r\n    collectionId: collectionType.id,\r\n    filters,\r\n    orderBy,\r\n    inView: endIsInView,\r\n  });\r\n\r\n  const onDeleteSelected = async () => {\r\n    if (await confirm({ confirmation: `Delete ${selected.length} documents?` })) {\r\n      CollectionsManager.deleteMultipleDocuments(\r\n        collectionType.id,\r\n        docs.filter((x) => selected.includes(x.docId))\r\n      );\r\n\r\n      setSelected([]);\r\n    }\r\n  };\r\n\r\n  const onEdit =\r\n    _onEdit ||\r\n    ((doc: Document) => {\r\n      history.push(`/collections/${collectionType.id}/edit/${doc.docId}`);\r\n    });\r\n\r\n  const onOrder = (field: AnyField) =>\r\n    orderBy?.fieldId !== field.id\r\n      ? () => {\r\n          setOrderBy({ fieldId: field.id, direction: \"asc\" });\r\n        }\r\n      : orderBy?.direction !== \"asc\"\r\n      ? () => setOrderBy(undefined)\r\n      : () => setOrderBy({ fieldId: field.id, direction: \"desc\" });\r\n\r\n  const selectAll = (select: boolean) => setSelected(select ? docs.map((x) => x.docId) : []);\r\n\r\n  const selectHandler = (docId: string, checked: boolean) => {\r\n    if (checked) {\r\n      if (singleSelect) {\r\n        setSelected([docId]);\r\n      } else {\r\n        setSelected((prev) => [...prev, docId]);\r\n      }\r\n\r\n      return;\r\n    }\r\n    setSelected((prev) => {\r\n      let arr = [...prev];\r\n      let index = arr.findIndex((x) => x === docId);\r\n      if (index != null) {\r\n        arr.splice(index, 1);\r\n      }\r\n      return arr;\r\n    });\r\n  };\r\n\r\n  const formatValue = (field: AnyField, value: any) => {\r\n    return field.type === \"date\"\r\n      ? moment(value).format(\"YYYY-MM-DD HH:mm\")\r\n      : valueFormatters && field.id in valueFormatters\r\n      ? valueFormatters[field.id](value)\r\n      : value.toString().substring(0, 40);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (_filters.length) {\r\n      setFilters((prev) => [...prev, ..._filters]);\r\n    }\r\n  }, [_filters]);\r\n\r\n  return (\r\n    <div className=\"h-full w-full flex-col flex\">\r\n      <div className=\"flex justify-between mb-3\">\r\n        {hideFilters ? null : (\r\n          <div className=\"flex flex-wrap\">\r\n            <AddFilter\r\n              ground={ground}\r\n              collectionType={collectionType}\r\n              onValue={(val: FilterType) => setFilters((prev) => [val, ...prev])}\r\n            ></AddFilter>\r\n            {filters.map((f, i) =>\r\n              f.hidden ? null : (\r\n                <div\r\n                  key={`f-${i}`}\r\n                  className={classNames(\r\n                    \"rounded min-h-28px border leading-28px pl-3 text-sm pr-3 flex mr-3 mb-3 relative\",\r\n                    `${uncapitalize(ground)}TextColor ${uncapitalize(ground)}BorderColor`\r\n                  )}\r\n                >\r\n                  {f.fieldId} {f.operator} {f.value}{\" \"}\r\n                  <span\r\n                    onClick={() =>\r\n                      setFilters((prev) => {\r\n                        let arr = [...prev];\r\n                        arr.splice(i, 1);\r\n                        return arr;\r\n                      })\r\n                    }\r\n                    className=\"text-xs leading-28px ml-3 cursor-pointer\"\r\n                  >\r\n                    ✕\r\n                  </span>\r\n                </div>\r\n              )\r\n            )}\r\n          </div>\r\n        )}\r\n\r\n        {!onPick ? (\r\n          <Button\r\n            onClick={onDeleteSelected}\r\n            disabled={selected.length === 0}\r\n            className={`px-7 mb-3 min-w-unset rounded h-28px ${\r\n              selected.length === 0\r\n                ? \"buttonDisabledBackground buttonDisabledTextColor cursor-default\"\r\n                : \"dangerBackground buttonDangerTextColor\"\r\n            } `}\r\n          >\r\n            Delete\r\n          </Button>\r\n        ) : (\r\n          <Button\r\n            onClick={() => onPick(docs.filter((x) => selected.includes(x.docId)))}\r\n            className={`h-28px min-w-unset rounded mb-3 px-7 ${\r\n              selected.length === 0\r\n                ? \"buttonDisabledBackground buttonDisabledTextColor cursor-default\"\r\n                : \"primaryBackground buttonPrimaryTextColor\"\r\n            } `}\r\n          >\r\n            Select\r\n          </Button>\r\n        )}\r\n      </div>\r\n      <div className={classNames(\"flex-grow h-0 -mt-3 rounded overflow-hidden bg-white\")}>\r\n        <SimpleBar className={`relative table${ground}Scrollbar h-full`}>\r\n          <table className=\"w-full text-center\">\r\n            <thead>\r\n              <tr className=\"whitespace-nowrap\">\r\n                <th className={`sticky top-0 table${ground}HeaderBackground z-10 px-1`}>\r\n                  {singleSelect ? null : (\r\n                    <Checkbox\r\n                      size=\"small\"\r\n                      classes={{ checked: \"tableCheckboxTextColor\", root: \"p-0\" }}\r\n                      checked={selected.length === docs.length}\r\n                      onChange={(e) => selectAll(e.target.checked)}\r\n                    ></Checkbox>\r\n                  )}\r\n                </th>\r\n                {fields.map((field, i) => (\r\n                  <th\r\n                    className={`font-medium sticky top-0 table${ground}HeaderBackground`}\r\n                    key={`th-${i}`}\r\n                  >\r\n                    <div className=\"flex items-center justify-center\">\r\n                      <div className=\"w-5\"></div>\r\n                      <div className=\"cursor-pointer select-none\" onClick={onOrder(field)}>\r\n                        {field.id}\r\n                      </div>\r\n                      <div className=\"w-5\">\r\n                        {orderBy?.fieldId === field.id ? (\r\n                          <ExpandMoreRounded\r\n                            fontSize=\"small\"\r\n                            className={`${\r\n                              orderBy?.direction === \"asc\" ? \"transform rotate-180\" : \"\"\r\n                            }`}\r\n                          ></ExpandMoreRounded>\r\n                        ) : null}\r\n                      </div>\r\n                    </div>\r\n                  </th>\r\n                ))}\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {docs.map((doc, i) =>\r\n                blackList.includes(doc.docId) ? null : (\r\n                  <tr\r\n                    onClick={() =>\r\n                      onPick ? selectHandler(doc.docId, !selected.includes(doc.docId)) : onEdit(doc)\r\n                    }\r\n                    key={`row-${i}`}\r\n                    className={`cursor-pointer table${ground}RowHoverTextColor table${ground}RowHoverBackground`}\r\n                  >\r\n                    <td className=\"px-1\" onClick={(e) => e.stopPropagation()}>\r\n                      <Checkbox\r\n                        size=\"small\"\r\n                        classes={{ checked: \"tableCheckboxTextColor\", root: \"p-0\" }}\r\n                        checked={selected.includes(doc.docId)}\r\n                        onChange={(e) => selectHandler(doc.docId, e.target.checked)}\r\n                      ></Checkbox>\r\n                    </td>\r\n                    {fields.map((field, j) => (\r\n                      <td key={`row-${i}-col-${j}`} className=\"px-2\">\r\n                        {doc[field.id] != null ? (\r\n                          field.type === \"media\" ? (\r\n                            field.mediaSingle ? (\r\n                              <FilesCell file={doc[field.id]}></FilesCell>\r\n                            ) : (\r\n                              <FilesCell files={doc[field.id]} />\r\n                            )\r\n                          ) : (\r\n                            <div className=\"whitespace-nowrap\">\r\n                              {formatValue(field, doc[field.id])}\r\n                            </div>\r\n                          )\r\n                        ) : null}\r\n                      </td>\r\n                    ))}\r\n                  </tr>\r\n                )\r\n              )}\r\n              <tr>\r\n                <td colSpan={fields.length + 1}>\r\n                  <InView\r\n                    onChange={async (inView) => {\r\n                      setEndIsInView(inView);\r\n                    }}\r\n                  >\r\n                    <div className=\"w-full\"></div>\r\n                  </InView>\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n\r\n          <div></div>\r\n        </SimpleBar>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Table;\r\n","import Modal from \"@mui/material/Modal\";\r\nimport Input from \"components/Input\";\r\nimport Select from \"components/Select\";\r\nimport Button from \"components/Button\";\r\nimport { CollectionType } from \"utils/interfaces\";\r\nimport React from \"react\";\r\nimport { useFormik } from \"formik\";\r\nimport Label from \"components/Label\";\r\nimport CloseRounded from \"@mui/icons-material/CloseRounded\";\r\nimport { GroundType } from \"utils/types\";\r\n\r\nexport interface AddFilterModalProps {\r\n  collectionType: Pick<CollectionType, \"fields\">;\r\n  onValue: Function;\r\n  ground: GroundType;\r\n}\r\n\r\nconst AddFilterModal: React.FC<AddFilterModalProps> = ({ collectionType, onValue, ground }) => {\r\n  const operators = [\r\n    \"<\",\r\n    \"<=\",\r\n    \"==\",\r\n    \">\",\r\n    \">=\",\r\n    \"!=\",\r\n    \"array-contains\",\r\n    \"array-contains-any\",\r\n    \"in\",\r\n    \"not-in\",\r\n  ];\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const { values, errors, handleChange, submitCount, handleSubmit, isSubmitting } = useFormik({\r\n    onSubmit: async (vals, { resetForm }) => {\r\n      onValue(vals);\r\n      setOpen(false);\r\n      resetForm();\r\n    },\r\n    initialValues: {\r\n      value: \"\",\r\n      operator: \"\",\r\n      fieldId: \"\",\r\n    },\r\n    validate: (vals: any) => {\r\n      let errors: any = {};\r\n      Object.keys(vals).forEach((x) => {\r\n        if (!vals[x]) {\r\n          errors[x] = \"Required\";\r\n        }\r\n      });\r\n      return errors;\r\n    },\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <Button\r\n        onClick={() => setOpen(true)}\r\n        className=\"secondaryBackground buttonSecondaryTextColor min-w-unset flex items-center justify-center h-28px px-7 rounded text-sm mr-3 mb-3\"\r\n      >\r\n        Filters\r\n      </Button>\r\n      {!open ? null : (\r\n        <Modal open={open}>\r\n          <div\r\n            className=\"fixed left-0 top-0 w-full h-full flex p-7\"\r\n            onMouseDown={() => setOpen(false)}\r\n          >\r\n            <div\r\n              onMouseDown={(e) => e.stopPropagation()}\r\n              className=\"bg-white rounded p-7 m-auto relative animate-littlemoveup\"\r\n              style={{ maxWidth: 600 }}\r\n            >\r\n              <CloseRounded\r\n                className=\"absolute top-0 right-0 cursor-pointer\"\r\n                onClick={() => setOpen(false)}\r\n              ></CloseRounded>\r\n              <div className=\"flex flex-wrap -mx-2 mb-4\">\r\n                <div className=\"sm:w-1/3 w-full mb-3 px-2\">\r\n                  <Label\r\n                    ground=\"Dialog\"\r\n                    className=\"mb-2\"\r\n                    error={submitCount > 0 ? errors.fieldId : null}\r\n                  >\r\n                    Field\r\n                  </Label>\r\n                  <Select\r\n                    className=\"h-34px\"\r\n                    ground=\"Dialog\"\r\n                    name=\"fieldId\"\r\n                    onChange={handleChange}\r\n                    value={values.fieldId}\r\n                    options={[\r\n                      { value: \"\", label: \"Select\" },\r\n                      ...collectionType.fields.map((x) => ({ value: x.id, label: x.id })),\r\n                    ]}\r\n                  ></Select>\r\n                </div>\r\n                <div className=\"sm:w-1/3 w-full mb-3 px-2\">\r\n                  <Label\r\n                    ground=\"Dialog\"\r\n                    className=\"mb-2\"\r\n                    error={submitCount > 0 ? errors.operator : null}\r\n                  >\r\n                    Operator\r\n                  </Label>\r\n                  <Select\r\n                    className=\"h-34px\"\r\n                    ground=\"Dialog\"\r\n                    name=\"operator\"\r\n                    onChange={handleChange}\r\n                    value={values.operator}\r\n                    options={[\r\n                      { value: \"\", label: \"Select\" },\r\n                      ...operators.map((x) => ({ value: x, label: x })),\r\n                    ]}\r\n                  ></Select>\r\n                </div>\r\n                <div className=\"sm:w-1/3 w-full mb-3 px-2\">\r\n                  <Label\r\n                    ground=\"Dialog\"\r\n                    className=\"mb-2 text-black\"\r\n                    error={submitCount > 0 ? errors.value : null}\r\n                  >\r\n                    Value\r\n                  </Label>\r\n                  <Input\r\n                    onKeyDown={(e) => {\r\n                      if (e.key === \"Enter\") {\r\n                        e.preventDefault();\r\n                        handleSubmit();\r\n                      }\r\n                    }}\r\n                    ground=\"Dialog\"\r\n                    placeholder={\r\n                      [\"in\", \"not in\", \"array-contains-any\"].includes(values.operator)\r\n                        ? \"value, value, value\"\r\n                        : \"value\"\r\n                    }\r\n                    className=\"placeholder-black h-34px\"\r\n                    value={values.value}\r\n                    onChange={handleChange}\r\n                    name=\"value\"\r\n                  ></Input>\r\n                </div>\r\n              </div>\r\n              <div className=\"flex justify-end\">\r\n                <Button\r\n                  disabled={isSubmitting}\r\n                  onClick={() => handleSubmit()}\r\n                  className={`primaryBackground buttonPrimaryTextColor h-28px min-w-unset px-8`}\r\n                >\r\n                  Add\r\n                </Button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Modal>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AddFilterModal;\r\n","import { forwardRef } from \"react\";\r\n\r\nconst TooltipChild = forwardRef(function MyComponent(props: any, ref: any) {\r\n  return <div {...props} ref={ref}></div>;\r\n});\r\n\r\nexport default TooltipChild;\r\n","import TooltipChild from \"components/TooltipChild\";\r\nimport Tooltip from \"@mui/material/Tooltip\";\r\n\r\ninterface MediaFieldProps {\r\n  src: string;\r\n}\r\n\r\nconst MediaField: React.FC<MediaFieldProps> = ({ src }) => {\r\n  return (\r\n    <Tooltip\r\n      arrow\r\n      title={\r\n        <div className=\"p-1\">\r\n          <img src={src} className=\"max-w-136px max-h-136px w-auto h-auto\" alt=\"\" />\r\n        </div>\r\n      }\r\n      placement=\"top\"\r\n      classes={{\r\n        tooltip: \"font-poppins text-xs p-0 rounded bg-white shadow-md\",\r\n        arrow: \"text-white\",\r\n      }}\r\n    >\r\n      <TooltipChild>\r\n        <div\r\n          onClick={(e) => {\r\n            e.stopPropagation();\r\n            window.open(src, \"_blank\");\r\n          }}\r\n          className=\"group w-4 h-4 relative flex items-center justify-center rounded hover:bg-gray-535371 hover:bg-opacity-5 cursor-pointer\"\r\n        >\r\n          <div\r\n            className=\"relative w-4 h-4 rounded-full bg-center bg-cover pointer-events-none\"\r\n            style={{ backgroundImage: `url(${src})` }}\r\n          ></div>\r\n        </div>\r\n      </TooltipChild>\r\n    </Tooltip>\r\n  );\r\n};\r\n\r\nexport default MediaField;\r\n","import React from \"react\";\r\nimport MediaField from \"./MediaField\";\r\n\r\nexport interface FilesProps {\r\n  files?: string[];\r\n  file?: string;\r\n}\r\n\r\nconst Files: React.FC<FilesProps> = ({ files, file }) => {\r\n  const id = React.useRef<number>(Math.random());\r\n\r\n  return (\r\n    <div className=\"flex justify-center\">\r\n      {(files ? files : file ? [file] : []).slice(0, 4).map((f, i) => (\r\n        <div key={`${id}-file-${i}`} className=\"mr-0.5\">\r\n          <MediaField src={f}></MediaField>\r\n        </div>\r\n      ))}\r\n      {files && files.length > 4 ? (\r\n        <div className=\"relative\">\r\n          <div className=\"w-4 h-4 rounded-full bg-fireck-4 text-10px flex items-center justify-center\">\r\n            {files.length - 4}+\r\n          </div>\r\n        </div>\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Files;\r\n","import Button from \"components/Button\";\r\nimport React, { ReactElement, useState } from \"react\";\r\nimport Edit from \"@material-ui/icons/EditRounded\";\r\nimport Select from \"components/Select\";\r\nimport SimpleBar from \"simplebar-react\";\r\nimport AddRounded from \"@material-ui/icons/AddRounded\";\r\nimport SearchRounded from \"@material-ui/icons/SearchRounded\";\r\n\r\nexport interface SettingsPageProps {\r\n  entity: string;\r\n  enitityPlural: string;\r\n  onAddEntity?: () => void;\r\n  entities: { name: string; docId: string }[];\r\n  onSelectEntity: (id: string) => void;\r\n  entityButtons: ReactElement;\r\n  onInvokeEntityEdit?: () => void;\r\n  entityContent: ReactElement;\r\n  selectedEntityId: string;\r\n}\r\n\r\nexport const reorder = (list: any[], startIndex: number, endIndex: number) => {\r\n  const result = Array.from(list);\r\n  const [removed] = result.splice(startIndex, 1);\r\n  result.splice(endIndex, 0, removed);\r\n\r\n  return result;\r\n};\r\n\r\nconst SettingsPage: React.FC<SettingsPageProps> = React.memo(\r\n  ({\r\n    entity,\r\n    enitityPlural,\r\n    onAddEntity,\r\n    entities,\r\n    onSelectEntity,\r\n    entityButtons,\r\n    onInvokeEntityEdit,\r\n    entityContent,\r\n    selectedEntityId,\r\n  }) => {\r\n    const [search, setSearch] = useState(\"\");\r\n\r\n    return (\r\n      <div className=\"h-full flex flex-col\">\r\n        <div className=\"flex flex-wrap justify-between mb-4\">\r\n          <div className=\"font-medium text-27px leading-none mb-4 mr-4 capitalize\">\r\n            {enitityPlural}\r\n          </div>\r\n          {!onAddEntity ? null : (\r\n            <Button\r\n              data-testid=\"add-collection-btn\"\r\n              onClick={onAddEntity}\r\n              className=\"primaryBackground buttonPrimaryTextColor mb-4 min-w-unset\"\r\n            >\r\n              <div className=\"flex items-center pointer-events-none h-34px\">\r\n                <AddRounded className=\"mr-2 text-lg\" fontSize=\"inherit\"></AddRounded>\r\n                <span className=\"hidden md:block\">Add {entity}</span>\r\n                <span className=\"md:hidden\">Add</span>\r\n              </div>\r\n            </Button>\r\n          )}\r\n        </div>\r\n        {!entities.length ? (\r\n          <div></div>\r\n        ) : (\r\n          <div className=\"flex flex-wrap lg:flex-nowrap w-full flex-grow\">\r\n            <div>\r\n              <div className=\"relative mb-3 mr-4 hidden lg:block\" style={{ width: 180 }}>\r\n                <div className=\"h-6 flex items-center left-1 top-0 absolute\">\r\n                  <SearchRounded\r\n                    fontSize=\"inherit\"\r\n                    className=\"text-base text-gray-500 pointer-events-none\"\r\n                  ></SearchRounded>\r\n                </div>\r\n\r\n                <input\r\n                  type=\"search\"\r\n                  spellCheck={false}\r\n                  placeholder=\"Search\"\r\n                  className=\"placeholder-gray-500 pl-7 h-6 leading-6 hover:bg-fireck-3 focus:bg-fireck-3 w-full text-sm px-2 border-white rounded bg-transparent outline-none focus:outline-none\"\r\n                  value={search}\r\n                  onChange={(e) => setSearch(e.target.value)}\r\n                ></input>\r\n              </div>\r\n              <SimpleBar\r\n                style={{ maxHeight: 230 }}\r\n                className=\"max-w-192px w-full flex-shrink-0 mr-4 hidden lg:block groundScrollbar pr-3\"\r\n                autoHide={false}\r\n              >\r\n                {entities\r\n                  .filter((x) => !search || x.name.toLowerCase().includes(search.toLowerCase()))\r\n                  .map((x) => (\r\n                    <div\r\n                      data-testid={`entity-name-${x.name}`}\r\n                      onClick={() => {\r\n                        onSelectEntity(x.docId);\r\n                      }}\r\n                      key={`entity-${x.docId}`}\r\n                      className={`mb-1 capitalize truncate select-none cursor-pointer ${\r\n                        selectedEntityId === x.docId\r\n                          ? \"primaryBackground buttonPrimaryTextColor\"\r\n                          : \"groundHoverBackground\"\r\n                      } rounded h-28px leading-28px px-3`}\r\n                    >\r\n                      {x.name}\r\n                    </div>\r\n                  ))}\r\n              </SimpleBar>\r\n            </div>\r\n\r\n            <div className=\"lg:flex-grow w-full rounded-lg groundContainerBackground p-3 md:p-7 flex flex-col\">\r\n              <div className=\"flex justify-between mb-3 flex-wrap\">\r\n                <div className=\"font-medium text-22px capitalize mb-3 mr-3\">\r\n                  <span className=\"hidden lg:inline-block\">\r\n                    {entities.find((x) => x.docId === selectedEntityId)?.name || \"\"}\r\n                  </span>\r\n                  <div className=\"lg:hidden inline-block text-base\">\r\n                    <Select\r\n                      className=\"h-28px\"\r\n                      ground=\"GroundContainer\"\r\n                      onChange={(e) => onSelectEntity(e.target.value)}\r\n                      value={selectedEntityId}\r\n                      options={entities.map((x) => ({ label: x.name, value: x.docId }))}\r\n                    ></Select>\r\n                  </div>\r\n                  {!onInvokeEntityEdit ? null : (\r\n                    <Edit\r\n                      data-testid=\"edit-collection-btn\"\r\n                      onClick={onInvokeEntityEdit}\r\n                      className=\"ml-3 text-lg cursor-pointer\"\r\n                      fontSize=\"inherit\"\r\n                    ></Edit>\r\n                  )}\r\n                </div>\r\n                {entityButtons}\r\n              </div>\r\n\r\n              <div className=\"flex-grow h-0\">{entityContent}</div>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n);\r\n\r\nexport default SettingsPage;\r\n"],"sourceRoot":""}