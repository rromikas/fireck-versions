{"version":3,"sources":["api/callComponent.tsx","components/Select.tsx","helper.ts","components/Label.tsx","hooks/useFetch.ts","components/TableElements/CollectionTable.tsx","components/TableElements/AddFilter.tsx","components/TooltipChild.tsx","components/TableElements/FilesCell/MediaField.tsx","components/TableElements/FilesCell/index.tsx","components/PageTitle.tsx","facades/FilesManager.ts","api/files.ts","pages/Media/index.tsx"],"names":["callComponent","Component","props","Promise","resolve","reject","wrapper","document","getElementById","appendChild","createElement","ReactDOM","render","store","client","queryClient","proceed","val","unmountComponentAtNode","parentNode","removeChild","WarningIcon","React","forwardRef","ref","className","size","Select","options","error","ground","mainClasses","classNames","spellCheck","map","x","i","value","label","title","placement","formatBytes","a","b","c","d","Math","floor","log","parseFloat","pow","toFixed","getFileExtension","file","mime","extension","type","name","split","pop","er","uncapitalize","string","charAt","toLowerCase","slice","fontSize","Label","children","useFetch","collectionId","filters","orderBy","inView","getOptions","useNotify","useCallback","forEach","f","where","fieldId","operator","direction","length","populateRef","useInfiniteQuery","pageParam","CollectionsManager","getCollection","startAfter","keepPreviousData","getNextPageParam","lastPage","pages","lastDoc","undefined","data","fetchNextPage","hasNextPage","useEffect","docs","reduce","Table","collectionType","onPick","blackList","singleSelect","valueFormatters","_filters","_onEdit","onEdit","hideFilters","history","useHistory","useState","setFilters","fields","filter","field","displayOnTable","selected","setSelected","setOrderBy","endIsInView","setEndIsInView","id","onDeleteSelected","confirm","confirmation","deleteMultipleDocuments","includes","docId","doc","push","onOrder","selectHandler","checked","prev","arr","index","findIndex","splice","formatValue","moment","format","toString","substring","AddFilter","onValue","hidden","onClick","Button","disabled","autoHide","Checkbox","classes","root","onChange","e","select","target","stopPropagation","j","mediaSingle","FilesCell","files","colSpan","AddFilterModal","open","setOpen","useFormik","onSubmit","vals","resetForm","initialValues","validate","errors","Object","keys","values","handleChange","submitCount","handleSubmit","isSubmitting","onMouseDown","style","maxWidth","onKeyDown","key","preventDefault","placeholder","TooltipChild","MediaField","src","Tooltip","arrow","alt","tooltip","backgroundImage","Files","useRef","random","PageTitle","rest","FilesManager","storage","getStorage","nameParts","fileName","shortuuid","generate","fileRef","uploadTask","uploadBytesResumable","on","snapshot","getDownloadURL","then","downloadUrl","path","deleteObject","uploadFile","upload","res","fileDetails","url","storagePath","addDocument","MediaDocumentFormatters","window","Media","uploadRef","notify","refreshCounter","setCounter","useSelector","state","collectionTypes","find","multiple","dispatch","payload","uploaded","variant","current","click"],"mappings":"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","file":"static/js/10.c8f22dc8.chunk.js","sourcesContent":["import ReactDOM from \"react-dom\";\r\nimport React from \"react\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"store\";\r\nimport NotificationsProvider from \"components/NotificationsProvider\";\r\nimport { QueryClientProvider } from \"react-query\";\r\nimport { queryClient } from \"index\";\r\n\r\nexport interface CallableComponent<T> {\r\n  proceed: (v: T) => void;\r\n}\r\n\r\ninterface callComponentArgs<T> {\r\n  Component: React.FC<any>;\r\n  props: Omit<T, \"proceed\">;\r\n}\r\n\r\nexport function callComponent<T, RT>({ Component, props }: callComponentArgs<T>): Promise<RT> {\r\n  return new Promise((resolve, reject) => {\r\n    const wrapper = document.getElementById(\"root\")?.appendChild(document.createElement(\"div\"));\r\n\r\n    if (wrapper) {\r\n      ReactDOM.render(\r\n        <Provider store={store}>\r\n          <NotificationsProvider>\r\n            <QueryClientProvider client={queryClient}>\r\n              <Component\r\n                {...props}\r\n                proceed={(val: RT) => {\r\n                  ReactDOM.unmountComponentAtNode(wrapper);\r\n                  wrapper.parentNode?.removeChild(wrapper);\r\n                  resolve(val);\r\n                }}\r\n              />\r\n            </QueryClientProvider>\r\n          </NotificationsProvider>\r\n        </Provider>,\r\n        wrapper\r\n      );\r\n    }\r\n  });\r\n}\r\n","import { IoAlertCircleOutline } from \"react-icons/io5\";\r\nimport Tooltip from \"@mui/material/Tooltip\";\r\nimport React, { SelectHTMLAttributes } from \"react\";\r\nimport classNames from \"classnames\";\r\nimport { GroundType } from \"utils/types\";\r\n\r\nconst WarningIcon = React.forwardRef(function MyComponent(props: any, ref: any) {\r\n  return (\r\n    <div {...props} ref={ref}>\r\n      <IoAlertCircleOutline className=\"text-red-FF0000\" size={20}></IoAlertCircleOutline>\r\n    </div>\r\n  );\r\n});\r\n\r\nexport interface SelectProps extends SelectHTMLAttributes<HTMLSelectElement> {\r\n  className?: string;\r\n  options: { label: string; value: string | number }[];\r\n  error?: string | boolean;\r\n  ground: GroundType;\r\n}\r\n\r\nconst Select: React.FC<SelectProps> = ({ className = \"\", options, error, ground, ...props }) => {\r\n  let mainClasses = `input${ground}TextColor input${ground}HoverBackground input${ground}FocusedTextColor input${ground}FocusedBackground input${ground}FocusedBorderColor input${ground}Background`;\r\n  return (\r\n    <div className={`${className} relative flex items-center`}>\r\n      <select\r\n        className={classNames(\"px-3 h-full border-2 border-solid w-full rounded outline-none\", {\r\n          \"border-red-FF0000\": error,\r\n          [mainClasses]: !error,\r\n        })}\r\n        {...props}\r\n        spellCheck={false}\r\n      >\r\n        {options.map((x, i) => (\r\n          <option data-testid={`select-option-${x.value}`} key={\"opt-\" + i} value={x.value}>\r\n            {x.label}\r\n          </option>\r\n        ))}\r\n      </select>\r\n      {error ? (\r\n        <Tooltip title={error} placement=\"top\">\r\n          <WarningIcon className=\"absolute right-2 my-auto w-auto\"></WarningIcon>\r\n        </Tooltip>\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Select;\r\n","import mime from \"mime-types\";\r\n\r\nexport function formatBytes(a: number, b = 2) {\r\n  if (0 === a) return \"0 Bytes\";\r\n  const c = 0 > b ? 0 : b,\r\n    d = Math.floor(Math.log(a) / Math.log(1024));\r\n  return (\r\n    parseFloat((a / Math.pow(1024, d)).toFixed(c)) +\r\n    \" \" +\r\n    [\"Bytes\", \"KB\", \"MB\", \"GB\", \"TB\", \"PB\", \"EB\", \"ZB\", \"YB\"][d]\r\n  );\r\n}\r\n\r\nexport function getFileExtension(file: File): string {\r\n  try {\r\n    return mime.extension(file.type) || file.name.split(\".\").pop() || \"unknown\";\r\n  } catch (er) {\r\n    return \"unknown\";\r\n  }\r\n}\r\n\r\nexport function uncapitalize(string: string) {\r\n  return string.charAt(0).toLowerCase() + string.slice(1);\r\n}\r\n","import React from \"react\";\r\nimport ErrorRounded from \"@mui/icons-material/ErrorRounded\";\r\nimport Tooltip from \"@mui/material/Tooltip\";\r\nimport classNames from \"classnames\";\r\nimport { GroundType } from \"utils/types\";\r\n\r\nexport interface LabelProps {\r\n  error?: string | undefined | null;\r\n  className?: string;\r\n  children: any;\r\n  ground: GroundType;\r\n}\r\n\r\nconst WarningIcon = React.forwardRef(function MyComponent(props: any, ref: any) {\r\n  return (\r\n    <div {...props} ref={ref}>\r\n      <ErrorRounded className=\"text-red-500 text-xl\" fontSize=\"inherit\"></ErrorRounded>\r\n    </div>\r\n  );\r\n});\r\n\r\nconst Label: React.FC<LabelProps> = ({ className = \"\", children, error, ground }) => {\r\n  return (\r\n    <div\r\n      className={classNames(\r\n        `flex justify-between relative ${className}`,\r\n        `${ground.toLowerCase()}TextColor`\r\n      )}\r\n    >\r\n      <div>{children}</div>\r\n      {error ? (\r\n        <Tooltip title={error} placement=\"top\">\r\n          <WarningIcon className=\"absolute right-2 my-auto w-auto\"></WarningIcon>\r\n        </Tooltip>\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Label;\r\n","import { useNotify } from \"components/NotificationsProvider\";\r\nimport { FilterType } from \"components/TableElements/CollectionTable\";\r\nimport { createIndex } from \"components/TableElements/CreateIndex\";\r\nimport { useEffect, useCallback } from \"react\";\r\nimport { Document, GetCollectionOptions } from \"utils/interfaces\";\r\nimport CollectionsManager from \"facades/CollectionsManager\";\r\nimport { useInfiniteQuery } from \"react-query\";\r\n\r\ninterface UseFetchProps {\r\n  collectionId: string;\r\n  filters?: FilterType[];\r\n  orderBy?: { fieldId: string; direction: \"asc\" | \"desc\" };\r\n  inView: boolean;\r\n}\r\n\r\nconst useFetch = ({ collectionId, filters = [], orderBy, inView }: UseFetchProps) => {\r\n  const notify = useNotify();\r\n\r\n  const getOptions = useCallback(() => {\r\n    let options: GetCollectionOptions = { collectionId };\r\n\r\n    options.where = \"\";\r\n    options.orderBy = \"\";\r\n\r\n    filters.forEach((f, i) => {\r\n      options.where += (i > 0 ? \";\" : \"\") + f.fieldId + \",\" + f.operator + \",\" + f.value;\r\n      if (orderBy && orderBy.fieldId !== f.fieldId) {\r\n        options.orderBy += (options.orderBy ? \";\" : \"\") + f.fieldId;\r\n      }\r\n    });\r\n\r\n    if (orderBy) {\r\n      options.orderBy += (options.orderBy ? \";\" : \"\") + `${orderBy.fieldId},${orderBy.direction}`;\r\n    }\r\n    if (!orderBy && !filters.length) {\r\n      options.orderBy = \"createdAt,asc\";\r\n    }\r\n\r\n    options.populateRef = false;\r\n\r\n    return options;\r\n  }, [orderBy, filters, collectionId]);\r\n\r\n  const { data, error, fetchNextPage, hasNextPage } = useInfiniteQuery<Document[]>(\r\n    [collectionId, orderBy, filters],\r\n    ({ pageParam }) => {\r\n      return CollectionsManager.getCollection({ ...getOptions(), startAfter: pageParam });\r\n    },\r\n    {\r\n      keepPreviousData: true,\r\n      getNextPageParam: (lastPage, pages) => {\r\n        let lastDoc = lastPage?.length && lastPage.length === 10 ? lastPage[9] : null;\r\n        return lastDoc ? lastDoc[orderBy ? orderBy.fieldId : \"createdAt\"] : undefined;\r\n      },\r\n    }\r\n  );\r\n\r\n  const onError = (message: string) => {\r\n    if (message.includes(\"FAILED_PRECONDITION\")) {\r\n      createIndex(message.split(\"it here:\")[1]);\r\n    } else {\r\n      notify(message, { variant: \"error\" });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (inView && hasNextPage) {\r\n      fetchNextPage();\r\n    }\r\n  }, [inView, fetchNextPage, hasNextPage]);\r\n\r\n  return { docs: data?.pages.reduce((a, b) => [...a, ...b], []) || [] };\r\n};\r\n\r\nexport default useFetch;\r\n","import { Document } from \"utils/interfaces\";\r\nimport { CollectionType, AnyField } from \"api/collectionTypes\";\r\nimport FilesCell from \"./FilesCell\";\r\nimport React, { useEffect } from \"react\";\r\nimport ExpandMoreRounded from \"@mui/icons-material/ExpandMoreRounded\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { confirm } from \"components/Confirm\";\r\nimport AddFilter from \"./AddFilter\";\r\nimport Button from \"components/Button\";\r\nimport SimpleBar from \"simplebar-react\";\r\nimport classNames from \"classnames\";\r\nimport useFetch from \"hooks/useFetch\";\r\nimport { InView } from \"react-intersection-observer\";\r\nimport Checkbox from \"@mui/material/Checkbox\";\r\nimport moment from \"moment\";\r\nimport CollectionsManager from \"facades/CollectionsManager\";\r\nimport { GroundType } from \"utils/types\";\r\nimport { uncapitalize } from \"helper\";\r\n\r\nexport interface TableProps {\r\n  collectionType: CollectionType;\r\n  onPick?: (a: Document[]) => void;\r\n  blackList?: string[];\r\n  singleSelect?: boolean;\r\n  valueFormatters?: { [key: string]: (val: any) => any };\r\n  ground: GroundType;\r\n  filters?: FilterType[];\r\n  onEdit?: (doc: Document) => void;\r\n  hideFilters?: boolean;\r\n}\r\n\r\nexport type FilterType = { fieldId: string; operator: string; value: string; hidden?: boolean };\r\n\r\nconst Table: React.FC<TableProps> = ({\r\n  collectionType,\r\n  onPick,\r\n  blackList = [],\r\n  singleSelect = false,\r\n  valueFormatters,\r\n  ground,\r\n  filters: _filters = [],\r\n  onEdit: _onEdit,\r\n  hideFilters = false,\r\n}) => {\r\n  const history = useHistory();\r\n\r\n  const [filters, setFilters] = React.useState<FilterType[]>([]);\r\n  const fields = collectionType.fields.filter((field) => field.displayOnTable);\r\n  const [selected, setSelected] = React.useState<string[]>([]);\r\n  const [orderBy, setOrderBy] = React.useState<{ fieldId: string; direction: \"asc\" | \"desc\" }>();\r\n  const [endIsInView, setEndIsInView] = React.useState(false);\r\n\r\n  const { docs } = useFetch({\r\n    collectionId: collectionType.id,\r\n    filters,\r\n    orderBy,\r\n    inView: endIsInView,\r\n  });\r\n\r\n  const onDeleteSelected = async () => {\r\n    if (await confirm({ confirmation: `Delete ${selected.length} documents?` })) {\r\n      CollectionsManager.deleteMultipleDocuments(\r\n        collectionType.id,\r\n        docs.filter((x) => selected.includes(x.docId))\r\n      );\r\n\r\n      setSelected([]);\r\n    }\r\n  };\r\n\r\n  const onEdit =\r\n    _onEdit ||\r\n    ((doc: Document) => {\r\n      history.push(`/collections/${collectionType.id}/edit/${doc.docId}`);\r\n    });\r\n\r\n  const onOrder = (field: AnyField) =>\r\n    orderBy?.fieldId !== field.id\r\n      ? () => {\r\n          setOrderBy({ fieldId: field.id, direction: \"asc\" });\r\n        }\r\n      : orderBy?.direction !== \"asc\"\r\n      ? () => setOrderBy(undefined)\r\n      : () => setOrderBy({ fieldId: field.id, direction: \"desc\" });\r\n\r\n  const selectAll = (select: boolean) => setSelected(select ? docs.map((x) => x.docId) : []);\r\n\r\n  const selectHandler = (docId: string, checked: boolean) => {\r\n    if (checked) {\r\n      if (singleSelect) {\r\n        setSelected([docId]);\r\n      } else {\r\n        setSelected((prev) => [...prev, docId]);\r\n      }\r\n\r\n      return;\r\n    }\r\n    setSelected((prev) => {\r\n      let arr = [...prev];\r\n      let index = arr.findIndex((x) => x === docId);\r\n      if (index != null) {\r\n        arr.splice(index, 1);\r\n      }\r\n      return arr;\r\n    });\r\n  };\r\n\r\n  const formatValue = (field: AnyField, value: any) => {\r\n    return field.type === \"date\"\r\n      ? moment(value).format(\"YYYY-MM-DD HH:mm\")\r\n      : valueFormatters && field.id in valueFormatters\r\n      ? valueFormatters[field.id](value)\r\n      : value.toString().substring(0, 40);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (_filters.length) {\r\n      setFilters((prev) => [...prev, ..._filters]);\r\n    }\r\n  }, [_filters]);\r\n\r\n  return (\r\n    <div className=\"h-full w-full flex-col flex\">\r\n      <div className=\"flex justify-between mb-3\">\r\n        {hideFilters ? null : (\r\n          <div className=\"flex flex-wrap\">\r\n            <AddFilter\r\n              ground={ground}\r\n              collectionType={collectionType}\r\n              onValue={(val: FilterType) => setFilters((prev) => [val, ...prev])}\r\n            ></AddFilter>\r\n            {filters.map((f, i) =>\r\n              f.hidden ? null : (\r\n                <div\r\n                  key={`f-${i}`}\r\n                  className={classNames(\r\n                    \"rounded min-h-28px border leading-28px pl-3 text-sm pr-3 flex mr-3 mb-3 relative\",\r\n                    `${uncapitalize(ground)}TextColor ${uncapitalize(ground)}BorderColor`\r\n                  )}\r\n                >\r\n                  {f.fieldId} {f.operator} {f.value}{\" \"}\r\n                  <span\r\n                    onClick={() =>\r\n                      setFilters((prev) => {\r\n                        let arr = [...prev];\r\n                        arr.splice(i, 1);\r\n                        return arr;\r\n                      })\r\n                    }\r\n                    className=\"text-xs leading-28px ml-3 cursor-pointer\"\r\n                  >\r\n                    ✕\r\n                  </span>\r\n                </div>\r\n              )\r\n            )}\r\n          </div>\r\n        )}\r\n\r\n        {!onPick ? (\r\n          <Button\r\n            onClick={onDeleteSelected}\r\n            disabled={selected.length === 0}\r\n            className={`px-7 mb-3 min-w-unset rounded h-28px ${\r\n              selected.length === 0\r\n                ? \"bg-fireck-3 text-gray-6C6C6C cursor-default\"\r\n                : \"bg-red-FF0000 hover:bg-red-FF0000-hover text-white\"\r\n            } `}\r\n          >\r\n            Delete\r\n          </Button>\r\n        ) : (\r\n          <Button\r\n            onClick={() => onPick(docs.filter((x) => selected.includes(x.docId)))}\r\n            className={`h-28px min-w-unset rounded mb-3 px-7 ${\r\n              selected.length === 0\r\n                ? \"bg-gray-300 text-gray-500 cursor-default\"\r\n                : \"bg-fireck-4 hover:bg-fireck-4-hover\"\r\n            } `}\r\n          >\r\n            Select\r\n          </Button>\r\n        )}\r\n      </div>\r\n      <div className={classNames(\"flex-grow h-0 -mt-3 rounded overflow-hidden bg-white\")}>\r\n        <SimpleBar className={\"relative scrollbar-light h-full\"} autoHide={false}>\r\n          <table className=\"w-full text-center\">\r\n            <thead>\r\n              <tr className=\"whitespace-nowrap\">\r\n                <th className={`sticky top-0 table${ground}HeaderBackground z-10 px-1`}>\r\n                  {singleSelect ? null : (\r\n                    <Checkbox\r\n                      size=\"small\"\r\n                      classes={{ checked: \"text-fireck-2\", root: \"p-0\" }}\r\n                      checked={selected.length === docs.length}\r\n                      onChange={(e) => selectAll(e.target.checked)}\r\n                    ></Checkbox>\r\n                  )}\r\n                </th>\r\n                {fields.map((field, i) => (\r\n                  <th\r\n                    className={`font-medium sticky top-0 table${ground}HeaderBackground`}\r\n                    key={`th-${i}`}\r\n                  >\r\n                    <div className=\"flex items-center justify-center\">\r\n                      <div className=\"w-5\"></div>\r\n                      <div className=\"cursor-pointer select-none\" onClick={onOrder(field)}>\r\n                        {field.id}\r\n                      </div>\r\n                      <div className=\"w-5\">\r\n                        {orderBy?.fieldId === field.id ? (\r\n                          <ExpandMoreRounded\r\n                            fontSize=\"small\"\r\n                            className={`${\r\n                              orderBy?.direction === \"asc\" ? \"transform rotate-180\" : \"\"\r\n                            }`}\r\n                          ></ExpandMoreRounded>\r\n                        ) : null}\r\n                      </div>\r\n                    </div>\r\n                  </th>\r\n                ))}\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {docs.map((doc, i) =>\r\n                blackList.includes(doc.docId) ? null : (\r\n                  <tr\r\n                    onClick={() =>\r\n                      onPick ? selectHandler(doc.docId, !selected.includes(doc.docId)) : onEdit(doc)\r\n                    }\r\n                    key={`row-${i}`}\r\n                    className={`cursor-pointer table${ground}RowHoverTextColor table${ground}RowHoverBackground`}\r\n                  >\r\n                    <td className=\"px-1\" onClick={(e) => e.stopPropagation()}>\r\n                      <Checkbox\r\n                        size=\"small\"\r\n                        classes={{ checked: \"text-fireck-2\", root: \"p-0\" }}\r\n                        checked={selected.includes(doc.docId)}\r\n                        onChange={(e) => selectHandler(doc.docId, e.target.checked)}\r\n                      ></Checkbox>\r\n                    </td>\r\n                    {fields.map((field, j) => (\r\n                      <td key={`row-${i}-col-${j}`} className=\"px-2\">\r\n                        {doc[field.id] != null ? (\r\n                          field.type === \"media\" ? (\r\n                            field.mediaSingle ? (\r\n                              <FilesCell file={doc[field.id]}></FilesCell>\r\n                            ) : (\r\n                              <FilesCell files={doc[field.id]} />\r\n                            )\r\n                          ) : (\r\n                            <div className=\"whitespace-nowrap\">\r\n                              {formatValue(field, doc[field.id])}\r\n                            </div>\r\n                          )\r\n                        ) : null}\r\n                      </td>\r\n                    ))}\r\n                  </tr>\r\n                )\r\n              )}\r\n              <tr>\r\n                <td colSpan={fields.length + 1}>\r\n                  <InView\r\n                    onChange={async (inView) => {\r\n                      setEndIsInView(inView);\r\n                    }}\r\n                  >\r\n                    <div className=\"w-full\"></div>\r\n                  </InView>\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n\r\n          <div></div>\r\n        </SimpleBar>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Table;\r\n","import Modal from \"@mui/material/Modal\";\r\nimport Input from \"components/Input\";\r\nimport Select from \"components/Select\";\r\nimport Button from \"components/Button\";\r\nimport { CollectionType } from \"api/collectionTypes\";\r\nimport React from \"react\";\r\nimport { useFormik } from \"formik\";\r\nimport Label from \"components/Label\";\r\nimport CloseRounded from \"@mui/icons-material/CloseRounded\";\r\nimport { GroundType } from \"utils/types\";\r\n\r\nexport interface AddFilterModalProps {\r\n  collectionType: Pick<CollectionType, \"fields\">;\r\n  onValue: Function;\r\n  ground: GroundType;\r\n}\r\n\r\nconst AddFilterModal: React.FC<AddFilterModalProps> = ({ collectionType, onValue, ground }) => {\r\n  const operators = [\r\n    \"<\",\r\n    \"<=\",\r\n    \"==\",\r\n    \">\",\r\n    \">=\",\r\n    \"!=\",\r\n    \"array-contains\",\r\n    \"array-contains-any\",\r\n    \"in\",\r\n    \"not-in\",\r\n  ];\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const { values, errors, handleChange, submitCount, handleSubmit, isSubmitting } = useFormik({\r\n    onSubmit: async (vals, { resetForm }) => {\r\n      onValue(vals);\r\n      setOpen(false);\r\n      resetForm();\r\n    },\r\n    initialValues: {\r\n      value: \"\",\r\n      operator: \"\",\r\n      fieldId: \"\",\r\n    },\r\n    validate: (vals: any) => {\r\n      let errors: any = {};\r\n      Object.keys(vals).forEach((x) => {\r\n        if (!vals[x]) {\r\n          errors[x] = \"Required\";\r\n        }\r\n      });\r\n      return errors;\r\n    },\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <Button\r\n        onClick={() => setOpen(true)}\r\n        className=\"bg-black bg-opacity-5 hover:bg-opacity-10 min-w-unset flex items-center justify-center h-28px px-7 rounded text-sm mr-3 mb-3\"\r\n      >\r\n        Filters\r\n      </Button>\r\n      {!open ? null : (\r\n        <Modal open={open}>\r\n          <div\r\n            className=\"fixed left-0 top-0 w-full h-full flex p-7\"\r\n            onMouseDown={() => setOpen(false)}\r\n          >\r\n            <div\r\n              onMouseDown={(e) => e.stopPropagation()}\r\n              className=\"bg-white rounded p-7 m-auto relative animate-littlemoveup\"\r\n              style={{ maxWidth: 600 }}\r\n            >\r\n              <CloseRounded\r\n                className=\"absolute top-0 right-0 cursor-pointer\"\r\n                onClick={() => setOpen(false)}\r\n              ></CloseRounded>\r\n              <div className=\"flex flex-wrap -mx-2 mb-4\">\r\n                <div className=\"sm:w-1/3 w-full mb-3 px-2\">\r\n                  <Label\r\n                    ground=\"Dialog\"\r\n                    className=\"mb-2\"\r\n                    error={submitCount > 0 ? errors.fieldId : null}\r\n                  >\r\n                    Field\r\n                  </Label>\r\n                  <Select\r\n                    className=\"h-34px\"\r\n                    ground=\"Dialog\"\r\n                    name=\"fieldId\"\r\n                    onChange={handleChange}\r\n                    value={values.fieldId}\r\n                    options={[\r\n                      { value: \"\", label: \"Select\" },\r\n                      ...collectionType.fields.map((x) => ({ value: x.id, label: x.id })),\r\n                    ]}\r\n                  ></Select>\r\n                </div>\r\n                <div className=\"sm:w-1/3 w-full mb-3 px-2\">\r\n                  <Label\r\n                    ground=\"Dialog\"\r\n                    className=\"mb-2\"\r\n                    error={submitCount > 0 ? errors.operator : null}\r\n                  >\r\n                    Operator\r\n                  </Label>\r\n                  <Select\r\n                    className=\"h-34px\"\r\n                    ground=\"Dialog\"\r\n                    name=\"operator\"\r\n                    onChange={handleChange}\r\n                    value={values.operator}\r\n                    options={[\r\n                      { value: \"\", label: \"Select\" },\r\n                      ...operators.map((x) => ({ value: x, label: x })),\r\n                    ]}\r\n                  ></Select>\r\n                </div>\r\n                <div className=\"sm:w-1/3 w-full mb-3 px-2\">\r\n                  <Label\r\n                    ground=\"Dialog\"\r\n                    className=\"mb-2 text-black\"\r\n                    error={submitCount > 0 ? errors.value : null}\r\n                  >\r\n                    Value\r\n                  </Label>\r\n                  <Input\r\n                    onKeyDown={(e) => {\r\n                      if (e.key === \"Enter\") {\r\n                        e.preventDefault();\r\n                        handleSubmit();\r\n                      }\r\n                    }}\r\n                    ground=\"Dialog\"\r\n                    placeholder={\r\n                      [\"in\", \"not in\", \"array-contains-any\"].includes(values.operator)\r\n                        ? \"value, value, value\"\r\n                        : \"value\"\r\n                    }\r\n                    className=\"placeholder-black h-34px\"\r\n                    value={values.value}\r\n                    onChange={handleChange}\r\n                    name=\"value\"\r\n                  ></Input>\r\n                </div>\r\n              </div>\r\n              <div className=\"flex justify-end\">\r\n                <Button\r\n                  disabled={isSubmitting}\r\n                  onClick={() => handleSubmit()}\r\n                  className={`buttonPrimaryBackground buttonPrimaryTextColor h-28px min-w-unset px-8`}\r\n                >\r\n                  Add\r\n                </Button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Modal>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AddFilterModal;\r\n","import { forwardRef } from \"react\";\r\n\r\nconst TooltipChild = forwardRef(function MyComponent(props: any, ref: any) {\r\n  return <div {...props} ref={ref}></div>;\r\n});\r\n\r\nexport default TooltipChild;\r\n","import TooltipChild from \"components/TooltipChild\";\r\nimport Tooltip from \"@mui/material/Tooltip\";\r\n\r\ninterface MediaFieldProps {\r\n  src: string;\r\n}\r\n\r\nconst MediaField: React.FC<MediaFieldProps> = ({ src }) => {\r\n  return (\r\n    <Tooltip\r\n      arrow\r\n      title={\r\n        <div className=\"p-1\">\r\n          <img src={src} className=\"max-w-136px max-h-136px w-auto h-auto\" alt=\"\" />\r\n        </div>\r\n      }\r\n      placement=\"top\"\r\n      classes={{\r\n        tooltip: \"font-poppins text-xs p-0 rounded bg-fireck-1\",\r\n        arrow: \"text-fireck-1\",\r\n      }}\r\n    >\r\n      <TooltipChild>\r\n        <div className=\"group w-4 h-4 relative flex items-center justify-center rounded hover:bg-gray-535371 hover:bg-opacity-5 cursor-pointer\">\r\n          <div\r\n            className=\"relative w-4 h-4 rounded-full bg-center bg-cover pointer-events-none\"\r\n            style={{ backgroundImage: `url(${src})` }}\r\n          ></div>\r\n        </div>\r\n      </TooltipChild>\r\n    </Tooltip>\r\n  );\r\n};\r\n\r\nexport default MediaField;\r\n","import React from \"react\";\r\nimport MediaField from \"./MediaField\";\r\n\r\nexport interface FilesProps {\r\n  files?: string[];\r\n  file?: string;\r\n}\r\n\r\nconst Files: React.FC<FilesProps> = ({ files, file }) => {\r\n  const id = React.useRef<number>(Math.random());\r\n\r\n  return (\r\n    <div className=\"flex justify-center\">\r\n      {(files ? files : file ? [file] : []).slice(0, 4).map((f, i) => (\r\n        <div key={`${id}-file-${i}`} className=\"mr-0.5\">\r\n          <MediaField src={f}></MediaField>\r\n        </div>\r\n      ))}\r\n      {files && files.length > 4 ? (\r\n        <div className=\"relative\">\r\n          <div className=\"w-4 h-4 rounded-full bg-fireck-4 text-10px flex items-center justify-center\">\r\n            {files.length - 4}+\r\n          </div>\r\n        </div>\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Files;\r\n","import classNames from \"classnames\";\r\n\r\nexport interface PageTitleProps\r\n  extends React.DetailedHTMLProps<React.HTMLAttributes<HTMLDivElement>, HTMLDivElement> {}\r\n\r\nconst PageTitle: React.FC<PageTitleProps> = ({ className, ...rest }) => {\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={classNames(\"text-27px font-medium capitalize leading-none\", className)}\r\n    ></div>\r\n  );\r\n};\r\n\r\nexport default PageTitle;\r\n","import {\r\n  deleteObject,\r\n  getDownloadURL,\r\n  getStorage,\r\n  ref,\r\n  uploadBytesResumable,\r\n} from \"firebase/storage\";\r\nimport shortuuid from \"short-uuid\";\r\n\r\nclass FilesManagerClass {\r\n  upload(file: File): Promise<{ downloadUrl: string; fileName: string } | { error: string }> {\r\n    return new Promise((resolve) => {\r\n      try {\r\n        const storage = getStorage();\r\n        const nameParts = file.name.split(\".\");\r\n        const fileName = shortuuid.generate() + \".\" + nameParts[nameParts.length - 1];\r\n        let fileRef = ref(storage, fileName);\r\n\r\n        const uploadTask = uploadBytesResumable(fileRef, file);\r\n        uploadTask.on(\r\n          \"state_changed\",\r\n          (snapshot) => {},\r\n          (error) => {\r\n            resolve({ error: error.name });\r\n          },\r\n          () => {\r\n            getDownloadURL(uploadTask.snapshot.ref).then((downloadUrl) => {\r\n              resolve({ downloadUrl, fileName });\r\n            });\r\n          }\r\n        );\r\n      } catch (error: any) {\r\n        resolve({ error });\r\n      }\r\n    });\r\n  }\r\n\r\n  delete(path: string) {\r\n    const storage = getStorage();\r\n    deleteObject(ref(storage, path));\r\n  }\r\n}\r\n\r\nexport const FilesManager = new FilesManagerClass();\r\n","import { getFileExtension } from \"helper\";\r\nimport store from \"store\";\r\nimport { addDocument, deleteDocument, updateDocument } from \"./collections\";\r\nimport { FilesManager } from \"facades/FilesManager\";\r\n\r\nexport const uploadFile = async (file: File): Promise<{ error: string } | any> => {\r\n  try {\r\n    const res = await FilesManager.upload(file);\r\n\r\n    if (\"error\" in res) {\r\n      return res;\r\n    } else {\r\n      const fileDetails = {\r\n        name: file.name,\r\n        size: file.size,\r\n        url: res.downloadUrl,\r\n        storagePath: res.fileName,\r\n        type: getFileExtension(file),\r\n      };\r\n      return addDocument(\"FilesReservedCollection\", fileDetails);\r\n    }\r\n  } catch (error: any) {\r\n    return { error: error.toString() };\r\n  }\r\n};\r\n\r\nexport type FileDocument = {\r\n  docId: string;\r\n  name: string;\r\n  size: number;\r\n  storagePath: string;\r\n  createdAt: number;\r\n  url: string;\r\n};\r\n\r\nexport const getFiles = async ({\r\n  limit = 10,\r\n  orderBy,\r\n  startAt,\r\n  startAfter,\r\n}: {\r\n  limit?: number;\r\n  orderBy: string;\r\n  startAt?: string | number;\r\n  startAfter?: string | number;\r\n}): Promise<Array<FileDocument> | { error: string }> => {\r\n  try {\r\n    const user = store.getState().user;\r\n    const token = user ? user.token : null;\r\n    return fetch(\r\n      window.location.origin +\r\n        `/private/files?limit=${limit}${\r\n          startAt ? \"&startAt=\" + startAt : \"\"\r\n        }&orderBy=${orderBy},desc${startAfter ? `&startAfter=${startAfter}` : \"\"}`,\r\n      {\r\n        headers: { Authorization: \"Bearer \" + token },\r\n      }\r\n    ).then((x) => x.json());\r\n  } catch (error: any) {\r\n    return { error };\r\n  }\r\n};\r\n\r\nexport const getFilesCount = async () => {\r\n  try {\r\n    const user = store.getState().user;\r\n    const token = user ? user.token : null;\r\n    return fetch(window.location.origin + `/private/files/count`, {\r\n      headers: { Authorization: \"Bearer \" + token },\r\n    }).then((x) => x.json());\r\n  } catch (error) {\r\n    return { error };\r\n  }\r\n};\r\n\r\nexport const deleteFile = (docId: string, storagePath: string) => {\r\n  try {\r\n    FilesManager.delete(storagePath);\r\n    return deleteDocument(\"FilesReservedCollection\", docId);\r\n  } catch (error) {\r\n    return { error };\r\n  }\r\n};\r\n\r\nexport const editFile = (docId: string, updates: { [key: string]: any }) => {\r\n  try {\r\n    return updateDocument(\"FilesReservedCollection\", docId, updates);\r\n  } catch (error) {\r\n    return { error };\r\n  }\r\n};\r\n","import Button from \"components/Button\";\r\nimport React, { useState } from \"react\";\r\nimport { uploadFile } from \"api/files\";\r\nimport store, { RootState } from \"store\";\r\nimport { useNotify } from \"components/NotificationsProvider\";\r\nimport PageTitle from \"components/PageTitle\";\r\nimport CollectionTable from \"components/TableElements/CollectionTable\";\r\nimport { useSelector } from \"react-redux\";\r\nimport AddRounded from \"@material-ui/icons/AddRounded\";\r\nimport { formatBytes } from \"helper\";\r\n\r\nexport interface MediaProps {}\r\n\r\nexport const MediaDocumentFormatters = {\r\n  url: (value: string) => (\r\n    <div\r\n      onClick={(e) => {\r\n        e.stopPropagation();\r\n        window.open(value, \"_blank\");\r\n      }}\r\n      className=\"bg-center bg-cover h-10 w-10 mx-auto bg-gray-E1E1E1\"\r\n      style={{ backgroundImage: `url(${value})` }}\r\n    ></div>\r\n  ),\r\n  size: (value: number) => formatBytes(value),\r\n};\r\n\r\nconst Media: React.FC<MediaProps> = () => {\r\n  const uploadRef = React.useRef(null as any);\r\n  const notify = useNotify();\r\n  const [refreshCounter, setCounter] = useState(0);\r\n\r\n  const { collectionType } = useSelector((state: RootState) => {\r\n    return {\r\n      collectionType: state.collectionTypes.find((x) => x.id === \"FilesReservedCollection\"),\r\n    };\r\n  });\r\n\r\n  return (\r\n    <div className=\"h-full w-full flex flex-col\">\r\n      <div className=\"flex justify-between flex-wrap mb-3\">\r\n        <PageTitle className=\"mb-4 mr-4\">Media</PageTitle>\r\n        <input\r\n          key={`file-input-${refreshCounter}`}\r\n          type=\"file\"\r\n          multiple\r\n          className=\"hidden\"\r\n          ref={uploadRef}\r\n          onChange={async (e) => {\r\n            const files = e.target.files;\r\n\r\n            if (files && files.length) {\r\n              store.dispatch({\r\n                type: \"SET_LOADING\",\r\n                payload: `Uploading ${files.length} file${files.length > 1 ? \"s\" : \"\"}...`,\r\n              });\r\n              let uploaded = 0;\r\n              for (let file of files) {\r\n                const res = await uploadFile(file);\r\n                if (!(\"error\" in res)) {\r\n                  uploaded++;\r\n                  store.dispatch({\r\n                    type: \"SET_LOADING\",\r\n                    payload: `${uploaded}/${files.length} uploaded.`,\r\n                  });\r\n                } else {\r\n                  notify(res.error + \". Try reload the app\", { variant: \"error\" });\r\n                }\r\n              }\r\n\r\n              store.dispatch({ type: \"SET_LOADING\", payload: false });\r\n              setCounter((prev) => prev + 1);\r\n            }\r\n          }}\r\n        />\r\n        <Button\r\n          onClick={() => uploadRef.current.click()}\r\n          className=\"bg-fireck-4 hover:bg-fireck-4-hover mb-4 h-34px pr-6 pl-5 min-w-unset\"\r\n        >\r\n          <div className=\"flex items-center\">\r\n            <AddRounded className=\"mr-2 text-lg\" fontSize=\"inherit\"></AddRounded>\r\n            <span>Upload</span>\r\n          </div>\r\n        </Button>\r\n      </div>\r\n\r\n      {!collectionType ? null : (\r\n        <CollectionTable\r\n          ground=\"Ground\"\r\n          key={`files-table-${refreshCounter}`}\r\n          valueFormatters={MediaDocumentFormatters}\r\n          collectionType={collectionType}\r\n        ></CollectionTable>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Media;\r\n"],"sourceRoot":""}