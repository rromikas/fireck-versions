{"version":3,"sources":["../node_modules/uuid/dist/esm-browser/stringify.js","../node_modules/uuid/dist/esm-browser/regex.js","../node_modules/uuid/dist/esm-browser/validate.js","../node_modules/mime-types/index.js","../node_modules/short-uuid/index.js","../../src/implementation/constants.ts","../../src/implementation/error.ts","../../src/implementation/connection.ts","../../src/implementation/location.ts","../../src/implementation/failrequest.ts","../../src/implementation/type.ts","../../src/implementation/url.ts","../../src/implementation/request.ts","../../src/implementation/backoff.ts","../../src/implementation/fs.ts","../../src/implementation/string.ts","../../src/platform/browser/base64.ts","../../src/implementation/blob.ts","../../src/implementation/json.ts","../../src/implementation/path.ts","../../src/implementation/metadata.ts","../../src/implementation/requestinfo.ts","../../src/implementation/requests.ts","../../src/implementation/taskenums.ts","../../src/implementation/observer.ts","../../src/implementation/async.ts","../../src/platform/browser/connection.ts","../../src/task.ts","../../src/reference.ts","../../src/service.ts","../../src/constants.ts","../../src/api.ts","../../src/index.ts","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/arrayLikeToArray.js","../node_modules/uuid/dist/esm-browser/rng.js","../node_modules/uuid/dist/esm-browser/v4.js","../node_modules/uuid/dist/esm-browser/v1.js","../node_modules/uuid/dist/esm-browser/parse.js","../node_modules/uuid/dist/esm-browser/v35.js","../node_modules/uuid/dist/esm-browser/md5.js","../node_modules/uuid/dist/esm-browser/v3.js","../node_modules/uuid/dist/esm-browser/sha1.js","../node_modules/uuid/dist/esm-browser/v5.js","../node_modules/uuid/dist/esm-browser/nil.js","../node_modules/uuid/dist/esm-browser/version.js","../node_modules/mime-db/index.js","../node_modules/path-browserify/index.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/nonIterableSpread.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/objectSpread2.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/defineProperty.js","../node_modules/any-base/index.js","../node_modules/any-base/src/converter.js"],"names":["byteToHex","i","push","toString","substr","stringify","arr","offset","arguments","length","undefined","uuid","toLowerCase","validate","TypeError","REGEX","test","db","require","extname","EXTRACT_TYPE_REGEXP","TEXT_TYPE_REGEXP","charset","type","match","exec","mime","exports","charsets","lookup","contentType","str","indexOf","extension","exts","extensions","Object","create","path","types","preference","keys","forEach","from","source","to","populateMaps","toFlickr","uuidv4","v4","anyBase","flickrBase58","baseOptions","consistentLength","shortenUUID","longId","translator","paddingParams","translated","replace","padStart","shortIdLength","paddingChar","module","makeConvertor","toAlphabet","options","useAlphabet","selectedOptions","Set","Array","Error","alphabetLength","Math","ceil","log","fromHex","HEX","toHex","generate","new","fromUUID","toUUID","shortUuid","shortId","m","join","enlargeUUID","alphabet","maxLength","freeze","constants","cookieBase90","DEFAULT_HOST","code","message","prependCode","customData","serverResponse","_baseMessage","setPrototypeOf","StorageError","prototype","this","unknown","cannotSliceBlob","invalidArgument","appDeleted","invalidFormat","format","internalError","ErrorCode","bucket","path_","encode","encodeURIComponent","bucketString","host","bucketLocation","Location","makeFromUrl","e","url","location","bucketDomain","gsRegex","RegExp","httpModify","loc","decodeURIComponent","firebaseStorageHost","groups","regex","indices","postModify","charAt","slice","group","captures","bucketValue","pathValue","invalidUrl","error","promise_","Promise","reject","isString","p","String","isNativeBlob","isNativeBlobDefined","Blob","validateNumber","argument","minValue","maxValue","value","makeUrl","urlPart","protocol","origin","makeQueryString","params","queryPart","key","hasOwnProperty","url_","method_","headers_","body_","successCodes_","additionalRetryCodes_","callback_","errorCallback_","timeout_","progressCallback_","connectionFactory_","pendingConnection_","backoffId_","canceled_","appDelete_","resolve","resolve_","reject_","start_","backoffDone","requestWentThrough","status","connection","wasSuccessCode","result","getResponseText","err","canceled","f","callback","timeout","waitSeconds","timeoutId","hitTimeout","cancelState","triggeredCallback","triggerCallback","args","apply","callWithDelay","millis","setTimeout","handler","success","waitMillis","call","random","stopped","stop","wasTimeout","clearTimeout","start","backoffCallback","progressListener","progressEvent","loaded","total","lengthComputable","addUploadProgressListener","send","then","removeUploadProgressListener","hitServer","getErrorCode","NO_ERROR","getStatus","isRetryStatusCode_","successCode","wasCanceled","ABORT","appDelete","abort","isFiveHundredCode","isExtraRetryCode","isRequestSpecificRetryCode","getBlobBuilder","BlobBuilder","WebKitBlobBuilder","bb","append","getBlob","StringFormat","data","dataFromString","stringData","utf8Bytes_","base64Bytes_","dataUrl","parts","base64","rest","decoded","percentEncodedBytes_","dataURLBytes_","b","c","charCodeAt","Uint8Array","hasMinus","hasUnder","hasPlus","hasSlash","bytes","atob","array","dataURL","matches","middle","s","end","substring","endsWith","elideCopy","size","blobType","data_","ArrayBuffer","byteLength","set","size_","type_","startByte","endByte","sliced","blob","webkitSlice","mozSlice","sliceBlob","FbsBlob","buffer","blobby","map","val","uint8Arrays","finalLength","merged","index","jsonObjectOrNull","obj","JSON","parse","isArray","lastComponent","lastIndexOf","noXform_","metadata","server","local","writable","xform","mappings_","getMappings","mappings","nameMapping","_metadata","fullPath","xformPath","sizeMapping","Number","fromResource","service","resource","len","mapping","defineProperty","get","_makeStorageReference","addRef","fromResourceString","resourceString","toResourceString","method","urlParams","headers","body","errorHandler","progressCallback","successCodes","additionalRetryCodes","handlerCheck","cndn","metadataHandler","xhr","text","downloadUrlHandler","tokens","split","token","alt","downloadUrlFromResourceString","_protocol","sharedErrorHandler","newErr","includes","objectErrorHandler","shared","getMetadata","fullServerUrl","maxOperationRetryTime","requestInfo","metadataForUpload_","metadataClone","assign","determineContentType_","multipartUpload","bucketOnlyServerUrl","boundary","genBoundary","metadata_","preBlobPart","postBlobPart","name","maxUploadRetryTime","uploadData","current","finalized","checkResumeHeader_","allowed","getResponseHeader","RESUMABLE_UPLOAD_CHUNK_SIZE","continueResumableUpload","chunkSize","status_","bytesLeft","bytesToUpload","min","uploadStatus","newCurrent","TaskState","taskStateFromInternalTaskState","state","nextOrObserver","complete","next","observer","argsToForward","sent_","xhr_","XMLHttpRequest","errorCode_","sendPromise_","addEventListener","NETWORK_ERROR","open","setRequestHeader","responseText","header","listener","upload","removeEventListener","newConnection","ref","_transferred","_needToFetchStatus","_needToFetchMetadata","_observers","_error","_uploadUrl","_request","_chunkMultiplier","_resolve","_reject","_ref","_blob","_mappings","_resumable","_shouldDoResumable","_state","_errorHandler","_codeEquals","completeTransitions_","_transition","_metadataErrorHandler","_promise","_start","sizeBefore","_updateProgress","_createResumable","_fetchStatus","_fetchMetadata","_continueUpload","_oneShotUpload","all","storage","_getAuthToken","_getAppCheckToken","authToken","appCheckToken","_resolveToken","metadataForUpload","createResumableUpload","_location","createRequest","_makeRequest","getPromise","sizeString","isNaN","getResumableUploadStatus","statusRequest","_makeProgressCallback","uploadRequest","newStatus","_increaseMultiplier","metadataRequest","multipartRequest","transferred","old","_notifyObservers","cancel","wasPaused","externalState","bytesTransferred","totalBytes","task","completed","_addObserver","_removeObserver","onFulfilled","onRejected","_notifyObserver","splice","_finishPromise","triggered","fbsAsync","bind","snapshot","valid","_service","Reference","_newRef","newPath","invalidRootOperation","getDownloadURL","_throwIfRoot","requestsGetDownloadUrl","makeRequestWithTokens","deleteObject","_xhr","_text","requestsDeleteObject","_getChild","childPath","canonicalChildPath","filter","component","child","refFromPath","_bucket","reference","serviceOrRef","pathOrUrl","extractBucket","config","makeFromBucketSpec","app","_authProvider","_appCheckProvider","_url","_firebaseVersion","_host","_appId","_deleted","_maxOperationRetryTime","_maxUploadRetryTime","_requests","time","POSITIVE_INFINITY","a","_overrideAuthToken","auth","getImmediate","optional","getToken","tokenData","accessToken","appCheck","request","clear","requestFactory","appId","firebaseVersion","addGmpidHeader_","addAuthHeader_","addVersionHeader_","addAppCheckHeader_","makeRequest","add","delete","STORAGE_TYPE","uploadBytesResumable","uploadBytesResumableInternal","getDownloadURLInternal","deleteObjectInternal","refInternal","getStorage","bucketUrl","storageProvider","storageInstance","identifier","factory","container","instanceIdentifier","getProvider","authProvider","appCheckProvider","setMultipleInstances","version","arr2","getRandomValues","rnds8","rng","crypto","msCrypto","buf","rnds","_nodeId","_clockseq","_lastMSecs","_lastNSecs","v1","node","clockseq","seedBytes","msecs","Date","now","nsecs","dt","tl","tmh","n","v","parseInt","hashfunc","generateUUID","namespace","unescape","stringToBytes","DNS","URL","getOutputLength","inputLength8","safeAdd","x","y","lsw","md5cmn","q","t","num","cnt","md5ff","d","md5gg","md5hh","md5ii","md5","v3","v35","msg","input","output","length32","hexTab","hex","md5ToHexEncodedArray","olda","oldb","oldc","oldd","wordsToMd5","length8","Uint32Array","bytesToWords","z","ROTL","sha1","v5","K","H","l","N","M","_i","j","pow","floor","_i2","W","_t","_t2","T","normalizeArray","allowAboveRoot","up","last","unshift","xs","res","resolvedPath","resolvedAbsolute","process","cwd","normalize","isAbsolute","trailingSlash","paths","relative","trim","fromParts","toParts","samePartsLength","outputParts","concat","sep","delimiter","dirname","hasRoot","matchedSlash","basename","ext","startDot","startPart","preDotState","arrayWithoutHoles","iterableToArray","unsupportedIterableToArray","nonIterableSpread","arrayLikeToArray","iter","Symbol","iterator","o","minLen","constructor","ownKeys","object","enumerableOnly","getOwnPropertySymbols","symbols","sym","getOwnPropertyDescriptor","enumerable","target","getOwnPropertyDescriptors","defineProperties","configurable","Converter","srcAlphabet","dstAlphabet","converter","number","convert","BIN","OCT","DEC","divide","newlen","numberMap","fromBase","toBase","isValid"],"mappings":"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","file":"static/js/2.ea35af17.chunk.js","sourcesContent":["import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nvar byteToHex = [];\n\nfor (var i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction stringify(arr) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  var uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;","import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;","/*!\n * mime-types\n * Copyright(c) 2014 Jonathan Ong\n * Copyright(c) 2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar db = require('mime-db')\nvar extname = require('path').extname\n\n/**\n * Module variables.\n * @private\n */\n\nvar EXTRACT_TYPE_REGEXP = /^\\s*([^;\\s]*)(?:;|\\s|$)/\nvar TEXT_TYPE_REGEXP = /^text\\//i\n\n/**\n * Module exports.\n * @public\n */\n\nexports.charset = charset\nexports.charsets = { lookup: charset }\nexports.contentType = contentType\nexports.extension = extension\nexports.extensions = Object.create(null)\nexports.lookup = lookup\nexports.types = Object.create(null)\n\n// Populate the extensions/types maps\npopulateMaps(exports.extensions, exports.types)\n\n/**\n * Get the default charset for a MIME type.\n *\n * @param {string} type\n * @return {boolean|string}\n */\n\nfunction charset (type) {\n  if (!type || typeof type !== 'string') {\n    return false\n  }\n\n  // TODO: use media-typer\n  var match = EXTRACT_TYPE_REGEXP.exec(type)\n  var mime = match && db[match[1].toLowerCase()]\n\n  if (mime && mime.charset) {\n    return mime.charset\n  }\n\n  // default text/* to utf-8\n  if (match && TEXT_TYPE_REGEXP.test(match[1])) {\n    return 'UTF-8'\n  }\n\n  return false\n}\n\n/**\n * Create a full Content-Type header given a MIME type or extension.\n *\n * @param {string} str\n * @return {boolean|string}\n */\n\nfunction contentType (str) {\n  // TODO: should this even be in this module?\n  if (!str || typeof str !== 'string') {\n    return false\n  }\n\n  var mime = str.indexOf('/') === -1\n    ? exports.lookup(str)\n    : str\n\n  if (!mime) {\n    return false\n  }\n\n  // TODO: use content-type or other module\n  if (mime.indexOf('charset') === -1) {\n    var charset = exports.charset(mime)\n    if (charset) mime += '; charset=' + charset.toLowerCase()\n  }\n\n  return mime\n}\n\n/**\n * Get the default extension for a MIME type.\n *\n * @param {string} type\n * @return {boolean|string}\n */\n\nfunction extension (type) {\n  if (!type || typeof type !== 'string') {\n    return false\n  }\n\n  // TODO: use media-typer\n  var match = EXTRACT_TYPE_REGEXP.exec(type)\n\n  // get extensions\n  var exts = match && exports.extensions[match[1].toLowerCase()]\n\n  if (!exts || !exts.length) {\n    return false\n  }\n\n  return exts[0]\n}\n\n/**\n * Lookup the MIME type for a file path/extension.\n *\n * @param {string} path\n * @return {boolean|string}\n */\n\nfunction lookup (path) {\n  if (!path || typeof path !== 'string') {\n    return false\n  }\n\n  // get the extension (\"ext\" or \".ext\" or full path)\n  var extension = extname('x.' + path)\n    .toLowerCase()\n    .substr(1)\n\n  if (!extension) {\n    return false\n  }\n\n  return exports.types[extension] || false\n}\n\n/**\n * Populate the extensions and types maps.\n * @private\n */\n\nfunction populateMaps (extensions, types) {\n  // source preference (least -> most)\n  var preference = ['nginx', 'apache', undefined, 'iana']\n\n  Object.keys(db).forEach(function forEachMimeType (type) {\n    var mime = db[type]\n    var exts = mime.extensions\n\n    if (!exts || !exts.length) {\n      return\n    }\n\n    // mime -> extensions\n    extensions[type] = exts\n\n    // extension -> mime\n    for (var i = 0; i < exts.length; i++) {\n      var extension = exts[i]\n\n      if (types[extension]) {\n        var from = preference.indexOf(db[types[extension]].source)\n        var to = preference.indexOf(mime.source)\n\n        if (types[extension] !== 'application/octet-stream' &&\n          (from > to || (from === to && types[extension].substr(0, 12) === 'application/'))) {\n          // skip the remapping\n          continue\n        }\n      }\n\n      // set the extension -> mime\n      types[extension] = type\n    }\n  })\n}\n","/**\n * Created by Samuel on 6/4/2016.\n * Simple wrapper functions to produce shorter UUIDs for cookies, maybe everything?\n */\n\nconst { v4: uuidv4 } = require('uuid');\nconst anyBase = require('any-base');\n\nconst flickrBase58 = '123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ';\nconst cookieBase90 = \"0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ!#$%&'()*+-./:<=>?@[]^_`{|}~\";\n\nconst baseOptions = {\n  consistentLength: true,\n};\n\n// A default generator, instantiated only if used.\nlet toFlickr;\n\n/**\n * Takes a UUID, strips the dashes, and translates.\n * @param {string} longId\n * @param {function(string)} translator\n * @param {Object} [paddingParams]\n * @returns {string}\n */\nconst shortenUUID = (longId, translator, paddingParams) => {\n  const translated = translator(longId.toLowerCase().replace(/-/g, ''));\n\n  if (!paddingParams || !paddingParams.consistentLength) return translated;\n\n  return translated.padStart(\n    paddingParams.shortIdLength,\n    paddingParams.paddingChar,\n  );\n};\n\n/**\n * Translate back to hex and turn back into UUID format, with dashes\n * @param {string} shortId\n * @param {function(string)} translator\n * @returns {string}\n */\nconst enlargeUUID = (shortId, translator) => {\n  const uu1 = translator(shortId).padStart(32, '0');\n\n  // Join the zero padding and the UUID and then slice it up with match\n  const m = uu1.match(/(\\w{8})(\\w{4})(\\w{4})(\\w{4})(\\w{12})/);\n\n  // Accumulate the matches and join them.\n  return [m[1], m[2], m[3], m[4], m[5]].join('-');\n};\n\n// Calculate length for the shortened ID\nconst getShortIdLength = (alphabetLength) => (\n  Math.ceil(Math.log(2 ** 128) / Math.log(alphabetLength)));\n\nmodule.exports = (() => {\n  /**\n   * @param {string} toAlphabet - Defaults to flickrBase58 if not provided\n   * @param {Object} [options]\n   *\n   * @returns {{new: (function()),\n   *  uuid: (function()),\n   *  fromUUID: (function(string)),\n   *  toUUID: (function(string)),\n   *  alphabet: (string)}}\n   */\n  const makeConvertor = (toAlphabet, options) => {\n    // Default to Flickr 58\n    const useAlphabet = toAlphabet || flickrBase58;\n\n    // Default to baseOptions\n    const selectedOptions = { ...baseOptions, ...options };\n\n    // Check alphabet for duplicate entries\n    if ([...new Set(Array.from(useAlphabet))].length !== useAlphabet.length) {\n      throw new Error('The provided Alphabet has duplicate characters resulting in unreliable results');\n    }\n\n    const shortIdLength = getShortIdLength(useAlphabet.length);\n\n    // Padding Params\n    const paddingParams = {\n      shortIdLength,\n      consistentLength: selectedOptions.consistentLength,\n      paddingChar: useAlphabet[0],\n    };\n\n    // UUIDs are in hex, so we translate to and from.\n    const fromHex = anyBase(anyBase.HEX, useAlphabet);\n    const toHex = anyBase(useAlphabet, anyBase.HEX);\n    const generate = () => shortenUUID(uuidv4(), fromHex, paddingParams);\n\n    const translator = {\n      new: generate,\n      generate,\n      uuid: uuidv4,\n      fromUUID: (uuid) => shortenUUID(uuid, fromHex, paddingParams),\n      toUUID: (shortUuid) => enlargeUUID(shortUuid, toHex),\n      alphabet: useAlphabet,\n      maxLength: shortIdLength,\n    };\n\n    Object.freeze(translator);\n\n    return translator;\n  };\n\n  // Expose the constants for other purposes.\n  makeConvertor.constants = {\n    flickrBase58,\n    cookieBase90,\n  };\n\n  // Expose the generic v4 UUID generator for convenience\n  makeConvertor.uuid = uuidv4;\n\n  // Provide a generic generator\n  makeConvertor.generate = () => {\n    if (!toFlickr) {\n      // Generate on first use;\n      toFlickr = makeConvertor(flickrBase58).generate;\n    }\n    return toFlickr();\n  };\n\n  return makeConvertor;\n})();\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * @fileoverview Constants used in the Firebase Storage library.\n */\n\n/**\n * Domain name for firebase storage.\n */\nexport const DEFAULT_HOST = 'firebasestorage.googleapis.com';\n\n/**\n * The key in Firebase config json for the storage bucket.\n */\nexport const CONFIG_STORAGE_BUCKET_KEY = 'storageBucket';\n\n/**\n * 2 minutes\n *\n * The timeout for all operations except upload.\n */\nexport const DEFAULT_MAX_OPERATION_RETRY_TIME = 2 * 60 * 1000;\n\n/**\n * 10 minutes\n *\n * The timeout for upload.\n */\nexport const DEFAULT_MAX_UPLOAD_RETRY_TIME = 10 * 60 * 1000;\n\n/**\n * This is the value of Number.MIN_SAFE_INTEGER, which is not well supported\n * enough for us to use it directly.\n */\nexport const MIN_SAFE_INTEGER = -9007199254740991;\n","import { FirebaseError } from '@firebase/util';\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { CONFIG_STORAGE_BUCKET_KEY } from './constants';\n\n/**\n * An error returned by the Firebase Storage SDK.\n * @public\n */\nexport class StorageError extends FirebaseError {\n  private readonly _baseMessage: string;\n  /**\n   * Stores custom error data unque to StorageError.\n   */\n  customData: { serverResponse: string | null } = { serverResponse: null };\n\n  /**\n   * @param code - A StorageErrorCode string to be prefixed with 'storage/' and\n   *  added to the end of the message.\n   * @param message  - Error message.\n   */\n  constructor(code: StorageErrorCode, message: string) {\n    super(\n      prependCode(code),\n      `Firebase Storage: ${message} (${prependCode(code)})`\n    );\n    this._baseMessage = this.message;\n    // Without this, `instanceof StorageError`, in tests for example,\n    // returns false.\n    Object.setPrototypeOf(this, StorageError.prototype);\n  }\n\n  /**\n   * Compares a StorageErrorCode against this error's code, filtering out the prefix.\n   */\n  _codeEquals(code: StorageErrorCode): boolean {\n    return prependCode(code) === this.code;\n  }\n\n  /**\n   * Optional response message that was added by the server.\n   */\n  get serverResponse(): null | string {\n    return this.customData.serverResponse;\n  }\n\n  set serverResponse(serverResponse: string | null) {\n    this.customData.serverResponse = serverResponse;\n    if (this.customData.serverResponse) {\n      this.message = `${this._baseMessage}\\n${this.customData.serverResponse}`;\n    } else {\n      this.message = this._baseMessage;\n    }\n  }\n}\n\nexport const errors = {};\n\n/**\n * @public\n * Error codes that can be attached to `StorageError`s.\n */\nexport const enum StorageErrorCode {\n  // Shared between all platforms\n  UNKNOWN = 'unknown',\n  OBJECT_NOT_FOUND = 'object-not-found',\n  BUCKET_NOT_FOUND = 'bucket-not-found',\n  PROJECT_NOT_FOUND = 'project-not-found',\n  QUOTA_EXCEEDED = 'quota-exceeded',\n  UNAUTHENTICATED = 'unauthenticated',\n  UNAUTHORIZED = 'unauthorized',\n  UNAUTHORIZED_APP = 'unauthorized-app',\n  RETRY_LIMIT_EXCEEDED = 'retry-limit-exceeded',\n  INVALID_CHECKSUM = 'invalid-checksum',\n  CANCELED = 'canceled',\n  // JS specific\n  INVALID_EVENT_NAME = 'invalid-event-name',\n  INVALID_URL = 'invalid-url',\n  INVALID_DEFAULT_BUCKET = 'invalid-default-bucket',\n  NO_DEFAULT_BUCKET = 'no-default-bucket',\n  CANNOT_SLICE_BLOB = 'cannot-slice-blob',\n  SERVER_FILE_WRONG_SIZE = 'server-file-wrong-size',\n  NO_DOWNLOAD_URL = 'no-download-url',\n  INVALID_ARGUMENT = 'invalid-argument',\n  INVALID_ARGUMENT_COUNT = 'invalid-argument-count',\n  APP_DELETED = 'app-deleted',\n  INVALID_ROOT_OPERATION = 'invalid-root-operation',\n  INVALID_FORMAT = 'invalid-format',\n  INTERNAL_ERROR = 'internal-error',\n  UNSUPPORTED_ENVIRONMENT = 'unsupported-environment'\n}\n\nexport function prependCode(code: StorageErrorCode): string {\n  return 'storage/' + code;\n}\n\nexport function unknown(): StorageError {\n  const message =\n    'An unknown error occurred, please check the error payload for ' +\n    'server response.';\n  return new StorageError(StorageErrorCode.UNKNOWN, message);\n}\n\nexport function objectNotFound(path: string): StorageError {\n  return new StorageError(\n    StorageErrorCode.OBJECT_NOT_FOUND,\n    \"Object '\" + path + \"' does not exist.\"\n  );\n}\n\nexport function bucketNotFound(bucket: string): StorageError {\n  return new StorageError(\n    StorageErrorCode.BUCKET_NOT_FOUND,\n    \"Bucket '\" + bucket + \"' does not exist.\"\n  );\n}\n\nexport function projectNotFound(project: string): StorageError {\n  return new StorageError(\n    StorageErrorCode.PROJECT_NOT_FOUND,\n    \"Project '\" + project + \"' does not exist.\"\n  );\n}\n\nexport function quotaExceeded(bucket: string): StorageError {\n  return new StorageError(\n    StorageErrorCode.QUOTA_EXCEEDED,\n    \"Quota for bucket '\" +\n      bucket +\n      \"' exceeded, please view quota on \" +\n      'https://firebase.google.com/pricing/.'\n  );\n}\n\nexport function unauthenticated(): StorageError {\n  const message =\n    'User is not authenticated, please authenticate using Firebase ' +\n    'Authentication and try again.';\n  return new StorageError(StorageErrorCode.UNAUTHENTICATED, message);\n}\n\nexport function unauthorizedApp(): StorageError {\n  return new StorageError(\n    StorageErrorCode.UNAUTHORIZED_APP,\n    'This app does not have permission to access Firebase Storage on this project.'\n  );\n}\n\nexport function unauthorized(path: string): StorageError {\n  return new StorageError(\n    StorageErrorCode.UNAUTHORIZED,\n    \"User does not have permission to access '\" + path + \"'.\"\n  );\n}\n\nexport function retryLimitExceeded(): StorageError {\n  return new StorageError(\n    StorageErrorCode.RETRY_LIMIT_EXCEEDED,\n    'Max retry time for operation exceeded, please try again.'\n  );\n}\n\nexport function invalidChecksum(\n  path: string,\n  checksum: string,\n  calculated: string\n): StorageError {\n  return new StorageError(\n    StorageErrorCode.INVALID_CHECKSUM,\n    \"Uploaded/downloaded object '\" +\n      path +\n      \"' has checksum '\" +\n      checksum +\n      \"' which does not match '\" +\n      calculated +\n      \"'. Please retry the upload/download.\"\n  );\n}\n\nexport function canceled(): StorageError {\n  return new StorageError(\n    StorageErrorCode.CANCELED,\n    'User canceled the upload/download.'\n  );\n}\n\nexport function invalidEventName(name: string): StorageError {\n  return new StorageError(\n    StorageErrorCode.INVALID_EVENT_NAME,\n    \"Invalid event name '\" + name + \"'.\"\n  );\n}\n\nexport function invalidUrl(url: string): StorageError {\n  return new StorageError(\n    StorageErrorCode.INVALID_URL,\n    \"Invalid URL '\" + url + \"'.\"\n  );\n}\n\nexport function invalidDefaultBucket(bucket: string): StorageError {\n  return new StorageError(\n    StorageErrorCode.INVALID_DEFAULT_BUCKET,\n    \"Invalid default bucket '\" + bucket + \"'.\"\n  );\n}\n\nexport function noDefaultBucket(): StorageError {\n  return new StorageError(\n    StorageErrorCode.NO_DEFAULT_BUCKET,\n    'No default bucket ' +\n      \"found. Did you set the '\" +\n      CONFIG_STORAGE_BUCKET_KEY +\n      \"' property when initializing the app?\"\n  );\n}\n\nexport function cannotSliceBlob(): StorageError {\n  return new StorageError(\n    StorageErrorCode.CANNOT_SLICE_BLOB,\n    'Cannot slice blob for upload. Please retry the upload.'\n  );\n}\n\nexport function serverFileWrongSize(): StorageError {\n  return new StorageError(\n    StorageErrorCode.SERVER_FILE_WRONG_SIZE,\n    'Server recorded incorrect upload file size, please retry the upload.'\n  );\n}\n\nexport function noDownloadURL(): StorageError {\n  return new StorageError(\n    StorageErrorCode.NO_DOWNLOAD_URL,\n    'The given file does not have any download URLs.'\n  );\n}\n\n/**\n * @internal\n */\nexport function invalidArgument(message: string): StorageError {\n  return new StorageError(StorageErrorCode.INVALID_ARGUMENT, message);\n}\n\nexport function invalidArgumentCount(\n  argMin: number,\n  argMax: number,\n  fnName: string,\n  real: number\n): StorageError {\n  let countPart;\n  let plural;\n  if (argMin === argMax) {\n    countPart = argMin;\n    plural = argMin === 1 ? 'argument' : 'arguments';\n  } else {\n    countPart = 'between ' + argMin + ' and ' + argMax;\n    plural = 'arguments';\n  }\n  return new StorageError(\n    StorageErrorCode.INVALID_ARGUMENT_COUNT,\n    'Invalid argument count in `' +\n      fnName +\n      '`: Expected ' +\n      countPart +\n      ' ' +\n      plural +\n      ', received ' +\n      real +\n      '.'\n  );\n}\n\nexport function appDeleted(): StorageError {\n  return new StorageError(\n    StorageErrorCode.APP_DELETED,\n    'The Firebase app was deleted.'\n  );\n}\n\n/**\n * @param name - The name of the operation that was invalid.\n *\n * @internal\n */\nexport function invalidRootOperation(name: string): StorageError {\n  return new StorageError(\n    StorageErrorCode.INVALID_ROOT_OPERATION,\n    \"The operation '\" +\n      name +\n      \"' cannot be performed on a root reference, create a non-root \" +\n      \"reference using child, such as .child('file.png').\"\n  );\n}\n\n/**\n * @param format - The format that was not valid.\n * @param message - A message describing the format violation.\n */\nexport function invalidFormat(format: string, message: string): StorageError {\n  return new StorageError(\n    StorageErrorCode.INVALID_FORMAT,\n    \"String does not match format '\" + format + \"': \" + message\n  );\n}\n\n/**\n * @param message - A message describing the internal error.\n */\nexport function unsupportedEnvironment(message: string): StorageError {\n  throw new StorageError(StorageErrorCode.UNSUPPORTED_ENVIRONMENT, message);\n}\n\n/**\n * @param message - A message describing the internal error.\n */\nexport function internalError(message: string): StorageError {\n  throw new StorageError(\n    StorageErrorCode.INTERNAL_ERROR,\n    'Internal error: ' + message\n  );\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** Network headers */\nexport type Headers = Record<string, string>;\n\n/**\n * A lightweight wrapper around XMLHttpRequest with a\n * goog.net.XhrIo-like interface.\n */\nexport interface Connection {\n  /**\n   * This method should never reject. In case of encountering an error, set an error code internally which can be accessed\n   * by calling getErrorCode() by callers.\n   */\n  send(\n    url: string,\n    method: string,\n    body?: ArrayBufferView | Blob | string | null,\n    headers?: Headers\n  ): Promise<void>;\n\n  getErrorCode(): ErrorCode;\n\n  getStatus(): number;\n\n  getResponseText(): string;\n\n  /**\n   * Abort the request.\n   */\n  abort(): void;\n\n  getResponseHeader(header: string): string | null;\n\n  addUploadProgressListener(listener: (p1: ProgressEvent) => void): void;\n\n  removeUploadProgressListener(listener: (p1: ProgressEvent) => void): void;\n}\n\n/**\n * Error codes for requests made by the the XhrIo wrapper.\n */\nexport enum ErrorCode {\n  NO_ERROR = 0,\n  NETWORK_ERROR = 1,\n  ABORT = 2\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Functionality related to the parsing/composition of bucket/\n * object location.\n */\n\nimport { invalidDefaultBucket, invalidUrl } from './error';\nimport { DEFAULT_HOST } from './constants';\n\n/**\n * Firebase Storage location data.\n *\n * @internal\n */\nexport class Location {\n  private path_: string;\n\n  constructor(public readonly bucket: string, path: string) {\n    this.path_ = path;\n  }\n\n  get path(): string {\n    return this.path_;\n  }\n\n  get isRoot(): boolean {\n    return this.path.length === 0;\n  }\n\n  fullServerUrl(): string {\n    const encode = encodeURIComponent;\n    return '/b/' + encode(this.bucket) + '/o/' + encode(this.path);\n  }\n\n  bucketOnlyServerUrl(): string {\n    const encode = encodeURIComponent;\n    return '/b/' + encode(this.bucket) + '/o';\n  }\n\n  static makeFromBucketSpec(bucketString: string, host: string): Location {\n    let bucketLocation;\n    try {\n      bucketLocation = Location.makeFromUrl(bucketString, host);\n    } catch (e) {\n      // Not valid URL, use as-is. This lets you put bare bucket names in\n      // config.\n      return new Location(bucketString, '');\n    }\n    if (bucketLocation.path === '') {\n      return bucketLocation;\n    } else {\n      throw invalidDefaultBucket(bucketString);\n    }\n  }\n\n  static makeFromUrl(url: string, host: string): Location {\n    let location: Location | null = null;\n    const bucketDomain = '([A-Za-z0-9.\\\\-_]+)';\n\n    function gsModify(loc: Location): void {\n      if (loc.path.charAt(loc.path.length - 1) === '/') {\n        loc.path_ = loc.path_.slice(0, -1);\n      }\n    }\n    const gsPath = '(/(.*))?$';\n    const gsRegex = new RegExp('^gs://' + bucketDomain + gsPath, 'i');\n    const gsIndices = { bucket: 1, path: 3 };\n\n    function httpModify(loc: Location): void {\n      loc.path_ = decodeURIComponent(loc.path);\n    }\n    const version = 'v[A-Za-z0-9_]+';\n    const firebaseStorageHost = host.replace(/[.]/g, '\\\\.');\n    const firebaseStoragePath = '(/([^?#]*).*)?$';\n    const firebaseStorageRegExp = new RegExp(\n      `^https?://${firebaseStorageHost}/${version}/b/${bucketDomain}/o${firebaseStoragePath}`,\n      'i'\n    );\n    const firebaseStorageIndices = { bucket: 1, path: 3 };\n\n    const cloudStorageHost =\n      host === DEFAULT_HOST\n        ? '(?:storage.googleapis.com|storage.cloud.google.com)'\n        : host;\n    const cloudStoragePath = '([^?#]*)';\n    const cloudStorageRegExp = new RegExp(\n      `^https?://${cloudStorageHost}/${bucketDomain}/${cloudStoragePath}`,\n      'i'\n    );\n    const cloudStorageIndices = { bucket: 1, path: 2 };\n\n    const groups = [\n      { regex: gsRegex, indices: gsIndices, postModify: gsModify },\n      {\n        regex: firebaseStorageRegExp,\n        indices: firebaseStorageIndices,\n        postModify: httpModify\n      },\n      {\n        regex: cloudStorageRegExp,\n        indices: cloudStorageIndices,\n        postModify: httpModify\n      }\n    ];\n    for (let i = 0; i < groups.length; i++) {\n      const group = groups[i];\n      const captures = group.regex.exec(url);\n      if (captures) {\n        const bucketValue = captures[group.indices.bucket];\n        let pathValue = captures[group.indices.path];\n        if (!pathValue) {\n          pathValue = '';\n        }\n        location = new Location(bucketValue, pathValue);\n        group.postModify(location);\n        break;\n      }\n    }\n    if (location == null) {\n      throw invalidUrl(url);\n    }\n    return location;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { StorageError } from './error';\nimport { Request } from './request';\n\n/**\n * A request whose promise always fails.\n */\nexport class FailRequest<T> implements Request<T> {\n  promise_: Promise<T>;\n\n  constructor(error: StorageError) {\n    this.promise_ = Promise.reject<T>(error);\n  }\n\n  /** @inheritDoc */\n  getPromise(): Promise<T> {\n    return this.promise_;\n  }\n\n  /** @inheritDoc */\n  cancel(_appDelete = false): void {}\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { invalidArgument } from './error';\n\nexport function isJustDef<T>(p: T | null | undefined): p is T | null {\n  return p !== void 0;\n}\n\n// eslint-disable-next-line @typescript-eslint/ban-types\nexport function isFunction(p: unknown): p is Function {\n  return typeof p === 'function';\n}\n\nexport function isNonArrayObject(p: unknown): boolean {\n  return typeof p === 'object' && !Array.isArray(p);\n}\n\nexport function isString(p: unknown): p is string {\n  return typeof p === 'string' || p instanceof String;\n}\n\nexport function isNativeBlob(p: unknown): p is Blob {\n  return isNativeBlobDefined() && p instanceof Blob;\n}\n\nexport function isNativeBlobDefined(): boolean {\n  return typeof Blob !== 'undefined';\n}\n\nexport function validateNumber(\n  argument: string,\n  minValue: number,\n  maxValue: number,\n  value: number\n): void {\n  if (value < minValue) {\n    throw invalidArgument(\n      `Invalid value for '${argument}'. Expected ${minValue} or greater.`\n    );\n  }\n  if (value > maxValue) {\n    throw invalidArgument(\n      `Invalid value for '${argument}'. Expected ${maxValue} or less.`\n    );\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Functions to create and manipulate URLs for the server API.\n */\nimport { UrlParams } from './requestinfo';\n\nexport function makeUrl(\n  urlPart: string,\n  host: string,\n  protocol: string\n): string {\n  let origin = host;\n  if (protocol == null) {\n    origin = `https://${host}`;\n  }\n  return `${protocol}://${origin}/v0${urlPart}`;\n}\n\nexport function makeQueryString(params: UrlParams): string {\n  const encode = encodeURIComponent;\n  let queryPart = '?';\n  for (const key in params) {\n    if (params.hasOwnProperty(key)) {\n      const nextPart = encode(key) + '=' + encode(params[key]);\n      queryPart = queryPart + nextPart + '&';\n    }\n  }\n\n  // Chop off the extra '&' or '?' on the end\n  queryPart = queryPart.slice(0, -1);\n  return queryPart;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Defines methods used to actually send HTTP requests from\n * abstract representations.\n */\n\nimport { start, stop, id as backoffId } from './backoff';\nimport {\n  StorageError,\n  unknown,\n  appDeleted,\n  canceled,\n  retryLimitExceeded\n} from './error';\nimport { RequestHandler, RequestInfo } from './requestinfo';\nimport { isJustDef } from './type';\nimport { makeQueryString } from './url';\nimport { Headers, Connection, ErrorCode } from './connection';\n\nexport interface Request<T> {\n  getPromise(): Promise<T>;\n\n  /**\n   * Cancels the request. IMPORTANT: the promise may still be resolved with an\n   * appropriate value (if the request is finished before you call this method,\n   * but the promise has not yet been resolved), so don't just assume it will be\n   * rejected if you call this function.\n   * @param appDelete - True if the cancelation came from the app being deleted.\n   */\n  cancel(appDelete?: boolean): void;\n}\n\nclass NetworkRequest<T> implements Request<T> {\n  private pendingConnection_: Connection | null = null;\n  private backoffId_: backoffId | null = null;\n  private resolve_!: (value?: T | PromiseLike<T>) => void;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  private reject_!: (reason?: any) => void;\n  private canceled_: boolean = false;\n  private appDelete_: boolean = false;\n  promise_: Promise<T>;\n\n  constructor(\n    private url_: string,\n    private method_: string,\n    private headers_: Headers,\n    private body_: string | Blob | Uint8Array | null,\n    private successCodes_: number[],\n    private additionalRetryCodes_: number[],\n    private callback_: RequestHandler<string, T>,\n    private errorCallback_: RequestHandler<StorageError, StorageError> | null,\n    private timeout_: number,\n    private progressCallback_: ((p1: number, p2: number) => void) | null,\n    private connectionFactory_: () => Connection\n  ) {\n    this.promise_ = new Promise((resolve, reject) => {\n      this.resolve_ = resolve as (value?: T | PromiseLike<T>) => void;\n      this.reject_ = reject;\n      this.start_();\n    });\n  }\n\n  /**\n   * Actually starts the retry loop.\n   */\n  private start_(): void {\n    const doTheRequest: (\n      backoffCallback: (success: boolean, ...p2: unknown[]) => void,\n      canceled: boolean\n    ) => void = (backoffCallback, canceled) => {\n      if (canceled) {\n        backoffCallback(false, new RequestEndStatus(false, null, true));\n        return;\n      }\n      const connection = this.connectionFactory_();\n      this.pendingConnection_ = connection;\n\n      const progressListener: (progressEvent: ProgressEvent) => void =\n        progressEvent => {\n          const loaded = progressEvent.loaded;\n          const total = progressEvent.lengthComputable\n            ? progressEvent.total\n            : -1;\n          if (this.progressCallback_ !== null) {\n            this.progressCallback_(loaded, total);\n          }\n        };\n      if (this.progressCallback_ !== null) {\n        connection.addUploadProgressListener(progressListener);\n      }\n\n      // connection.send() never rejects, so we don't need to have a error handler or use catch on the returned promise.\n      // eslint-disable-next-line @typescript-eslint/no-floating-promises\n      connection\n        .send(this.url_, this.method_, this.body_, this.headers_)\n        .then(() => {\n          if (this.progressCallback_ !== null) {\n            connection.removeUploadProgressListener(progressListener);\n          }\n          this.pendingConnection_ = null;\n          const hitServer = connection.getErrorCode() === ErrorCode.NO_ERROR;\n          const status = connection.getStatus();\n          if (!hitServer || this.isRetryStatusCode_(status)) {\n            const wasCanceled = connection.getErrorCode() === ErrorCode.ABORT;\n            backoffCallback(\n              false,\n              new RequestEndStatus(false, null, wasCanceled)\n            );\n            return;\n          }\n          const successCode = this.successCodes_.indexOf(status) !== -1;\n          backoffCallback(true, new RequestEndStatus(successCode, connection));\n        });\n    };\n\n    /**\n     * @param requestWentThrough - True if the request eventually went\n     *     through, false if it hit the retry limit or was canceled.\n     */\n    const backoffDone: (\n      requestWentThrough: boolean,\n      status: RequestEndStatus\n    ) => void = (requestWentThrough, status) => {\n      const resolve = this.resolve_;\n      const reject = this.reject_;\n      const connection = status.connection as Connection;\n      if (status.wasSuccessCode) {\n        try {\n          const result = this.callback_(\n            connection,\n            connection.getResponseText()\n          );\n          if (isJustDef(result)) {\n            resolve(result);\n          } else {\n            resolve();\n          }\n        } catch (e) {\n          reject(e);\n        }\n      } else {\n        if (connection !== null) {\n          const err = unknown();\n          err.serverResponse = connection.getResponseText();\n          if (this.errorCallback_) {\n            reject(this.errorCallback_(connection, err));\n          } else {\n            reject(err);\n          }\n        } else {\n          if (status.canceled) {\n            const err = this.appDelete_ ? appDeleted() : canceled();\n            reject(err);\n          } else {\n            const err = retryLimitExceeded();\n            reject(err);\n          }\n        }\n      }\n    };\n    if (this.canceled_) {\n      backoffDone(false, new RequestEndStatus(false, null, true));\n    } else {\n      this.backoffId_ = start(doTheRequest, backoffDone, this.timeout_);\n    }\n  }\n\n  /** @inheritDoc */\n  getPromise(): Promise<T> {\n    return this.promise_;\n  }\n\n  /** @inheritDoc */\n  cancel(appDelete?: boolean): void {\n    this.canceled_ = true;\n    this.appDelete_ = appDelete || false;\n    if (this.backoffId_ !== null) {\n      stop(this.backoffId_);\n    }\n    if (this.pendingConnection_ !== null) {\n      this.pendingConnection_.abort();\n    }\n  }\n\n  private isRetryStatusCode_(status: number): boolean {\n    // The codes for which to retry came from this page:\n    // https://cloud.google.com/storage/docs/exponential-backoff\n    const isFiveHundredCode = status >= 500 && status < 600;\n    const extraRetryCodes = [\n      // Request Timeout: web server didn't receive full request in time.\n      408,\n      // Too Many Requests: you're getting rate-limited, basically.\n      429\n    ];\n    const isExtraRetryCode = extraRetryCodes.indexOf(status) !== -1;\n    const isRequestSpecificRetryCode =\n      this.additionalRetryCodes_.indexOf(status) !== -1;\n    return isFiveHundredCode || isExtraRetryCode || isRequestSpecificRetryCode;\n  }\n}\n\n/**\n * A collection of information about the result of a network request.\n * @param opt_canceled - Defaults to false.\n */\nexport class RequestEndStatus {\n  /**\n   * True if the request was canceled.\n   */\n  canceled: boolean;\n\n  constructor(\n    public wasSuccessCode: boolean,\n    public connection: Connection | null,\n    canceled?: boolean\n  ) {\n    this.canceled = !!canceled;\n  }\n}\n\nexport function addAuthHeader_(\n  headers: Headers,\n  authToken: string | null\n): void {\n  if (authToken !== null && authToken.length > 0) {\n    headers['Authorization'] = 'Firebase ' + authToken;\n  }\n}\n\nexport function addVersionHeader_(\n  headers: Headers,\n  firebaseVersion?: string\n): void {\n  headers['X-Firebase-Storage-Version'] =\n    'webjs/' + (firebaseVersion ?? 'AppManager');\n}\n\nexport function addGmpidHeader_(headers: Headers, appId: string | null): void {\n  if (appId) {\n    headers['X-Firebase-GMPID'] = appId;\n  }\n}\n\nexport function addAppCheckHeader_(\n  headers: Headers,\n  appCheckToken: string | null\n): void {\n  if (appCheckToken !== null) {\n    headers['X-Firebase-AppCheck'] = appCheckToken;\n  }\n}\n\nexport function makeRequest<T>(\n  requestInfo: RequestInfo<T>,\n  appId: string | null,\n  authToken: string | null,\n  appCheckToken: string | null,\n  requestFactory: () => Connection,\n  firebaseVersion?: string\n): Request<T> {\n  const queryPart = makeQueryString(requestInfo.urlParams);\n  const url = requestInfo.url + queryPart;\n  const headers = Object.assign({}, requestInfo.headers);\n  addGmpidHeader_(headers, appId);\n  addAuthHeader_(headers, authToken);\n  addVersionHeader_(headers, firebaseVersion);\n  addAppCheckHeader_(headers, appCheckToken);\n  return new NetworkRequest<T>(\n    url,\n    requestInfo.method,\n    headers,\n    requestInfo.body,\n    requestInfo.successCodes,\n    requestInfo.additionalRetryCodes,\n    requestInfo.handler,\n    requestInfo.errorHandler,\n    requestInfo.timeout,\n    requestInfo.progressCallback,\n    requestFactory\n  );\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Provides a method for running a function with exponential\n * backoff.\n */\ntype id = (p1: boolean) => void;\n\nexport { id };\n\n/**\n * @param f May be invoked\n *     before the function returns.\n * @param callback Get all the arguments passed to the function\n *     passed to f, including the initial boolean.\n */\nexport function start(\n  f: (p1: (success: boolean) => void, canceled: boolean) => void,\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  callback: (...args: any[]) => unknown,\n  timeout: number\n): id {\n  // TODO(andysoto): make this code cleaner (probably refactor into an actual\n  // type instead of a bunch of functions with state shared in the closure)\n  let waitSeconds = 1;\n  // Would type this as \"number\" but that doesn't work for Node so ¯\\_(ツ)_/¯\n  // TODO: find a way to exclude Node type definition for storage because storage only works in browser\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  let timeoutId: any = null;\n  let hitTimeout = false;\n  let cancelState = 0;\n\n  function canceled(): boolean {\n    return cancelState === 2;\n  }\n  let triggeredCallback = false;\n\n  function triggerCallback(...args: any[]): void {\n    if (!triggeredCallback) {\n      triggeredCallback = true;\n      callback.apply(null, args);\n    }\n  }\n\n  function callWithDelay(millis: number): void {\n    timeoutId = setTimeout(() => {\n      timeoutId = null;\n      f(handler, canceled());\n    }, millis);\n  }\n\n  function handler(success: boolean, ...args: any[]): void {\n    if (triggeredCallback) {\n      return;\n    }\n    if (success) {\n      triggerCallback.call(null, success, ...args);\n      return;\n    }\n    const mustStop = canceled() || hitTimeout;\n    if (mustStop) {\n      triggerCallback.call(null, success, ...args);\n      return;\n    }\n    if (waitSeconds < 64) {\n      /* TODO(andysoto): don't back off so quickly if we know we're offline. */\n      waitSeconds *= 2;\n    }\n    let waitMillis;\n    if (cancelState === 1) {\n      cancelState = 2;\n      waitMillis = 0;\n    } else {\n      waitMillis = (waitSeconds + Math.random()) * 1000;\n    }\n    callWithDelay(waitMillis);\n  }\n  let stopped = false;\n\n  function stop(wasTimeout: boolean): void {\n    if (stopped) {\n      return;\n    }\n    stopped = true;\n    if (triggeredCallback) {\n      return;\n    }\n    if (timeoutId !== null) {\n      if (!wasTimeout) {\n        cancelState = 2;\n      }\n      clearTimeout(timeoutId);\n      callWithDelay(0);\n    } else {\n      if (!wasTimeout) {\n        cancelState = 1;\n      }\n    }\n  }\n  callWithDelay(0);\n  setTimeout(() => {\n    hitTimeout = true;\n    stop(true);\n  }, timeout);\n  return stop;\n}\n\n/**\n * Stops the retry loop from repeating.\n * If the function is currently \"in between\" retries, it is invoked immediately\n * with the second parameter as \"true\". Otherwise, it will be invoked once more\n * after the current invocation finishes iff the current invocation would have\n * triggered another retry.\n */\nexport function stop(id: id): void {\n  id(false);\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * @fileoverview Some methods copied from goog.fs.\n * We don't include goog.fs because it pulls in a bunch of Deferred code that\n * bloats the size of the released binary.\n */\nimport { isNativeBlobDefined } from './type';\nimport { StorageErrorCode, StorageError } from './error';\n\nfunction getBlobBuilder(): typeof IBlobBuilder | undefined {\n  if (typeof BlobBuilder !== 'undefined') {\n    return BlobBuilder;\n  } else if (typeof WebKitBlobBuilder !== 'undefined') {\n    return WebKitBlobBuilder;\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * Concatenates one or more values together and converts them to a Blob.\n *\n * @param args The values that will make up the resulting blob.\n * @return The blob.\n */\nexport function getBlob(...args: Array<string | Blob | ArrayBuffer>): Blob {\n  const BlobBuilder = getBlobBuilder();\n  if (BlobBuilder !== undefined) {\n    const bb = new BlobBuilder();\n    for (let i = 0; i < args.length; i++) {\n      bb.append(args[i]);\n    }\n    return bb.getBlob();\n  } else {\n    if (isNativeBlobDefined()) {\n      return new Blob(args);\n    } else {\n      throw new StorageError(\n        StorageErrorCode.UNSUPPORTED_ENVIRONMENT,\n        \"This browser doesn't seem to support creating Blobs\"\n      );\n    }\n  }\n}\n\n/**\n * Slices the blob. The returned blob contains data from the start byte\n * (inclusive) till the end byte (exclusive). Negative indices cannot be used.\n *\n * @param blob The blob to be sliced.\n * @param start Index of the starting byte.\n * @param end Index of the ending byte.\n * @return The blob slice or null if not supported.\n */\nexport function sliceBlob(blob: Blob, start: number, end: number): Blob | null {\n  if (blob.webkitSlice) {\n    return blob.webkitSlice(start, end);\n  } else if (blob.mozSlice) {\n    return blob.mozSlice(start, end);\n  } else if (blob.slice) {\n    return blob.slice(start, end);\n  }\n  return null;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { unknown, invalidFormat } from './error';\nimport { decodeBase64 } from '../platform/base64';\n\n/**\n * An enumeration of the possible string formats for upload.\n * @public\n */\nexport type StringFormat = typeof StringFormat[keyof typeof StringFormat];\n/**\n * An enumeration of the possible string formats for upload.\n * @public\n */\nexport const StringFormat = {\n  /**\n   * Indicates the string should be interpreted \"raw\", that is, as normal text.\n   * The string will be interpreted as UTF-16, then uploaded as a UTF-8 byte\n   * sequence.\n   * Example: The string 'Hello! \\\\ud83d\\\\ude0a' becomes the byte sequence\n   * 48 65 6c 6c 6f 21 20 f0 9f 98 8a\n   */\n  RAW: 'raw',\n  /**\n   * Indicates the string should be interpreted as base64-encoded data.\n   * Padding characters (trailing '='s) are optional.\n   * Example: The string 'rWmO++E6t7/rlw==' becomes the byte sequence\n   * ad 69 8e fb e1 3a b7 bf eb 97\n   */\n  BASE64: 'base64',\n  /**\n   * Indicates the string should be interpreted as base64url-encoded data.\n   * Padding characters (trailing '='s) are optional.\n   * Example: The string 'rWmO--E6t7_rlw==' becomes the byte sequence\n   * ad 69 8e fb e1 3a b7 bf eb 97\n   */\n  BASE64URL: 'base64url',\n  /**\n   * Indicates the string is a data URL, such as one obtained from\n   * canvas.toDataURL().\n   * Example: the string 'data:application/octet-stream;base64,aaaa'\n   * becomes the byte sequence\n   * 69 a6 9a\n   * (the content-type \"application/octet-stream\" is also applied, but can\n   * be overridden in the metadata object).\n   */\n  DATA_URL: 'data_url'\n} as const;\n\nexport class StringData {\n  contentType: string | null;\n\n  constructor(public data: Uint8Array, contentType?: string | null) {\n    this.contentType = contentType || null;\n  }\n}\n\n/**\n * @internal\n */\nexport function dataFromString(\n  format: StringFormat,\n  stringData: string\n): StringData {\n  switch (format) {\n    case StringFormat.RAW:\n      return new StringData(utf8Bytes_(stringData));\n    case StringFormat.BASE64:\n    case StringFormat.BASE64URL:\n      return new StringData(base64Bytes_(format, stringData));\n    case StringFormat.DATA_URL:\n      return new StringData(\n        dataURLBytes_(stringData),\n        dataURLContentType_(stringData)\n      );\n    default:\n    // do nothing\n  }\n\n  // assert(false);\n  throw unknown();\n}\n\nexport function utf8Bytes_(value: string): Uint8Array {\n  const b: number[] = [];\n  for (let i = 0; i < value.length; i++) {\n    let c = value.charCodeAt(i);\n    if (c <= 127) {\n      b.push(c);\n    } else {\n      if (c <= 2047) {\n        b.push(192 | (c >> 6), 128 | (c & 63));\n      } else {\n        if ((c & 64512) === 55296) {\n          // The start of a surrogate pair.\n          const valid =\n            i < value.length - 1 && (value.charCodeAt(i + 1) & 64512) === 56320;\n          if (!valid) {\n            // The second surrogate wasn't there.\n            b.push(239, 191, 189);\n          } else {\n            const hi = c;\n            const lo = value.charCodeAt(++i);\n            c = 65536 | ((hi & 1023) << 10) | (lo & 1023);\n            b.push(\n              240 | (c >> 18),\n              128 | ((c >> 12) & 63),\n              128 | ((c >> 6) & 63),\n              128 | (c & 63)\n            );\n          }\n        } else {\n          if ((c & 64512) === 56320) {\n            // Invalid low surrogate.\n            b.push(239, 191, 189);\n          } else {\n            b.push(224 | (c >> 12), 128 | ((c >> 6) & 63), 128 | (c & 63));\n          }\n        }\n      }\n    }\n  }\n  return new Uint8Array(b);\n}\n\nexport function percentEncodedBytes_(value: string): Uint8Array {\n  let decoded;\n  try {\n    decoded = decodeURIComponent(value);\n  } catch (e) {\n    throw invalidFormat(StringFormat.DATA_URL, 'Malformed data URL.');\n  }\n  return utf8Bytes_(decoded);\n}\n\nexport function base64Bytes_(format: StringFormat, value: string): Uint8Array {\n  switch (format) {\n    case StringFormat.BASE64: {\n      const hasMinus = value.indexOf('-') !== -1;\n      const hasUnder = value.indexOf('_') !== -1;\n      if (hasMinus || hasUnder) {\n        const invalidChar = hasMinus ? '-' : '_';\n        throw invalidFormat(\n          format,\n          \"Invalid character '\" +\n            invalidChar +\n            \"' found: is it base64url encoded?\"\n        );\n      }\n      break;\n    }\n    case StringFormat.BASE64URL: {\n      const hasPlus = value.indexOf('+') !== -1;\n      const hasSlash = value.indexOf('/') !== -1;\n      if (hasPlus || hasSlash) {\n        const invalidChar = hasPlus ? '+' : '/';\n        throw invalidFormat(\n          format,\n          \"Invalid character '\" + invalidChar + \"' found: is it base64 encoded?\"\n        );\n      }\n      value = value.replace(/-/g, '+').replace(/_/g, '/');\n      break;\n    }\n    default:\n    // do nothing\n  }\n  let bytes;\n  try {\n    bytes = decodeBase64(value);\n  } catch (e) {\n    throw invalidFormat(format, 'Invalid character found');\n  }\n  const array = new Uint8Array(bytes.length);\n  for (let i = 0; i < bytes.length; i++) {\n    array[i] = bytes.charCodeAt(i);\n  }\n  return array;\n}\n\nclass DataURLParts {\n  base64: boolean = false;\n  contentType: string | null = null;\n  rest: string;\n\n  constructor(dataURL: string) {\n    const matches = dataURL.match(/^data:([^,]+)?,/);\n    if (matches === null) {\n      throw invalidFormat(\n        StringFormat.DATA_URL,\n        \"Must be formatted 'data:[<mediatype>][;base64],<data>\"\n      );\n    }\n    const middle = matches[1] || null;\n    if (middle != null) {\n      this.base64 = endsWith(middle, ';base64');\n      this.contentType = this.base64\n        ? middle.substring(0, middle.length - ';base64'.length)\n        : middle;\n    }\n    this.rest = dataURL.substring(dataURL.indexOf(',') + 1);\n  }\n}\n\nexport function dataURLBytes_(dataUrl: string): Uint8Array {\n  const parts = new DataURLParts(dataUrl);\n  if (parts.base64) {\n    return base64Bytes_(StringFormat.BASE64, parts.rest);\n  } else {\n    return percentEncodedBytes_(parts.rest);\n  }\n}\n\nexport function dataURLContentType_(dataUrl: string): string | null {\n  const parts = new DataURLParts(dataUrl);\n  return parts.contentType;\n}\n\nfunction endsWith(s: string, end: string): boolean {\n  const longEnough = s.length >= end.length;\n  if (!longEnough) {\n    return false;\n  }\n\n  return s.substring(s.length - end.length) === end;\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** Converts a Base64 encoded string to a binary string. */\nexport function decodeBase64(encoded: string): string {\n  return atob(encoded);\n}\n\nexport function decodeUint8Array(data: Uint8Array): string {\n  return new TextDecoder().decode(data);\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @file Provides a Blob-like wrapper for various binary types (including the\n * native Blob type). This makes it possible to upload types like ArrayBuffers,\n * making uploads possible in environments without the native Blob type.\n */\nimport { sliceBlob, getBlob } from './fs';\nimport { StringFormat, dataFromString } from './string';\nimport { isNativeBlob, isNativeBlobDefined, isString } from './type';\n\n/**\n * @param opt_elideCopy - If true, doesn't copy mutable input data\n *     (e.g. Uint8Arrays). Pass true only if you know the objects will not be\n *     modified after this blob's construction.\n *\n * @internal\n */\nexport class FbsBlob {\n  private data_!: Blob | Uint8Array;\n  private size_: number;\n  private type_: string;\n\n  constructor(data: Blob | Uint8Array | ArrayBuffer, elideCopy?: boolean) {\n    let size: number = 0;\n    let blobType: string = '';\n    if (isNativeBlob(data)) {\n      this.data_ = data as Blob;\n      size = (data as Blob).size;\n      blobType = (data as Blob).type;\n    } else if (data instanceof ArrayBuffer) {\n      if (elideCopy) {\n        this.data_ = new Uint8Array(data);\n      } else {\n        this.data_ = new Uint8Array(data.byteLength);\n        this.data_.set(new Uint8Array(data));\n      }\n      size = this.data_.length;\n    } else if (data instanceof Uint8Array) {\n      if (elideCopy) {\n        this.data_ = data as Uint8Array;\n      } else {\n        this.data_ = new Uint8Array(data.length);\n        this.data_.set(data as Uint8Array);\n      }\n      size = data.length;\n    }\n    this.size_ = size;\n    this.type_ = blobType;\n  }\n\n  size(): number {\n    return this.size_;\n  }\n\n  type(): string {\n    return this.type_;\n  }\n\n  slice(startByte: number, endByte: number): FbsBlob | null {\n    if (isNativeBlob(this.data_)) {\n      const realBlob = this.data_ as Blob;\n      const sliced = sliceBlob(realBlob, startByte, endByte);\n      if (sliced === null) {\n        return null;\n      }\n      return new FbsBlob(sliced);\n    } else {\n      const slice = new Uint8Array(\n        (this.data_ as Uint8Array).buffer,\n        startByte,\n        endByte - startByte\n      );\n      return new FbsBlob(slice, true);\n    }\n  }\n\n  static getBlob(...args: Array<string | FbsBlob>): FbsBlob | null {\n    if (isNativeBlobDefined()) {\n      const blobby: Array<Blob | Uint8Array | string> = args.map(\n        (val: string | FbsBlob): Blob | Uint8Array | string => {\n          if (val instanceof FbsBlob) {\n            return val.data_;\n          } else {\n            return val;\n          }\n        }\n      );\n      return new FbsBlob(getBlob.apply(null, blobby));\n    } else {\n      const uint8Arrays: Uint8Array[] = args.map(\n        (val: string | FbsBlob): Uint8Array => {\n          if (isString(val)) {\n            return dataFromString(StringFormat.RAW, val as string).data;\n          } else {\n            // Blobs don't exist, so this has to be a Uint8Array.\n            return (val as FbsBlob).data_ as Uint8Array;\n          }\n        }\n      );\n      let finalLength = 0;\n      uint8Arrays.forEach((array: Uint8Array): void => {\n        finalLength += array.byteLength;\n      });\n      const merged = new Uint8Array(finalLength);\n      let index = 0;\n      uint8Arrays.forEach((array: Uint8Array) => {\n        for (let i = 0; i < array.length; i++) {\n          merged[index++] = array[i];\n        }\n      });\n      return new FbsBlob(merged, true);\n    }\n  }\n\n  uploadData(): Blob | Uint8Array {\n    return this.data_;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { isNonArrayObject } from './type';\n\n/**\n * Returns the Object resulting from parsing the given JSON, or null if the\n * given string does not represent a JSON object.\n */\nexport function jsonObjectOrNull(\n  s: string\n): { [name: string]: unknown } | null {\n  let obj;\n  try {\n    obj = JSON.parse(s);\n  } catch (e) {\n    return null;\n  }\n  if (isNonArrayObject(obj)) {\n    return obj;\n  } else {\n    return null;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Contains helper methods for manipulating paths.\n */\n\n/**\n * @return Null if the path is already at the root.\n */\nexport function parent(path: string): string | null {\n  if (path.length === 0) {\n    return null;\n  }\n  const index = path.lastIndexOf('/');\n  if (index === -1) {\n    return '';\n  }\n  const newPath = path.slice(0, index);\n  return newPath;\n}\n\nexport function child(path: string, childPath: string): string {\n  const canonicalChildPath = childPath\n    .split('/')\n    .filter(component => component.length > 0)\n    .join('/');\n  if (path.length === 0) {\n    return canonicalChildPath;\n  } else {\n    return path + '/' + canonicalChildPath;\n  }\n}\n\n/**\n * Returns the last component of a path.\n * '/foo/bar' -> 'bar'\n * '/foo/bar/baz/' -> 'baz/'\n * '/a' -> 'a'\n */\nexport function lastComponent(path: string): string {\n  const index = path.lastIndexOf('/', path.length - 2);\n  if (index === -1) {\n    return path;\n  } else {\n    return path.slice(index + 1);\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Documentation for the metadata format\n */\nimport { Metadata } from '../metadata';\n\nimport { jsonObjectOrNull } from './json';\nimport { Location } from './location';\nimport { lastComponent } from './path';\nimport { isString } from './type';\nimport { makeUrl, makeQueryString } from './url';\nimport { Reference } from '../reference';\nimport { FirebaseStorageImpl } from '../service';\n\nexport function noXform_<T>(metadata: Metadata, value: T): T {\n  return value;\n}\n\nclass Mapping<T> {\n  local: string;\n  writable: boolean;\n  xform: (p1: Metadata, p2?: T) => T | undefined;\n\n  constructor(\n    public server: string,\n    local?: string | null,\n    writable?: boolean,\n    xform?: ((p1: Metadata, p2?: T) => T | undefined) | null\n  ) {\n    this.local = local || server;\n    this.writable = !!writable;\n    this.xform = xform || noXform_;\n  }\n}\ntype Mappings = Array<Mapping<string> | Mapping<number>>;\n\nexport { Mappings };\n\nlet mappings_: Mappings | null = null;\n\nexport function xformPath(fullPath: string | undefined): string | undefined {\n  if (!isString(fullPath) || fullPath.length < 2) {\n    return fullPath;\n  } else {\n    return lastComponent(fullPath);\n  }\n}\n\nexport function getMappings(): Mappings {\n  if (mappings_) {\n    return mappings_;\n  }\n  const mappings: Mappings = [];\n  mappings.push(new Mapping<string>('bucket'));\n  mappings.push(new Mapping<string>('generation'));\n  mappings.push(new Mapping<string>('metageneration'));\n  mappings.push(new Mapping<string>('name', 'fullPath', true));\n\n  function mappingsXformPath(\n    _metadata: Metadata,\n    fullPath: string | undefined\n  ): string | undefined {\n    return xformPath(fullPath);\n  }\n  const nameMapping = new Mapping<string>('name');\n  nameMapping.xform = mappingsXformPath;\n  mappings.push(nameMapping);\n\n  /**\n   * Coerces the second param to a number, if it is defined.\n   */\n  function xformSize(\n    _metadata: Metadata,\n    size?: number | string\n  ): number | undefined {\n    if (size !== undefined) {\n      return Number(size);\n    } else {\n      return size;\n    }\n  }\n  const sizeMapping = new Mapping<number>('size');\n  sizeMapping.xform = xformSize;\n  mappings.push(sizeMapping);\n  mappings.push(new Mapping<number>('timeCreated'));\n  mappings.push(new Mapping<string>('updated'));\n  mappings.push(new Mapping<string>('md5Hash', null, true));\n  mappings.push(new Mapping<string>('cacheControl', null, true));\n  mappings.push(new Mapping<string>('contentDisposition', null, true));\n  mappings.push(new Mapping<string>('contentEncoding', null, true));\n  mappings.push(new Mapping<string>('contentLanguage', null, true));\n  mappings.push(new Mapping<string>('contentType', null, true));\n  mappings.push(new Mapping<string>('metadata', 'customMetadata', true));\n  mappings_ = mappings;\n  return mappings_;\n}\n\nexport function addRef(metadata: Metadata, service: FirebaseStorageImpl): void {\n  function generateRef(): Reference {\n    const bucket: string = metadata['bucket'] as string;\n    const path: string = metadata['fullPath'] as string;\n    const loc = new Location(bucket, path);\n    return service._makeStorageReference(loc);\n  }\n  Object.defineProperty(metadata, 'ref', { get: generateRef });\n}\n\nexport function fromResource(\n  service: FirebaseStorageImpl,\n  resource: { [name: string]: unknown },\n  mappings: Mappings\n): Metadata {\n  const metadata: Metadata = {} as Metadata;\n  metadata['type'] = 'file';\n  const len = mappings.length;\n  for (let i = 0; i < len; i++) {\n    const mapping = mappings[i];\n    metadata[mapping.local] = (mapping as Mapping<unknown>).xform(\n      metadata,\n      resource[mapping.server]\n    );\n  }\n  addRef(metadata, service);\n  return metadata;\n}\n\nexport function fromResourceString(\n  service: FirebaseStorageImpl,\n  resourceString: string,\n  mappings: Mappings\n): Metadata | null {\n  const obj = jsonObjectOrNull(resourceString);\n  if (obj === null) {\n    return null;\n  }\n  const resource = obj as Metadata;\n  return fromResource(service, resource, mappings);\n}\n\nexport function downloadUrlFromResourceString(\n  metadata: Metadata,\n  resourceString: string,\n  host: string,\n  protocol: string\n): string | null {\n  const obj = jsonObjectOrNull(resourceString);\n  if (obj === null) {\n    return null;\n  }\n  if (!isString(obj['downloadTokens'])) {\n    // This can happen if objects are uploaded through GCS and retrieved\n    // through list, so we don't want to throw an Error.\n    return null;\n  }\n  const tokens: string = obj['downloadTokens'] as string;\n  if (tokens.length === 0) {\n    return null;\n  }\n  const encode = encodeURIComponent;\n  const tokensList = tokens.split(',');\n  const urls = tokensList.map((token: string): string => {\n    const bucket: string = metadata['bucket'] as string;\n    const path: string = metadata['fullPath'] as string;\n    const urlPart = '/b/' + encode(bucket) + '/o/' + encode(path);\n    const base = makeUrl(urlPart, host, protocol);\n    const queryString = makeQueryString({\n      alt: 'media',\n      token\n    });\n    return base + queryString;\n  });\n  return urls[0];\n}\n\nexport function toResourceString(\n  metadata: Partial<Metadata>,\n  mappings: Mappings\n): string {\n  const resource: {\n    [prop: string]: unknown;\n  } = {};\n  const len = mappings.length;\n  for (let i = 0; i < len; i++) {\n    const mapping = mappings[i];\n    if (mapping.writable) {\n      resource[mapping.server] = metadata[mapping.local];\n    }\n  }\n  return JSON.stringify(resource);\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { StorageError } from './error';\nimport { Headers, Connection } from './connection';\n\n/**\n * Type for url params stored in RequestInfo.\n */\nexport interface UrlParams {\n  [name: string]: string | number;\n}\n\n/**\n * A function that converts a server response to the API type expected by the\n * SDK.\n *\n * @param I - the type of the backend's network response\n * @param O - the output response type used by the rest of the SDK.\n */\nexport type RequestHandler<I, O> = (connection: Connection, response: I) => O;\n\nexport class RequestInfo<T> {\n  urlParams: UrlParams = {};\n  headers: Headers = {};\n  body: Blob | string | Uint8Array | null = null;\n  errorHandler: RequestHandler<StorageError, StorageError> | null = null;\n\n  /**\n   * Called with the current number of bytes uploaded and total size (-1 if not\n   * computable) of the request body (i.e. used to report upload progress).\n   */\n  progressCallback: ((p1: number, p2: number) => void) | null = null;\n  successCodes: number[] = [200];\n  additionalRetryCodes: number[] = [];\n\n  constructor(\n    public url: string,\n    public method: string,\n    /**\n     * Returns the value with which to resolve the request's promise. Only called\n     * if the request is successful. Throw from this function to reject the\n     * returned Request's promise with the thrown error.\n     * Note: The XhrIo passed to this function may be reused after this callback\n     * returns. Do not keep a reference to it in any way.\n     */\n    public handler: RequestHandler<string, T>,\n    public timeout: number\n  ) {}\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Defines methods for interacting with the network.\n */\n\nimport { Metadata } from '../metadata';\nimport { ListResult } from '../list';\nimport { FbsBlob } from './blob';\nimport {\n  StorageError,\n  cannotSliceBlob,\n  unauthenticated,\n  quotaExceeded,\n  unauthorized,\n  objectNotFound,\n  serverFileWrongSize,\n  unknown,\n  unauthorizedApp\n} from './error';\nimport { Location } from './location';\nimport {\n  Mappings,\n  fromResourceString,\n  downloadUrlFromResourceString,\n  toResourceString\n} from './metadata';\nimport { fromResponseString } from './list';\nimport { RequestInfo, UrlParams } from './requestinfo';\nimport { isString } from './type';\nimport { makeUrl } from './url';\nimport { Connection } from './connection';\nimport { FirebaseStorageImpl } from '../service';\n\n/**\n * Throws the UNKNOWN StorageError if cndn is false.\n */\nexport function handlerCheck(cndn: boolean): void {\n  if (!cndn) {\n    throw unknown();\n  }\n}\n\nexport function metadataHandler(\n  service: FirebaseStorageImpl,\n  mappings: Mappings\n): (p1: Connection, p2: string) => Metadata {\n  function handler(xhr: Connection, text: string): Metadata {\n    const metadata = fromResourceString(service, text, mappings);\n    handlerCheck(metadata !== null);\n    return metadata as Metadata;\n  }\n  return handler;\n}\n\nexport function listHandler(\n  service: FirebaseStorageImpl,\n  bucket: string\n): (p1: Connection, p2: string) => ListResult {\n  function handler(xhr: Connection, text: string): ListResult {\n    const listResult = fromResponseString(service, bucket, text);\n    handlerCheck(listResult !== null);\n    return listResult as ListResult;\n  }\n  return handler;\n}\n\nexport function downloadUrlHandler(\n  service: FirebaseStorageImpl,\n  mappings: Mappings\n): (p1: Connection, p2: string) => string | null {\n  function handler(xhr: Connection, text: string): string | null {\n    const metadata = fromResourceString(service, text, mappings);\n    handlerCheck(metadata !== null);\n    return downloadUrlFromResourceString(\n      metadata as Metadata,\n      text,\n      service.host,\n      service._protocol\n    );\n  }\n  return handler;\n}\n\nexport function sharedErrorHandler(\n  location: Location\n): (p1: Connection, p2: StorageError) => StorageError {\n  function errorHandler(xhr: Connection, err: StorageError): StorageError {\n    let newErr;\n    if (xhr.getStatus() === 401) {\n      if (\n        // This exact message string is the only consistent part of the\n        // server's error response that identifies it as an App Check error.\n        xhr.getResponseText().includes('Firebase App Check token is invalid')\n      ) {\n        newErr = unauthorizedApp();\n      } else {\n        newErr = unauthenticated();\n      }\n    } else {\n      if (xhr.getStatus() === 402) {\n        newErr = quotaExceeded(location.bucket);\n      } else {\n        if (xhr.getStatus() === 403) {\n          newErr = unauthorized(location.path);\n        } else {\n          newErr = err;\n        }\n      }\n    }\n    newErr.serverResponse = err.serverResponse;\n    return newErr;\n  }\n  return errorHandler;\n}\n\nexport function objectErrorHandler(\n  location: Location\n): (p1: Connection, p2: StorageError) => StorageError {\n  const shared = sharedErrorHandler(location);\n\n  function errorHandler(xhr: Connection, err: StorageError): StorageError {\n    let newErr = shared(xhr, err);\n    if (xhr.getStatus() === 404) {\n      newErr = objectNotFound(location.path);\n    }\n    newErr.serverResponse = err.serverResponse;\n    return newErr;\n  }\n  return errorHandler;\n}\n\nexport function getMetadata(\n  service: FirebaseStorageImpl,\n  location: Location,\n  mappings: Mappings\n): RequestInfo<Metadata> {\n  const urlPart = location.fullServerUrl();\n  const url = makeUrl(urlPart, service.host, service._protocol);\n  const method = 'GET';\n  const timeout = service.maxOperationRetryTime;\n  const requestInfo = new RequestInfo(\n    url,\n    method,\n    metadataHandler(service, mappings),\n    timeout\n  );\n  requestInfo.errorHandler = objectErrorHandler(location);\n  return requestInfo;\n}\n\nexport function list(\n  service: FirebaseStorageImpl,\n  location: Location,\n  delimiter?: string,\n  pageToken?: string | null,\n  maxResults?: number | null\n): RequestInfo<ListResult> {\n  const urlParams: UrlParams = {};\n  if (location.isRoot) {\n    urlParams['prefix'] = '';\n  } else {\n    urlParams['prefix'] = location.path + '/';\n  }\n  if (delimiter && delimiter.length > 0) {\n    urlParams['delimiter'] = delimiter;\n  }\n  if (pageToken) {\n    urlParams['pageToken'] = pageToken;\n  }\n  if (maxResults) {\n    urlParams['maxResults'] = maxResults;\n  }\n  const urlPart = location.bucketOnlyServerUrl();\n  const url = makeUrl(urlPart, service.host, service._protocol);\n  const method = 'GET';\n  const timeout = service.maxOperationRetryTime;\n  const requestInfo = new RequestInfo(\n    url,\n    method,\n    listHandler(service, location.bucket),\n    timeout\n  );\n  requestInfo.urlParams = urlParams;\n  requestInfo.errorHandler = sharedErrorHandler(location);\n  return requestInfo;\n}\n\nexport function getDownloadUrl(\n  service: FirebaseStorageImpl,\n  location: Location,\n  mappings: Mappings\n): RequestInfo<string | null> {\n  const urlPart = location.fullServerUrl();\n  const url = makeUrl(urlPart, service.host, service._protocol);\n  const method = 'GET';\n  const timeout = service.maxOperationRetryTime;\n  const requestInfo = new RequestInfo(\n    url,\n    method,\n    downloadUrlHandler(service, mappings),\n    timeout\n  );\n  requestInfo.errorHandler = objectErrorHandler(location);\n  return requestInfo;\n}\n\nexport function updateMetadata(\n  service: FirebaseStorageImpl,\n  location: Location,\n  metadata: Partial<Metadata>,\n  mappings: Mappings\n): RequestInfo<Metadata> {\n  const urlPart = location.fullServerUrl();\n  const url = makeUrl(urlPart, service.host, service._protocol);\n  const method = 'PATCH';\n  const body = toResourceString(metadata, mappings);\n  const headers = { 'Content-Type': 'application/json; charset=utf-8' };\n  const timeout = service.maxOperationRetryTime;\n  const requestInfo = new RequestInfo(\n    url,\n    method,\n    metadataHandler(service, mappings),\n    timeout\n  );\n  requestInfo.headers = headers;\n  requestInfo.body = body;\n  requestInfo.errorHandler = objectErrorHandler(location);\n  return requestInfo;\n}\n\nexport function deleteObject(\n  service: FirebaseStorageImpl,\n  location: Location\n): RequestInfo<void> {\n  const urlPart = location.fullServerUrl();\n  const url = makeUrl(urlPart, service.host, service._protocol);\n  const method = 'DELETE';\n  const timeout = service.maxOperationRetryTime;\n\n  function handler(_xhr: Connection, _text: string): void {}\n  const requestInfo = new RequestInfo(url, method, handler, timeout);\n  requestInfo.successCodes = [200, 204];\n  requestInfo.errorHandler = objectErrorHandler(location);\n  return requestInfo;\n}\n\nexport function determineContentType_(\n  metadata: Metadata | null,\n  blob: FbsBlob | null\n): string {\n  return (\n    (metadata && metadata['contentType']) ||\n    (blob && blob.type()) ||\n    'application/octet-stream'\n  );\n}\n\nexport function metadataForUpload_(\n  location: Location,\n  blob: FbsBlob,\n  metadata?: Metadata | null\n): Metadata {\n  const metadataClone = Object.assign({}, metadata);\n  metadataClone['fullPath'] = location.path;\n  metadataClone['size'] = blob.size();\n  if (!metadataClone['contentType']) {\n    metadataClone['contentType'] = determineContentType_(null, blob);\n  }\n  return metadataClone;\n}\n\n/**\n * Prepare RequestInfo for uploads as Content-Type: multipart.\n */\nexport function multipartUpload(\n  service: FirebaseStorageImpl,\n  location: Location,\n  mappings: Mappings,\n  blob: FbsBlob,\n  metadata?: Metadata | null\n): RequestInfo<Metadata> {\n  const urlPart = location.bucketOnlyServerUrl();\n  const headers: { [prop: string]: string } = {\n    'X-Goog-Upload-Protocol': 'multipart'\n  };\n\n  function genBoundary(): string {\n    let str = '';\n    for (let i = 0; i < 2; i++) {\n      str = str + Math.random().toString().slice(2);\n    }\n    return str;\n  }\n  const boundary = genBoundary();\n  headers['Content-Type'] = 'multipart/related; boundary=' + boundary;\n  const metadata_ = metadataForUpload_(location, blob, metadata);\n  const metadataString = toResourceString(metadata_, mappings);\n  const preBlobPart =\n    '--' +\n    boundary +\n    '\\r\\n' +\n    'Content-Type: application/json; charset=utf-8\\r\\n\\r\\n' +\n    metadataString +\n    '\\r\\n--' +\n    boundary +\n    '\\r\\n' +\n    'Content-Type: ' +\n    metadata_['contentType'] +\n    '\\r\\n\\r\\n';\n  const postBlobPart = '\\r\\n--' + boundary + '--';\n  const body = FbsBlob.getBlob(preBlobPart, blob, postBlobPart);\n  if (body === null) {\n    throw cannotSliceBlob();\n  }\n  const urlParams: UrlParams = { name: metadata_['fullPath']! };\n  const url = makeUrl(urlPart, service.host, service._protocol);\n  const method = 'POST';\n  const timeout = service.maxUploadRetryTime;\n  const requestInfo = new RequestInfo(\n    url,\n    method,\n    metadataHandler(service, mappings),\n    timeout\n  );\n  requestInfo.urlParams = urlParams;\n  requestInfo.headers = headers;\n  requestInfo.body = body.uploadData();\n  requestInfo.errorHandler = sharedErrorHandler(location);\n  return requestInfo;\n}\n\n/**\n * @param current The number of bytes that have been uploaded so far.\n * @param total The total number of bytes in the upload.\n * @param opt_finalized True if the server has finished the upload.\n * @param opt_metadata The upload metadata, should\n *     only be passed if opt_finalized is true.\n */\nexport class ResumableUploadStatus {\n  finalized: boolean;\n  metadata: Metadata | null;\n\n  constructor(\n    public current: number,\n    public total: number,\n    finalized?: boolean,\n    metadata?: Metadata | null\n  ) {\n    this.finalized = !!finalized;\n    this.metadata = metadata || null;\n  }\n}\n\nexport function checkResumeHeader_(\n  xhr: Connection,\n  allowed?: string[]\n): string {\n  let status: string | null = null;\n  try {\n    status = xhr.getResponseHeader('X-Goog-Upload-Status');\n  } catch (e) {\n    handlerCheck(false);\n  }\n  const allowedStatus = allowed || ['active'];\n  handlerCheck(!!status && allowedStatus.indexOf(status) !== -1);\n  return status as string;\n}\n\nexport function createResumableUpload(\n  service: FirebaseStorageImpl,\n  location: Location,\n  mappings: Mappings,\n  blob: FbsBlob,\n  metadata?: Metadata | null\n): RequestInfo<string> {\n  const urlPart = location.bucketOnlyServerUrl();\n  const metadataForUpload = metadataForUpload_(location, blob, metadata);\n  const urlParams: UrlParams = { name: metadataForUpload['fullPath']! };\n  const url = makeUrl(urlPart, service.host, service._protocol);\n  const method = 'POST';\n  const headers = {\n    'X-Goog-Upload-Protocol': 'resumable',\n    'X-Goog-Upload-Command': 'start',\n    'X-Goog-Upload-Header-Content-Length': `${blob.size()}`,\n    'X-Goog-Upload-Header-Content-Type': metadataForUpload['contentType']!,\n    'Content-Type': 'application/json; charset=utf-8'\n  };\n  const body = toResourceString(metadataForUpload, mappings);\n  const timeout = service.maxUploadRetryTime;\n\n  function handler(xhr: Connection): string {\n    checkResumeHeader_(xhr);\n    let url;\n    try {\n      url = xhr.getResponseHeader('X-Goog-Upload-URL');\n    } catch (e) {\n      handlerCheck(false);\n    }\n    handlerCheck(isString(url));\n    return url as string;\n  }\n  const requestInfo = new RequestInfo(url, method, handler, timeout);\n  requestInfo.urlParams = urlParams;\n  requestInfo.headers = headers;\n  requestInfo.body = body;\n  requestInfo.errorHandler = sharedErrorHandler(location);\n  return requestInfo;\n}\n\n/**\n * @param url From a call to fbs.requests.createResumableUpload.\n */\nexport function getResumableUploadStatus(\n  service: FirebaseStorageImpl,\n  location: Location,\n  url: string,\n  blob: FbsBlob\n): RequestInfo<ResumableUploadStatus> {\n  const headers = { 'X-Goog-Upload-Command': 'query' };\n\n  function handler(xhr: Connection): ResumableUploadStatus {\n    const status = checkResumeHeader_(xhr, ['active', 'final']);\n    let sizeString: string | null = null;\n    try {\n      sizeString = xhr.getResponseHeader('X-Goog-Upload-Size-Received');\n    } catch (e) {\n      handlerCheck(false);\n    }\n\n    if (!sizeString) {\n      // null or empty string\n      handlerCheck(false);\n    }\n\n    const size = Number(sizeString);\n    handlerCheck(!isNaN(size));\n    return new ResumableUploadStatus(size, blob.size(), status === 'final');\n  }\n  const method = 'POST';\n  const timeout = service.maxUploadRetryTime;\n  const requestInfo = new RequestInfo(url, method, handler, timeout);\n  requestInfo.headers = headers;\n  requestInfo.errorHandler = sharedErrorHandler(location);\n  return requestInfo;\n}\n\n/**\n * Any uploads via the resumable upload API must transfer a number of bytes\n * that is a multiple of this number.\n */\nexport const RESUMABLE_UPLOAD_CHUNK_SIZE: number = 256 * 1024;\n\n/**\n * @param url From a call to fbs.requests.createResumableUpload.\n * @param chunkSize Number of bytes to upload.\n * @param status The previous status.\n *     If not passed or null, we start from the beginning.\n * @throws fbs.Error If the upload is already complete, the passed in status\n *     has a final size inconsistent with the blob, or the blob cannot be sliced\n *     for upload.\n */\nexport function continueResumableUpload(\n  location: Location,\n  service: FirebaseStorageImpl,\n  url: string,\n  blob: FbsBlob,\n  chunkSize: number,\n  mappings: Mappings,\n  status?: ResumableUploadStatus | null,\n  progressCallback?: ((p1: number, p2: number) => void) | null\n): RequestInfo<ResumableUploadStatus> {\n  // TODO(andysoto): standardize on internal asserts\n  // assert(!(opt_status && opt_status.finalized));\n  const status_ = new ResumableUploadStatus(0, 0);\n  if (status) {\n    status_.current = status.current;\n    status_.total = status.total;\n  } else {\n    status_.current = 0;\n    status_.total = blob.size();\n  }\n  if (blob.size() !== status_.total) {\n    throw serverFileWrongSize();\n  }\n  const bytesLeft = status_.total - status_.current;\n  let bytesToUpload = bytesLeft;\n  if (chunkSize > 0) {\n    bytesToUpload = Math.min(bytesToUpload, chunkSize);\n  }\n  const startByte = status_.current;\n  const endByte = startByte + bytesToUpload;\n  const uploadCommand =\n    bytesToUpload === bytesLeft ? 'upload, finalize' : 'upload';\n  const headers = {\n    'X-Goog-Upload-Command': uploadCommand,\n    'X-Goog-Upload-Offset': `${status_.current}`\n  };\n  const body = blob.slice(startByte, endByte);\n  if (body === null) {\n    throw cannotSliceBlob();\n  }\n\n  function handler(xhr: Connection, text: string): ResumableUploadStatus {\n    // TODO(andysoto): Verify the MD5 of each uploaded range:\n    // the 'x-range-md5' header comes back with status code 308 responses.\n    // We'll only be able to bail out though, because you can't re-upload a\n    // range that you previously uploaded.\n    const uploadStatus = checkResumeHeader_(xhr, ['active', 'final']);\n    const newCurrent = status_.current + bytesToUpload;\n    const size = blob.size();\n    let metadata;\n    if (uploadStatus === 'final') {\n      metadata = metadataHandler(service, mappings)(xhr, text);\n    } else {\n      metadata = null;\n    }\n    return new ResumableUploadStatus(\n      newCurrent,\n      size,\n      uploadStatus === 'final',\n      metadata\n    );\n  }\n  const method = 'POST';\n  const timeout = service.maxUploadRetryTime;\n  const requestInfo = new RequestInfo(url, method, handler, timeout);\n  requestInfo.headers = headers;\n  requestInfo.body = body.uploadData();\n  requestInfo.progressCallback = progressCallback || null;\n  requestInfo.errorHandler = sharedErrorHandler(location);\n  return requestInfo;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Enumerations used for upload tasks.\n */\n\n/**\n * An event that is triggered on a task.\n * @internal\n */\nexport type TaskEvent = string;\n\n/**\n * An event that is triggered on a task.\n * @internal\n */\nexport const TaskEvent = {\n  /**\n   * For this event,\n   * <ul>\n   *   <li>The `next` function is triggered on progress updates and when the\n   *       task is paused/resumed with an `UploadTaskSnapshot` as the first\n   *       argument.</li>\n   *   <li>The `error` function is triggered if the upload is canceled or fails\n   *       for another reason.</li>\n   *   <li>The `complete` function is triggered if the upload completes\n   *       successfully.</li>\n   * </ul>\n   */\n  STATE_CHANGED: 'state_changed'\n};\n\n/**\n * Internal enum for task state.\n */\nexport const enum InternalTaskState {\n  RUNNING = 'running',\n  PAUSING = 'pausing',\n  PAUSED = 'paused',\n  SUCCESS = 'success',\n  CANCELING = 'canceling',\n  CANCELED = 'canceled',\n  ERROR = 'error'\n}\n\n/**\n * Represents the current state of a running upload.\n * @internal\n */\nexport type TaskState = typeof TaskState[keyof typeof TaskState];\n\n// type keys = keyof TaskState\n/**\n * Represents the current state of a running upload.\n * @internal\n */\nexport const TaskState = {\n  /** The task is currently transferring data. */\n  RUNNING: 'running',\n\n  /** The task was paused by the user. */\n  PAUSED: 'paused',\n\n  /** The task completed successfully. */\n  SUCCESS: 'success',\n\n  /** The task was canceled. */\n  CANCELED: 'canceled',\n\n  /** The task failed with an error. */\n  ERROR: 'error'\n} as const;\n\nexport function taskStateFromInternalTaskState(\n  state: InternalTaskState\n): TaskState {\n  switch (state) {\n    case InternalTaskState.RUNNING:\n    case InternalTaskState.PAUSING:\n    case InternalTaskState.CANCELING:\n      return TaskState.RUNNING;\n    case InternalTaskState.PAUSED:\n      return TaskState.PAUSED;\n    case InternalTaskState.SUCCESS:\n      return TaskState.SUCCESS;\n    case InternalTaskState.CANCELED:\n      return TaskState.CANCELED;\n    case InternalTaskState.ERROR:\n      return TaskState.ERROR;\n    default:\n      // TODO(andysoto): assert(false);\n      return TaskState.ERROR;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { isFunction } from './type';\nimport { StorageError } from './error';\n\n/**\n * Function that is called once for each value in a stream of values.\n */\nexport type NextFn<T> = (value: T) => void;\n\n/**\n * A function that is called with a `StorageError`\n * if the event stream ends due to an error.\n */\nexport type ErrorFn = (error: StorageError) => void;\n\n/**\n * A function that is called if the event stream ends normally.\n */\nexport type CompleteFn = () => void;\n\n/**\n * Unsubscribes from a stream.\n */\nexport type Unsubscribe = () => void;\n\n/**\n * An observer identical to the `Observer` defined in packages/util except the\n * error passed into the ErrorFn is specifically a `StorageError`.\n */\nexport interface StorageObserver<T> {\n  /**\n   * Function that is called once for each value in the event stream.\n   */\n  next?: NextFn<T>;\n  /**\n   * A function that is called with a `StorageError`\n   * if the event stream ends due to an error.\n   */\n  error?: ErrorFn;\n  /**\n   * A function that is called if the event stream ends normally.\n   */\n  complete?: CompleteFn;\n}\n\n/**\n * Subscribes to an event stream.\n */\nexport type Subscribe<T> = (\n  next?: NextFn<T> | StorageObserver<T>,\n  error?: ErrorFn,\n  complete?: CompleteFn\n) => Unsubscribe;\n\nexport class Observer<T> implements StorageObserver<T> {\n  next?: NextFn<T>;\n  error?: ErrorFn;\n  complete?: CompleteFn;\n\n  constructor(\n    nextOrObserver?: NextFn<T> | StorageObserver<T>,\n    error?: ErrorFn,\n    complete?: CompleteFn\n  ) {\n    const asFunctions =\n      isFunction(nextOrObserver) || error != null || complete != null;\n    if (asFunctions) {\n      this.next = nextOrObserver as NextFn<T>;\n      this.error = error ?? undefined;\n      this.complete = complete ?? undefined;\n    } else {\n      const observer = nextOrObserver as {\n        next?: NextFn<T>;\n        error?: ErrorFn;\n        complete?: CompleteFn;\n      };\n      this.next = observer.next;\n      this.error = observer.error;\n      this.complete = observer.complete;\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Returns a function that invokes f with its arguments asynchronously as a\n * microtask, i.e. as soon as possible after the current script returns back\n * into browser code.\n */\n// eslint-disable-next-line @typescript-eslint/ban-types\nexport function async(f: Function): Function {\n  return (...argsToForward: unknown[]) => {\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    Promise.resolve().then(() => f(...argsToForward));\n  };\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Headers,\n  Connection,\n  ErrorCode\n} from '../../implementation/connection';\nimport { internalError } from '../../implementation/error';\n\n/** An override for the text-based Connection. Used in tests. */\nlet connectionFactoryOverride: (() => Connection) | null = null;\n\n/**\n * Network layer for browsers. We use this instead of goog.net.XhrIo because\n * goog.net.XhrIo is hyuuuuge and doesn't work in React Native on Android.\n */\nexport class XhrConnection implements Connection {\n  private xhr_: XMLHttpRequest;\n  private errorCode_: ErrorCode;\n  private sendPromise_: Promise<void>;\n  private sent_: boolean = false;\n\n  constructor() {\n    this.xhr_ = new XMLHttpRequest();\n    this.errorCode_ = ErrorCode.NO_ERROR;\n    this.sendPromise_ = new Promise(resolve => {\n      this.xhr_.addEventListener('abort', () => {\n        this.errorCode_ = ErrorCode.ABORT;\n        resolve();\n      });\n      this.xhr_.addEventListener('error', () => {\n        this.errorCode_ = ErrorCode.NETWORK_ERROR;\n        resolve();\n      });\n      this.xhr_.addEventListener('load', () => {\n        resolve();\n      });\n    });\n  }\n\n  send(\n    url: string,\n    method: string,\n    body?: ArrayBufferView | Blob | string,\n    headers?: Headers\n  ): Promise<void> {\n    if (this.sent_) {\n      throw internalError('cannot .send() more than once');\n    }\n    this.sent_ = true;\n    this.xhr_.open(method, url, true);\n    if (headers !== undefined) {\n      for (const key in headers) {\n        if (headers.hasOwnProperty(key)) {\n          this.xhr_.setRequestHeader(key, headers[key].toString());\n        }\n      }\n    }\n    if (body !== undefined) {\n      this.xhr_.send(body);\n    } else {\n      this.xhr_.send();\n    }\n    return this.sendPromise_;\n  }\n\n  getErrorCode(): ErrorCode {\n    if (!this.sent_) {\n      throw internalError('cannot .getErrorCode() before sending');\n    }\n    return this.errorCode_;\n  }\n\n  getStatus(): number {\n    if (!this.sent_) {\n      throw internalError('cannot .getStatus() before sending');\n    }\n    try {\n      return this.xhr_.status;\n    } catch (e) {\n      return -1;\n    }\n  }\n\n  getResponseText(): string {\n    if (!this.sent_) {\n      throw internalError('cannot .getResponseText() before sending');\n    }\n    return this.xhr_.responseText;\n  }\n\n  /** Aborts the request. */\n  abort(): void {\n    this.xhr_.abort();\n  }\n\n  getResponseHeader(header: string): string | null {\n    return this.xhr_.getResponseHeader(header);\n  }\n\n  addUploadProgressListener(listener: (p1: ProgressEvent) => void): void {\n    if (this.xhr_.upload != null) {\n      this.xhr_.upload.addEventListener('progress', listener);\n    }\n  }\n\n  removeUploadProgressListener(listener: (p1: ProgressEvent) => void): void {\n    if (this.xhr_.upload != null) {\n      this.xhr_.upload.removeEventListener('progress', listener);\n    }\n  }\n}\n\nexport function newConnection(): Connection {\n  return connectionFactoryOverride\n    ? connectionFactoryOverride()\n    : new XhrConnection();\n}\n\nexport function injectTestConnection(factory: (() => Connection) | null): void {\n  connectionFactoryOverride = factory;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * @fileoverview Defines types for interacting with blob transfer tasks.\n */\n\nimport { FbsBlob } from './implementation/blob';\nimport {\n  canceled,\n  StorageErrorCode,\n  StorageError\n} from './implementation/error';\nimport {\n  InternalTaskState,\n  TaskEvent,\n  TaskState,\n  taskStateFromInternalTaskState\n} from './implementation/taskenums';\nimport { Metadata } from './metadata';\nimport {\n  Observer,\n  Subscribe,\n  Unsubscribe,\n  StorageObserver as StorageObserverInternal,\n  NextFn\n} from './implementation/observer';\nimport { Request } from './implementation/request';\nimport { UploadTaskSnapshot, StorageObserver } from './public-types';\nimport { async as fbsAsync } from './implementation/async';\nimport { Mappings, getMappings } from './implementation/metadata';\nimport {\n  createResumableUpload,\n  getResumableUploadStatus,\n  RESUMABLE_UPLOAD_CHUNK_SIZE,\n  ResumableUploadStatus,\n  continueResumableUpload,\n  getMetadata,\n  multipartUpload\n} from './implementation/requests';\nimport { Reference } from './reference';\nimport { newConnection } from './platform/connection';\n\n/**\n * Represents a blob being uploaded. Can be used to pause/resume/cancel the\n * upload and manage callbacks for various events.\n * @internal\n */\nexport class UploadTask {\n  private _ref: Reference;\n  /**\n   * The data to be uploaded.\n   */\n  _blob: FbsBlob;\n  /**\n   * Metadata related to the upload.\n   */\n  _metadata: Metadata | null;\n  private _mappings: Mappings;\n  /**\n   * Number of bytes transferred so far.\n   */\n  _transferred: number = 0;\n  private _needToFetchStatus: boolean = false;\n  private _needToFetchMetadata: boolean = false;\n  private _observers: Array<StorageObserverInternal<UploadTaskSnapshot>> = [];\n  private _resumable: boolean;\n  /**\n   * Upload state.\n   */\n  _state: InternalTaskState;\n  private _error?: StorageError = undefined;\n  private _uploadUrl?: string = undefined;\n  private _request?: Request<unknown> = undefined;\n  private _chunkMultiplier: number = 1;\n  private _errorHandler: (p1: StorageError) => void;\n  private _metadataErrorHandler: (p1: StorageError) => void;\n  private _resolve?: (p1: UploadTaskSnapshot) => void = undefined;\n  private _reject?: (p1: StorageError) => void = undefined;\n  private _promise: Promise<UploadTaskSnapshot>;\n\n  /**\n   * @param ref - The firebaseStorage.Reference object this task came\n   *     from, untyped to avoid cyclic dependencies.\n   * @param blob - The blob to upload.\n   */\n  constructor(ref: Reference, blob: FbsBlob, metadata: Metadata | null = null) {\n    this._ref = ref;\n    this._blob = blob;\n    this._metadata = metadata;\n    this._mappings = getMappings();\n    this._resumable = this._shouldDoResumable(this._blob);\n    this._state = InternalTaskState.RUNNING;\n    this._errorHandler = error => {\n      this._request = undefined;\n      this._chunkMultiplier = 1;\n      if (error._codeEquals(StorageErrorCode.CANCELED)) {\n        this._needToFetchStatus = true;\n        this.completeTransitions_();\n      } else {\n        this._error = error;\n        this._transition(InternalTaskState.ERROR);\n      }\n    };\n    this._metadataErrorHandler = error => {\n      this._request = undefined;\n      if (error._codeEquals(StorageErrorCode.CANCELED)) {\n        this.completeTransitions_();\n      } else {\n        this._error = error;\n        this._transition(InternalTaskState.ERROR);\n      }\n    };\n    this._promise = new Promise((resolve, reject) => {\n      this._resolve = resolve;\n      this._reject = reject;\n      this._start();\n    });\n\n    // Prevent uncaught rejections on the internal promise from bubbling out\n    // to the top level with a dummy handler.\n    this._promise.then(null, () => {});\n  }\n\n  private _makeProgressCallback(): (p1: number, p2: number) => void {\n    const sizeBefore = this._transferred;\n    return loaded => this._updateProgress(sizeBefore + loaded);\n  }\n\n  private _shouldDoResumable(blob: FbsBlob): boolean {\n    return blob.size() > 256 * 1024;\n  }\n\n  private _start(): void {\n    if (this._state !== InternalTaskState.RUNNING) {\n      // This can happen if someone pauses us in a resume callback, for example.\n      return;\n    }\n    if (this._request !== undefined) {\n      return;\n    }\n    if (this._resumable) {\n      if (this._uploadUrl === undefined) {\n        this._createResumable();\n      } else {\n        if (this._needToFetchStatus) {\n          this._fetchStatus();\n        } else {\n          if (this._needToFetchMetadata) {\n            // Happens if we miss the metadata on upload completion.\n            this._fetchMetadata();\n          } else {\n            this._continueUpload();\n          }\n        }\n      }\n    } else {\n      this._oneShotUpload();\n    }\n  }\n\n  private _resolveToken(\n    callback: (authToken: string | null, appCheckToken: string | null) => void\n  ): void {\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    Promise.all([\n      this._ref.storage._getAuthToken(),\n      this._ref.storage._getAppCheckToken()\n    ]).then(([authToken, appCheckToken]) => {\n      switch (this._state) {\n        case InternalTaskState.RUNNING:\n          callback(authToken, appCheckToken);\n          break;\n        case InternalTaskState.CANCELING:\n          this._transition(InternalTaskState.CANCELED);\n          break;\n        case InternalTaskState.PAUSING:\n          this._transition(InternalTaskState.PAUSED);\n          break;\n        default:\n      }\n    });\n  }\n\n  // TODO(andysoto): assert false\n\n  private _createResumable(): void {\n    this._resolveToken((authToken, appCheckToken) => {\n      const requestInfo = createResumableUpload(\n        this._ref.storage,\n        this._ref._location,\n        this._mappings,\n        this._blob,\n        this._metadata\n      );\n      const createRequest = this._ref.storage._makeRequest(\n        requestInfo,\n        newConnection,\n        authToken,\n        appCheckToken\n      );\n      this._request = createRequest;\n      createRequest.getPromise().then((url: string) => {\n        this._request = undefined;\n        this._uploadUrl = url;\n        this._needToFetchStatus = false;\n        this.completeTransitions_();\n      }, this._errorHandler);\n    });\n  }\n\n  private _fetchStatus(): void {\n    // TODO(andysoto): assert(this.uploadUrl_ !== null);\n    const url = this._uploadUrl as string;\n    this._resolveToken((authToken, appCheckToken) => {\n      const requestInfo = getResumableUploadStatus(\n        this._ref.storage,\n        this._ref._location,\n        url,\n        this._blob\n      );\n      const statusRequest = this._ref.storage._makeRequest(\n        requestInfo,\n        newConnection,\n        authToken,\n        appCheckToken\n      );\n      this._request = statusRequest;\n      statusRequest.getPromise().then(status => {\n        status = status as ResumableUploadStatus;\n        this._request = undefined;\n        this._updateProgress(status.current);\n        this._needToFetchStatus = false;\n        if (status.finalized) {\n          this._needToFetchMetadata = true;\n        }\n        this.completeTransitions_();\n      }, this._errorHandler);\n    });\n  }\n\n  private _continueUpload(): void {\n    const chunkSize = RESUMABLE_UPLOAD_CHUNK_SIZE * this._chunkMultiplier;\n    const status = new ResumableUploadStatus(\n      this._transferred,\n      this._blob.size()\n    );\n\n    // TODO(andysoto): assert(this.uploadUrl_ !== null);\n    const url = this._uploadUrl as string;\n    this._resolveToken((authToken, appCheckToken) => {\n      let requestInfo;\n      try {\n        requestInfo = continueResumableUpload(\n          this._ref._location,\n          this._ref.storage,\n          url,\n          this._blob,\n          chunkSize,\n          this._mappings,\n          status,\n          this._makeProgressCallback()\n        );\n      } catch (e) {\n        this._error = e;\n        this._transition(InternalTaskState.ERROR);\n        return;\n      }\n      const uploadRequest = this._ref.storage._makeRequest(\n        requestInfo,\n        newConnection,\n        authToken,\n        appCheckToken\n      );\n      this._request = uploadRequest;\n      uploadRequest.getPromise().then((newStatus: ResumableUploadStatus) => {\n        this._increaseMultiplier();\n        this._request = undefined;\n        this._updateProgress(newStatus.current);\n        if (newStatus.finalized) {\n          this._metadata = newStatus.metadata;\n          this._transition(InternalTaskState.SUCCESS);\n        } else {\n          this.completeTransitions_();\n        }\n      }, this._errorHandler);\n    });\n  }\n\n  private _increaseMultiplier(): void {\n    const currentSize = RESUMABLE_UPLOAD_CHUNK_SIZE * this._chunkMultiplier;\n\n    // Max chunk size is 32M.\n    if (currentSize < 32 * 1024 * 1024) {\n      this._chunkMultiplier *= 2;\n    }\n  }\n\n  private _fetchMetadata(): void {\n    this._resolveToken((authToken, appCheckToken) => {\n      const requestInfo = getMetadata(\n        this._ref.storage,\n        this._ref._location,\n        this._mappings\n      );\n      const metadataRequest = this._ref.storage._makeRequest(\n        requestInfo,\n        newConnection,\n        authToken,\n        appCheckToken\n      );\n      this._request = metadataRequest;\n      metadataRequest.getPromise().then(metadata => {\n        this._request = undefined;\n        this._metadata = metadata;\n        this._transition(InternalTaskState.SUCCESS);\n      }, this._metadataErrorHandler);\n    });\n  }\n\n  private _oneShotUpload(): void {\n    this._resolveToken((authToken, appCheckToken) => {\n      const requestInfo = multipartUpload(\n        this._ref.storage,\n        this._ref._location,\n        this._mappings,\n        this._blob,\n        this._metadata\n      );\n      const multipartRequest = this._ref.storage._makeRequest(\n        requestInfo,\n        newConnection,\n        authToken,\n        appCheckToken\n      );\n      this._request = multipartRequest;\n      multipartRequest.getPromise().then(metadata => {\n        this._request = undefined;\n        this._metadata = metadata;\n        this._updateProgress(this._blob.size());\n        this._transition(InternalTaskState.SUCCESS);\n      }, this._errorHandler);\n    });\n  }\n\n  private _updateProgress(transferred: number): void {\n    const old = this._transferred;\n    this._transferred = transferred;\n\n    // A progress update can make the \"transferred\" value smaller (e.g. a\n    // partial upload not completed by server, after which the \"transferred\"\n    // value may reset to the value at the beginning of the request).\n    if (this._transferred !== old) {\n      this._notifyObservers();\n    }\n  }\n\n  private _transition(state: InternalTaskState): void {\n    if (this._state === state) {\n      return;\n    }\n    switch (state) {\n      case InternalTaskState.CANCELING:\n        // TODO(andysoto):\n        // assert(this.state_ === InternalTaskState.RUNNING ||\n        //        this.state_ === InternalTaskState.PAUSING);\n        this._state = state;\n        if (this._request !== undefined) {\n          this._request.cancel();\n        }\n        break;\n      case InternalTaskState.PAUSING:\n        // TODO(andysoto):\n        // assert(this.state_ === InternalTaskState.RUNNING);\n        this._state = state;\n        if (this._request !== undefined) {\n          this._request.cancel();\n        }\n        break;\n      case InternalTaskState.RUNNING:\n        // TODO(andysoto):\n        // assert(this.state_ === InternalTaskState.PAUSED ||\n        //        this.state_ === InternalTaskState.PAUSING);\n        const wasPaused = this._state === InternalTaskState.PAUSED;\n        this._state = state;\n        if (wasPaused) {\n          this._notifyObservers();\n          this._start();\n        }\n        break;\n      case InternalTaskState.PAUSED:\n        // TODO(andysoto):\n        // assert(this.state_ === InternalTaskState.PAUSING);\n        this._state = state;\n        this._notifyObservers();\n        break;\n      case InternalTaskState.CANCELED:\n        // TODO(andysoto):\n        // assert(this.state_ === InternalTaskState.PAUSED ||\n        //        this.state_ === InternalTaskState.CANCELING);\n        this._error = canceled();\n        this._state = state;\n        this._notifyObservers();\n        break;\n      case InternalTaskState.ERROR:\n        // TODO(andysoto):\n        // assert(this.state_ === InternalTaskState.RUNNING ||\n        //        this.state_ === InternalTaskState.PAUSING ||\n        //        this.state_ === InternalTaskState.CANCELING);\n        this._state = state;\n        this._notifyObservers();\n        break;\n      case InternalTaskState.SUCCESS:\n        // TODO(andysoto):\n        // assert(this.state_ === InternalTaskState.RUNNING ||\n        //        this.state_ === InternalTaskState.PAUSING ||\n        //        this.state_ === InternalTaskState.CANCELING);\n        this._state = state;\n        this._notifyObservers();\n        break;\n      default: // Ignore\n    }\n  }\n\n  private completeTransitions_(): void {\n    switch (this._state) {\n      case InternalTaskState.PAUSING:\n        this._transition(InternalTaskState.PAUSED);\n        break;\n      case InternalTaskState.CANCELING:\n        this._transition(InternalTaskState.CANCELED);\n        break;\n      case InternalTaskState.RUNNING:\n        this._start();\n        break;\n      default:\n        // TODO(andysoto): assert(false);\n        break;\n    }\n  }\n\n  /**\n   * A snapshot of the current task state.\n   */\n  get snapshot(): UploadTaskSnapshot {\n    const externalState = taskStateFromInternalTaskState(this._state);\n    return {\n      bytesTransferred: this._transferred,\n      totalBytes: this._blob.size(),\n      state: externalState,\n      metadata: this._metadata!,\n      task: this,\n      ref: this._ref\n    };\n  }\n\n  /**\n   * Adds a callback for an event.\n   * @param type - The type of event to listen for.\n   * @param nextOrObserver -\n   *     The `next` function, which gets called for each item in\n   *     the event stream, or an observer object with some or all of these three\n   *     properties (`next`, `error`, `complete`).\n   * @param error - A function that gets called with a `StorageError`\n   *     if the event stream ends due to an error.\n   * @param completed - A function that gets called if the\n   *     event stream ends normally.\n   * @returns\n   *     If only the event argument is passed, returns a function you can use to\n   *     add callbacks (see the examples above). If more than just the event\n   *     argument is passed, returns a function you can call to unregister the\n   *     callbacks.\n   */\n  on(\n    type: TaskEvent,\n    nextOrObserver?:\n      | StorageObserver<UploadTaskSnapshot>\n      | null\n      | ((snapshot: UploadTaskSnapshot) => unknown),\n    error?: ((a: StorageError) => unknown) | null,\n    completed?: Unsubscribe | null\n  ): Unsubscribe | Subscribe<UploadTaskSnapshot> {\n    const observer = new Observer(\n      (nextOrObserver as\n        | StorageObserverInternal<UploadTaskSnapshot>\n        | NextFn<UploadTaskSnapshot>) || undefined,\n      error || undefined,\n      completed || undefined\n    );\n    this._addObserver(observer);\n    return () => {\n      this._removeObserver(observer);\n    };\n  }\n\n  /**\n   * This object behaves like a Promise, and resolves with its snapshot data\n   * when the upload completes.\n   * @param onFulfilled - The fulfillment callback. Promise chaining works as normal.\n   * @param onRejected - The rejection callback.\n   */\n  then<U>(\n    onFulfilled?: ((value: UploadTaskSnapshot) => U | Promise<U>) | null,\n    onRejected?: ((error: StorageError) => U | Promise<U>) | null\n  ): Promise<U> {\n    // These casts are needed so that TypeScript can infer the types of the\n    // resulting Promise.\n    return this._promise.then<U>(\n      onFulfilled as (value: UploadTaskSnapshot) => U | Promise<U>,\n      onRejected as ((error: unknown) => Promise<never>) | null\n    );\n  }\n\n  /**\n   * Equivalent to calling `then(null, onRejected)`.\n   */\n  catch<T>(onRejected: (p1: StorageError) => T | Promise<T>): Promise<T> {\n    return this.then(null, onRejected);\n  }\n\n  /**\n   * Adds the given observer.\n   */\n  private _addObserver(observer: Observer<UploadTaskSnapshot>): void {\n    this._observers.push(observer);\n    this._notifyObserver(observer);\n  }\n\n  /**\n   * Removes the given observer.\n   */\n  private _removeObserver(observer: Observer<UploadTaskSnapshot>): void {\n    const i = this._observers.indexOf(observer);\n    if (i !== -1) {\n      this._observers.splice(i, 1);\n    }\n  }\n\n  private _notifyObservers(): void {\n    this._finishPromise();\n    const observers = this._observers.slice();\n    observers.forEach(observer => {\n      this._notifyObserver(observer);\n    });\n  }\n\n  private _finishPromise(): void {\n    if (this._resolve !== undefined) {\n      let triggered = true;\n      switch (taskStateFromInternalTaskState(this._state)) {\n        case TaskState.SUCCESS:\n          fbsAsync(this._resolve.bind(null, this.snapshot))();\n          break;\n        case TaskState.CANCELED:\n        case TaskState.ERROR:\n          const toCall = this._reject as (p1: StorageError) => void;\n          fbsAsync(toCall.bind(null, this._error as StorageError))();\n          break;\n        default:\n          triggered = false;\n          break;\n      }\n      if (triggered) {\n        this._resolve = undefined;\n        this._reject = undefined;\n      }\n    }\n  }\n\n  private _notifyObserver(observer: Observer<UploadTaskSnapshot>): void {\n    const externalState = taskStateFromInternalTaskState(this._state);\n    switch (externalState) {\n      case TaskState.RUNNING:\n      case TaskState.PAUSED:\n        if (observer.next) {\n          fbsAsync(observer.next.bind(observer, this.snapshot))();\n        }\n        break;\n      case TaskState.SUCCESS:\n        if (observer.complete) {\n          fbsAsync(observer.complete.bind(observer))();\n        }\n        break;\n      case TaskState.CANCELED:\n      case TaskState.ERROR:\n        if (observer.error) {\n          fbsAsync(\n            observer.error.bind(observer, this._error as StorageError)\n          )();\n        }\n        break;\n      default:\n        // TODO(andysoto): assert(false);\n        if (observer.error) {\n          fbsAsync(\n            observer.error.bind(observer, this._error as StorageError)\n          )();\n        }\n    }\n  }\n\n  /**\n   * Resumes a paused task. Has no effect on a currently running or failed task.\n   * @returns True if the operation took effect, false if ignored.\n   */\n  resume(): boolean {\n    const valid =\n      this._state === InternalTaskState.PAUSED ||\n      this._state === InternalTaskState.PAUSING;\n    if (valid) {\n      this._transition(InternalTaskState.RUNNING);\n    }\n    return valid;\n  }\n\n  /**\n   * Pauses a currently running task. Has no effect on a paused or failed task.\n   * @returns True if the operation took effect, false if ignored.\n   */\n  pause(): boolean {\n    const valid = this._state === InternalTaskState.RUNNING;\n    if (valid) {\n      this._transition(InternalTaskState.PAUSING);\n    }\n    return valid;\n  }\n\n  /**\n   * Cancels a currently running or paused task. Has no effect on a complete or\n   * failed task.\n   * @returns True if the operation took effect, false if ignored.\n   */\n  cancel(): boolean {\n    const valid =\n      this._state === InternalTaskState.RUNNING ||\n      this._state === InternalTaskState.PAUSING;\n    if (valid) {\n      this._transition(InternalTaskState.CANCELING);\n    }\n    return valid;\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Defines the Firebase StorageReference class.\n */\n\nimport { FbsBlob } from './implementation/blob';\nimport { Location } from './implementation/location';\nimport { getMappings } from './implementation/metadata';\nimport { child, parent, lastComponent } from './implementation/path';\nimport {\n  list as requestsList,\n  getMetadata as requestsGetMetadata,\n  updateMetadata as requestsUpdateMetadata,\n  getDownloadUrl as requestsGetDownloadUrl,\n  deleteObject as requestsDeleteObject,\n  multipartUpload\n} from './implementation/requests';\nimport { ListOptions, UploadResult } from './public-types';\nimport { StringFormat, dataFromString } from './implementation/string';\nimport { Metadata } from './metadata';\nimport { FirebaseStorageImpl } from './service';\nimport { ListResult } from './list';\nimport { UploadTask } from './task';\nimport { invalidRootOperation, noDownloadURL } from './implementation/error';\nimport { validateNumber } from './implementation/type';\nimport { newConnection } from './platform/connection';\n\n/**\n * Provides methods to interact with a bucket in the Firebase Storage service.\n * @internal\n * @param _location - An fbs.location, or the URL at\n *     which to base this object, in one of the following forms:\n *         gs://<bucket>/<object-path>\n *         http[s]://firebasestorage.googleapis.com/\n *                     <api-version>/b/<bucket>/o/<object-path>\n *     Any query or fragment strings will be ignored in the http[s]\n *     format. If no value is passed, the storage object will use a URL based on\n *     the project ID of the base firebase.App instance.\n */\nexport class Reference {\n  _location: Location;\n\n  constructor(\n    private _service: FirebaseStorageImpl,\n    location: string | Location\n  ) {\n    if (location instanceof Location) {\n      this._location = location;\n    } else {\n      this._location = Location.makeFromUrl(location, _service.host);\n    }\n  }\n\n  /**\n   * Returns the URL for the bucket and path this object references,\n   *     in the form gs://<bucket>/<object-path>\n   * @override\n   */\n  toString(): string {\n    return 'gs://' + this._location.bucket + '/' + this._location.path;\n  }\n\n  protected _newRef(\n    service: FirebaseStorageImpl,\n    location: Location\n  ): Reference {\n    return new Reference(service, location);\n  }\n\n  /**\n   * A reference to the root of this object's bucket.\n   */\n  get root(): Reference {\n    const location = new Location(this._location.bucket, '');\n    return this._newRef(this._service, location);\n  }\n\n  /**\n   * The name of the bucket containing this reference's object.\n   */\n  get bucket(): string {\n    return this._location.bucket;\n  }\n\n  /**\n   * The full path of this object.\n   */\n  get fullPath(): string {\n    return this._location.path;\n  }\n\n  /**\n   * The short name of this object, which is the last component of the full path.\n   * For example, if fullPath is 'full/path/image.png', name is 'image.png'.\n   */\n  get name(): string {\n    return lastComponent(this._location.path);\n  }\n\n  /**\n   * The `StorageService` instance this `StorageReference` is associated with.\n   */\n  get storage(): FirebaseStorageImpl {\n    return this._service;\n  }\n\n  /**\n   * A `StorageReference` pointing to the parent location of this `StorageReference`, or null if\n   * this reference is the root.\n   */\n  get parent(): Reference | null {\n    const newPath = parent(this._location.path);\n    if (newPath === null) {\n      return null;\n    }\n    const location = new Location(this._location.bucket, newPath);\n    return new Reference(this._service, location);\n  }\n\n  /**\n   * Utility function to throw an error in methods that do not accept a root reference.\n   */\n  _throwIfRoot(name: string): void {\n    if (this._location.path === '') {\n      throw invalidRootOperation(name);\n    }\n  }\n}\n\n/**\n * Uploads data to this object's location.\n * The upload is not resumable.\n *\n * @param ref - StorageReference where data should be uploaded.\n * @param data - The data to upload.\n * @param metadata - Metadata for the newly uploaded data.\n * @returns A Promise containing an UploadResult\n */\nexport function uploadBytes(\n  ref: Reference,\n  data: Blob | Uint8Array | ArrayBuffer,\n  metadata?: Metadata\n): Promise<UploadResult> {\n  ref._throwIfRoot('uploadBytes');\n  const requestInfo = multipartUpload(\n    ref.storage,\n    ref._location,\n    getMappings(),\n    new FbsBlob(data, true),\n    metadata\n  );\n  return ref.storage\n    .makeRequestWithTokens(requestInfo, newConnection)\n    .then(finalMetadata => {\n      return {\n        metadata: finalMetadata,\n        ref\n      };\n    });\n}\n\n/**\n * Uploads data to this object's location.\n * The upload can be paused and resumed, and exposes progress updates.\n * @public\n * @param ref - StorageReference where data should be uploaded.\n * @param data - The data to upload.\n * @param metadata - Metadata for the newly uploaded data.\n * @returns An UploadTask\n */\nexport function uploadBytesResumable(\n  ref: Reference,\n  data: Blob | Uint8Array | ArrayBuffer,\n  metadata?: Metadata\n): UploadTask {\n  ref._throwIfRoot('uploadBytesResumable');\n  return new UploadTask(ref, new FbsBlob(data), metadata);\n}\n\n/**\n * Uploads a string to this object's location.\n * The upload is not resumable.\n * @public\n * @param ref - StorageReference where string should be uploaded.\n * @param value - The string to upload.\n * @param format - The format of the string to upload.\n * @param metadata - Metadata for the newly uploaded string.\n * @returns A Promise containing an UploadResult\n */\nexport function uploadString(\n  ref: Reference,\n  value: string,\n  format: StringFormat = StringFormat.RAW,\n  metadata?: Metadata\n): Promise<UploadResult> {\n  ref._throwIfRoot('uploadString');\n  const data = dataFromString(format, value);\n  const metadataClone = { ...metadata } as Metadata;\n  if (metadataClone['contentType'] == null && data.contentType != null) {\n    metadataClone['contentType'] = data.contentType!;\n  }\n  return uploadBytes(ref, data.data, metadataClone);\n}\n\n/**\n * List all items (files) and prefixes (folders) under this storage reference.\n *\n * This is a helper method for calling list() repeatedly until there are\n * no more results. The default pagination size is 1000.\n *\n * Note: The results may not be consistent if objects are changed while this\n * operation is running.\n *\n * Warning: listAll may potentially consume too many resources if there are\n * too many results.\n * @public\n * @param ref - StorageReference to get list from.\n *\n * @returns A Promise that resolves with all the items and prefixes under\n *      the current storage reference. `prefixes` contains references to\n *      sub-directories and `items` contains references to objects in this\n *      folder. `nextPageToken` is never returned.\n */\nexport function listAll(ref: Reference): Promise<ListResult> {\n  const accumulator: ListResult = {\n    prefixes: [],\n    items: []\n  };\n  return listAllHelper(ref, accumulator).then(() => accumulator);\n}\n\n/**\n * Separated from listAll because async functions can't use \"arguments\".\n * @param ref\n * @param accumulator\n * @param pageToken\n */\nasync function listAllHelper(\n  ref: Reference,\n  accumulator: ListResult,\n  pageToken?: string\n): Promise<void> {\n  const opt: ListOptions = {\n    // maxResults is 1000 by default.\n    pageToken\n  };\n  const nextPage = await list(ref, opt);\n  accumulator.prefixes.push(...nextPage.prefixes);\n  accumulator.items.push(...nextPage.items);\n  if (nextPage.nextPageToken != null) {\n    await listAllHelper(ref, accumulator, nextPage.nextPageToken);\n  }\n}\n\n/**\n * List items (files) and prefixes (folders) under this storage reference.\n *\n * List API is only available for Firebase Rules Version 2.\n *\n * GCS is a key-blob store. Firebase Storage imposes the semantic of '/'\n * delimited folder structure.\n * Refer to GCS's List API if you want to learn more.\n *\n * To adhere to Firebase Rules's Semantics, Firebase Storage does not\n * support objects whose paths end with \"/\" or contain two consecutive\n * \"/\"s. Firebase Storage List API will filter these unsupported objects.\n * list() may fail if there are too many unsupported objects in the bucket.\n * @public\n *\n * @param ref - StorageReference to get list from.\n * @param options - See ListOptions for details.\n * @returns A Promise that resolves with the items and prefixes.\n *      `prefixes` contains references to sub-folders and `items`\n *      contains references to objects in this folder. `nextPageToken`\n *      can be used to get the rest of the results.\n */\nexport function list(\n  ref: Reference,\n  options?: ListOptions | null\n): Promise<ListResult> {\n  if (options != null) {\n    if (typeof options.maxResults === 'number') {\n      validateNumber(\n        'options.maxResults',\n        /* minValue= */ 1,\n        /* maxValue= */ 1000,\n        options.maxResults\n      );\n    }\n  }\n  const op = options || {};\n  const requestInfo = requestsList(\n    ref.storage,\n    ref._location,\n    /*delimiter= */ '/',\n    op.pageToken,\n    op.maxResults\n  );\n  return ref.storage.makeRequestWithTokens(requestInfo, newConnection);\n}\n\n/**\n * A `Promise` that resolves with the metadata for this object. If this\n * object doesn't exist or metadata cannot be retreived, the promise is\n * rejected.\n * @public\n * @param ref - StorageReference to get metadata from.\n */\nexport function getMetadata(ref: Reference): Promise<Metadata> {\n  ref._throwIfRoot('getMetadata');\n  const requestInfo = requestsGetMetadata(\n    ref.storage,\n    ref._location,\n    getMappings()\n  );\n  return ref.storage.makeRequestWithTokens(requestInfo, newConnection);\n}\n\n/**\n * Updates the metadata for this object.\n * @public\n * @param ref - StorageReference to update metadata for.\n * @param metadata - The new metadata for the object.\n *     Only values that have been explicitly set will be changed. Explicitly\n *     setting a value to null will remove the metadata.\n * @returns A `Promise` that resolves\n *     with the new metadata for this object.\n *     See `firebaseStorage.Reference.prototype.getMetadata`\n */\nexport function updateMetadata(\n  ref: Reference,\n  metadata: Partial<Metadata>\n): Promise<Metadata> {\n  ref._throwIfRoot('updateMetadata');\n  const requestInfo = requestsUpdateMetadata(\n    ref.storage,\n    ref._location,\n    metadata,\n    getMappings()\n  );\n  return ref.storage.makeRequestWithTokens(requestInfo, newConnection);\n}\n\n/**\n * Returns the download URL for the given Reference.\n * @public\n * @returns A `Promise` that resolves with the download\n *     URL for this object.\n */\nexport function getDownloadURL(ref: Reference): Promise<string> {\n  ref._throwIfRoot('getDownloadURL');\n  const requestInfo = requestsGetDownloadUrl(\n    ref.storage,\n    ref._location,\n    getMappings()\n  );\n  return ref.storage\n    .makeRequestWithTokens(requestInfo, newConnection)\n    .then(url => {\n      if (url === null) {\n        throw noDownloadURL();\n      }\n      return url;\n    });\n}\n\n/**\n * Deletes the object at this location.\n * @public\n * @param ref - StorageReference for object to delete.\n * @returns A `Promise` that resolves if the deletion succeeds.\n */\nexport function deleteObject(ref: Reference): Promise<void> {\n  ref._throwIfRoot('deleteObject');\n  const requestInfo = requestsDeleteObject(ref.storage, ref._location);\n  return ref.storage.makeRequestWithTokens(requestInfo, newConnection);\n}\n\n/**\n * Returns reference for object obtained by appending `childPath` to `ref`.\n *\n * @param ref - StorageReference to get child of.\n * @param childPath - Child path from provided ref.\n * @returns A reference to the object obtained by\n * appending childPath, removing any duplicate, beginning, or trailing\n * slashes.\n *\n */\nexport function _getChild(ref: Reference, childPath: string): Reference {\n  const newPath = child(ref._location.path, childPath);\n  const location = new Location(ref._location.bucket, newPath);\n  return new Reference(ref.storage, location);\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Location } from './implementation/location';\nimport { FailRequest } from './implementation/failrequest';\nimport { Request, makeRequest } from './implementation/request';\nimport { RequestInfo } from './implementation/requestinfo';\nimport { Reference, _getChild } from './reference';\nimport { Provider } from '@firebase/component';\nimport { FirebaseAuthInternalName } from '@firebase/auth-interop-types';\nimport { AppCheckInternalComponentName } from '@firebase/app-check-interop-types';\n// eslint-disable-next-line import/no-extraneous-dependencies\nimport { FirebaseApp, FirebaseOptions } from '@firebase/app';\nimport {\n  CONFIG_STORAGE_BUCKET_KEY,\n  DEFAULT_HOST,\n  DEFAULT_MAX_OPERATION_RETRY_TIME,\n  DEFAULT_MAX_UPLOAD_RETRY_TIME\n} from './implementation/constants';\nimport {\n  invalidArgument,\n  appDeleted,\n  noDefaultBucket\n} from './implementation/error';\nimport { validateNumber } from './implementation/type';\nimport { FirebaseStorage } from './public-types';\nimport { createMockUserToken, EmulatorMockTokenOptions } from '@firebase/util';\nimport { Connection } from './implementation/connection';\n\nexport function isUrl(path?: string): boolean {\n  return /^[A-Za-z]+:\\/\\//.test(path as string);\n}\n\n/**\n * Returns a firebaseStorage.Reference for the given url.\n */\nfunction refFromURL(service: FirebaseStorageImpl, url: string): Reference {\n  return new Reference(service, url);\n}\n\n/**\n * Returns a firebaseStorage.Reference for the given path in the default\n * bucket.\n */\nfunction refFromPath(\n  ref: FirebaseStorageImpl | Reference,\n  path?: string\n): Reference {\n  if (ref instanceof FirebaseStorageImpl) {\n    const service = ref;\n    if (service._bucket == null) {\n      throw noDefaultBucket();\n    }\n    const reference = new Reference(service, service._bucket!);\n    if (path != null) {\n      return refFromPath(reference, path);\n    } else {\n      return reference;\n    }\n  } else {\n    // ref is a Reference\n    if (path !== undefined) {\n      return _getChild(ref, path);\n    } else {\n      return ref;\n    }\n  }\n}\n\n/**\n * Returns a storage Reference for the given url.\n * @param storage - `Storage` instance.\n * @param url - URL. If empty, returns root reference.\n * @public\n */\nexport function ref(storage: FirebaseStorageImpl, url?: string): Reference;\n/**\n * Returns a storage Reference for the given path in the\n * default bucket.\n * @param storageOrRef - `Storage` service or storage `Reference`.\n * @param pathOrUrlStorage - path. If empty, returns root reference (if Storage\n * instance provided) or returns same reference (if Reference provided).\n * @public\n */\nexport function ref(\n  storageOrRef: FirebaseStorageImpl | Reference,\n  path?: string\n): Reference;\nexport function ref(\n  serviceOrRef: FirebaseStorageImpl | Reference,\n  pathOrUrl?: string\n): Reference | null {\n  if (pathOrUrl && isUrl(pathOrUrl)) {\n    if (serviceOrRef instanceof FirebaseStorageImpl) {\n      return refFromURL(serviceOrRef, pathOrUrl);\n    } else {\n      throw invalidArgument(\n        'To use ref(service, url), the first argument must be a Storage instance.'\n      );\n    }\n  } else {\n    return refFromPath(serviceOrRef, pathOrUrl);\n  }\n}\n\nfunction extractBucket(\n  host: string,\n  config?: FirebaseOptions\n): Location | null {\n  const bucketString = config?.[CONFIG_STORAGE_BUCKET_KEY];\n  if (bucketString == null) {\n    return null;\n  }\n  return Location.makeFromBucketSpec(bucketString, host);\n}\n\nexport function connectStorageEmulator(\n  storage: FirebaseStorageImpl,\n  host: string,\n  port: number,\n  options: {\n    mockUserToken?: EmulatorMockTokenOptions | string;\n  } = {}\n): void {\n  storage.host = `${host}:${port}`;\n  storage._protocol = 'http';\n  const { mockUserToken } = options;\n  if (mockUserToken) {\n    storage._overrideAuthToken =\n      typeof mockUserToken === 'string'\n        ? mockUserToken\n        : createMockUserToken(mockUserToken, storage.app.options.projectId);\n  }\n}\n\n/**\n * A service that provides Firebase Storage Reference instances.\n * @param opt_url - gs:// url to a custom Storage Bucket\n *\n * @internal\n */\nexport class FirebaseStorageImpl implements FirebaseStorage {\n  _bucket: Location | null = null;\n  /**\n   * This string can be in the formats:\n   * - host\n   * - host:port\n   */\n  private _host: string = DEFAULT_HOST;\n  _protocol: string = 'https';\n  protected readonly _appId: string | null = null;\n  private readonly _requests: Set<Request<unknown>>;\n  private _deleted: boolean = false;\n  private _maxOperationRetryTime: number;\n  private _maxUploadRetryTime: number;\n  _overrideAuthToken?: string;\n\n  constructor(\n    /**\n     * FirebaseApp associated with this StorageService instance.\n     */\n    readonly app: FirebaseApp,\n    readonly _authProvider: Provider<FirebaseAuthInternalName>,\n    /**\n     * @internal\n     */\n    readonly _appCheckProvider: Provider<AppCheckInternalComponentName>,\n    /**\n     * @internal\n     */\n    readonly _url?: string,\n    readonly _firebaseVersion?: string\n  ) {\n    this._maxOperationRetryTime = DEFAULT_MAX_OPERATION_RETRY_TIME;\n    this._maxUploadRetryTime = DEFAULT_MAX_UPLOAD_RETRY_TIME;\n    this._requests = new Set();\n    if (_url != null) {\n      this._bucket = Location.makeFromBucketSpec(_url, this._host);\n    } else {\n      this._bucket = extractBucket(this._host, this.app.options);\n    }\n  }\n\n  /**\n   * The host string for this service, in the form of `host` or\n   * `host:port`.\n   */\n  get host(): string {\n    return this._host;\n  }\n\n  set host(host: string) {\n    this._host = host;\n    if (this._url != null) {\n      this._bucket = Location.makeFromBucketSpec(this._url, host);\n    } else {\n      this._bucket = extractBucket(host, this.app.options);\n    }\n  }\n\n  /**\n   * The maximum time to retry uploads in milliseconds.\n   */\n  get maxUploadRetryTime(): number {\n    return this._maxUploadRetryTime;\n  }\n\n  set maxUploadRetryTime(time: number) {\n    validateNumber(\n      'time',\n      /* minValue=*/ 0,\n      /* maxValue= */ Number.POSITIVE_INFINITY,\n      time\n    );\n    this._maxUploadRetryTime = time;\n  }\n\n  /**\n   * The maximum time to retry operations other than uploads or downloads in\n   * milliseconds.\n   */\n  get maxOperationRetryTime(): number {\n    return this._maxOperationRetryTime;\n  }\n\n  set maxOperationRetryTime(time: number) {\n    validateNumber(\n      'time',\n      /* minValue=*/ 0,\n      /* maxValue= */ Number.POSITIVE_INFINITY,\n      time\n    );\n    this._maxOperationRetryTime = time;\n  }\n\n  async _getAuthToken(): Promise<string | null> {\n    if (this._overrideAuthToken) {\n      return this._overrideAuthToken;\n    }\n    const auth = this._authProvider.getImmediate({ optional: true });\n    if (auth) {\n      const tokenData = await auth.getToken();\n      if (tokenData !== null) {\n        return tokenData.accessToken;\n      }\n    }\n    return null;\n  }\n\n  async _getAppCheckToken(): Promise<string | null> {\n    const appCheck = this._appCheckProvider.getImmediate({ optional: true });\n    if (appCheck) {\n      const result = await appCheck.getToken();\n      // TODO: What do we want to do if there is an error getting the token?\n      // Context: appCheck.getToken() will never throw even if an error happened. In the error case, a dummy token will be\n      // returned along with an error field describing the error. In general, we shouldn't care about the error condition and just use\n      // the token (actual or dummy) to send requests.\n      return result.token;\n    }\n    return null;\n  }\n\n  /**\n   * Stop running requests and prevent more from being created.\n   */\n  _delete(): Promise<void> {\n    if (!this._deleted) {\n      this._deleted = true;\n      this._requests.forEach(request => request.cancel());\n      this._requests.clear();\n    }\n    return Promise.resolve();\n  }\n\n  /**\n   * Returns a new firebaseStorage.Reference object referencing this StorageService\n   * at the given Location.\n   */\n  _makeStorageReference(loc: Location): Reference {\n    return new Reference(this, loc);\n  }\n\n  /**\n   * @param requestInfo - HTTP RequestInfo object\n   * @param authToken - Firebase auth token\n   */\n  _makeRequest<T>(\n    requestInfo: RequestInfo<T>,\n    requestFactory: () => Connection,\n    authToken: string | null,\n    appCheckToken: string | null\n  ): Request<T> {\n    if (!this._deleted) {\n      const request = makeRequest(\n        requestInfo,\n        this._appId,\n        authToken,\n        appCheckToken,\n        requestFactory,\n        this._firebaseVersion\n      );\n      this._requests.add(request);\n      // Request removes itself from set when complete.\n      request.getPromise().then(\n        () => this._requests.delete(request),\n        () => this._requests.delete(request)\n      );\n      return request;\n    } else {\n      return new FailRequest(appDeleted());\n    }\n  }\n\n  async makeRequestWithTokens<T>(\n    requestInfo: RequestInfo<T>,\n    requestFactory: () => Connection\n  ): Promise<T> {\n    const [authToken, appCheckToken] = await Promise.all([\n      this._getAuthToken(),\n      this._getAppCheckToken()\n    ]);\n\n    return this._makeRequest(\n      requestInfo,\n      requestFactory,\n      authToken,\n      appCheckToken\n    ).getPromise();\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Type constant for Firebase Storage.\n */\nexport const STORAGE_TYPE = 'storage';\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// eslint-disable-next-line import/no-extraneous-dependencies\nimport { _getProvider, FirebaseApp, getApp } from '@firebase/app';\n\nimport {\n  ref as refInternal,\n  FirebaseStorageImpl,\n  connectStorageEmulator as connectEmulatorInternal\n} from './service';\nimport { Provider } from '@firebase/component';\n\nimport {\n  StorageReference,\n  FirebaseStorage,\n  UploadResult,\n  ListOptions,\n  ListResult,\n  UploadTask,\n  SettableMetadata,\n  UploadMetadata,\n  FullMetadata\n} from './public-types';\nimport { Metadata as MetadataInternal } from './metadata';\nimport {\n  uploadBytes as uploadBytesInternal,\n  uploadBytesResumable as uploadBytesResumableInternal,\n  uploadString as uploadStringInternal,\n  getMetadata as getMetadataInternal,\n  updateMetadata as updateMetadataInternal,\n  list as listInternal,\n  listAll as listAllInternal,\n  getDownloadURL as getDownloadURLInternal,\n  deleteObject as deleteObjectInternal,\n  Reference,\n  _getChild as _getChildInternal\n} from './reference';\nimport { STORAGE_TYPE } from './constants';\nimport { EmulatorMockTokenOptions, getModularInstance } from '@firebase/util';\nimport { StringFormat } from './implementation/string';\n\nexport { EmulatorMockTokenOptions } from '@firebase/util';\n\n/**\n * Public types.\n */\nexport * from './public-types';\n\nexport { Location as _Location } from './implementation/location';\nexport { UploadTask as _UploadTask } from './task';\nexport type { Reference as _Reference } from './reference';\nexport type { FirebaseStorageImpl as _FirebaseStorageImpl } from './service';\nexport { FbsBlob as _FbsBlob } from './implementation/blob';\nexport { dataFromString as _dataFromString } from './implementation/string';\nexport {\n  invalidRootOperation as _invalidRootOperation,\n  invalidArgument as _invalidArgument\n} from './implementation/error';\nexport {\n  TaskEvent as _TaskEvent,\n  TaskState as _TaskState\n} from './implementation/taskenums';\nexport { StringFormat };\n\n/**\n * Uploads data to this object's location.\n * The upload is not resumable.\n * @public\n * @param ref - {@link StorageReference} where data should be uploaded.\n * @param data - The data to upload.\n * @param metadata - Metadata for the data to upload.\n * @returns A Promise containing an UploadResult\n */\nexport function uploadBytes(\n  ref: StorageReference,\n  data: Blob | Uint8Array | ArrayBuffer,\n  metadata?: UploadMetadata\n): Promise<UploadResult> {\n  ref = getModularInstance(ref);\n  return uploadBytesInternal(\n    ref as Reference,\n    data,\n    metadata as MetadataInternal\n  );\n}\n\n/**\n * Uploads a string to this object's location.\n * The upload is not resumable.\n * @public\n * @param ref - {@link StorageReference} where string should be uploaded.\n * @param value - The string to upload.\n * @param format - The format of the string to upload.\n * @param metadata - Metadata for the string to upload.\n * @returns A Promise containing an UploadResult\n */\nexport function uploadString(\n  ref: StorageReference,\n  value: string,\n  format?: StringFormat,\n  metadata?: UploadMetadata\n): Promise<UploadResult> {\n  ref = getModularInstance(ref);\n  return uploadStringInternal(\n    ref as Reference,\n    value,\n    format,\n    metadata as MetadataInternal\n  );\n}\n\n/**\n * Uploads data to this object's location.\n * The upload can be paused and resumed, and exposes progress updates.\n * @public\n * @param ref - {@link StorageReference} where data should be uploaded.\n * @param data - The data to upload.\n * @param metadata - Metadata for the data to upload.\n * @returns An UploadTask\n */\nexport function uploadBytesResumable(\n  ref: StorageReference,\n  data: Blob | Uint8Array | ArrayBuffer,\n  metadata?: UploadMetadata\n): UploadTask {\n  ref = getModularInstance(ref);\n  return uploadBytesResumableInternal(\n    ref as Reference,\n    data,\n    metadata as MetadataInternal\n  ) as UploadTask;\n}\n\n/**\n * A `Promise` that resolves with the metadata for this object. If this\n * object doesn't exist or metadata cannot be retreived, the promise is\n * rejected.\n * @public\n * @param ref - {@link StorageReference} to get metadata from.\n */\nexport function getMetadata(ref: StorageReference): Promise<FullMetadata> {\n  ref = getModularInstance(ref);\n  return getMetadataInternal(ref as Reference) as Promise<FullMetadata>;\n}\n\n/**\n * Updates the metadata for this object.\n * @public\n * @param ref - {@link StorageReference} to update metadata for.\n * @param metadata - The new metadata for the object.\n *     Only values that have been explicitly set will be changed. Explicitly\n *     setting a value to null will remove the metadata.\n * @returns A `Promise` that resolves with the new metadata for this object.\n */\nexport function updateMetadata(\n  ref: StorageReference,\n  metadata: SettableMetadata\n): Promise<FullMetadata> {\n  ref = getModularInstance(ref);\n  return updateMetadataInternal(\n    ref as Reference,\n    metadata as Partial<MetadataInternal>\n  ) as Promise<FullMetadata>;\n}\n\n/**\n * List items (files) and prefixes (folders) under this storage reference.\n *\n * List API is only available for Firebase Rules Version 2.\n *\n * GCS is a key-blob store. Firebase Storage imposes the semantic of '/'\n * delimited folder structure.\n * Refer to GCS's List API if you want to learn more.\n *\n * To adhere to Firebase Rules's Semantics, Firebase Storage does not\n * support objects whose paths end with \"/\" or contain two consecutive\n * \"/\"s. Firebase Storage List API will filter these unsupported objects.\n * list() may fail if there are too many unsupported objects in the bucket.\n * @public\n *\n * @param ref - {@link StorageReference} to get list from.\n * @param options - See {@link ListOptions} for details.\n * @returns A `Promise` that resolves with the items and prefixes.\n *      `prefixes` contains references to sub-folders and `items`\n *      contains references to objects in this folder. `nextPageToken`\n *      can be used to get the rest of the results.\n */\nexport function list(\n  ref: StorageReference,\n  options?: ListOptions\n): Promise<ListResult> {\n  ref = getModularInstance(ref);\n  return listInternal(ref as Reference, options);\n}\n\n/**\n * List all items (files) and prefixes (folders) under this storage reference.\n *\n * This is a helper method for calling list() repeatedly until there are\n * no more results. The default pagination size is 1000.\n *\n * Note: The results may not be consistent if objects are changed while this\n * operation is running.\n *\n * Warning: `listAll` may potentially consume too many resources if there are\n * too many results.\n * @public\n * @param ref - {@link StorageReference} to get list from.\n *\n * @returns A `Promise` that resolves with all the items and prefixes under\n *      the current storage reference. `prefixes` contains references to\n *      sub-directories and `items` contains references to objects in this\n *      folder. `nextPageToken` is never returned.\n */\nexport function listAll(ref: StorageReference): Promise<ListResult> {\n  ref = getModularInstance(ref);\n  return listAllInternal(ref as Reference);\n}\n\n/**\n * Returns the download URL for the given {@link StorageReference}.\n * @public\n * @param ref - {@link StorageReference} to get the download URL for.\n * @returns A `Promise` that resolves with the download\n *     URL for this object.\n */\nexport function getDownloadURL(ref: StorageReference): Promise<string> {\n  ref = getModularInstance(ref);\n  return getDownloadURLInternal(ref as Reference);\n}\n\n/**\n * Deletes the object at this location.\n * @public\n * @param ref - {@link StorageReference} for object to delete.\n * @returns A `Promise` that resolves if the deletion succeeds.\n */\nexport function deleteObject(ref: StorageReference): Promise<void> {\n  ref = getModularInstance(ref);\n  return deleteObjectInternal(ref as Reference);\n}\n\n/**\n * Returns a {@link StorageReference} for the given url.\n * @param storage - {@link FirebaseStorage} instance.\n * @param url - URL. If empty, returns root reference.\n * @public\n */\nexport function ref(storage: FirebaseStorage, url?: string): StorageReference;\n/**\n * Returns a {@link StorageReference} for the given path in the\n * default bucket.\n * @param storageOrRef - {@link FirebaseStorage} or {@link StorageReference}.\n * @param pathOrUrlStorage - path. If empty, returns root reference (if {@link FirebaseStorage}\n * instance provided) or returns same reference (if {@link StorageReference} provided).\n * @public\n */\nexport function ref(\n  storageOrRef: FirebaseStorage | StorageReference,\n  path?: string\n): StorageReference;\nexport function ref(\n  serviceOrRef: FirebaseStorage | StorageReference,\n  pathOrUrl?: string\n): StorageReference | null {\n  serviceOrRef = getModularInstance(serviceOrRef);\n  return refInternal(\n    serviceOrRef as FirebaseStorageImpl | Reference,\n    pathOrUrl\n  );\n}\n\n/**\n * @internal\n */\nexport function _getChild(ref: StorageReference, childPath: string): Reference {\n  return _getChildInternal(ref as Reference, childPath);\n}\n\n/**\n * Gets a {@link FirebaseStorage} instance for the given Firebase app.\n * @public\n * @param app - Firebase app to get {@link FirebaseStorage} instance for.\n * @param bucketUrl - The gs:// url to your Firebase Storage Bucket.\n * If not passed, uses the app's default Storage Bucket.\n * @returns A {@link FirebaseStorage} instance.\n */\nexport function getStorage(\n  app: FirebaseApp = getApp(),\n  bucketUrl?: string\n): FirebaseStorage {\n  app = getModularInstance(app);\n  const storageProvider: Provider<'storage'> = _getProvider(app, STORAGE_TYPE);\n  const storageInstance = storageProvider.getImmediate({\n    identifier: bucketUrl\n  });\n  return storageInstance;\n}\n\n/**\n * Modify this {@link FirebaseStorage} instance to communicate with the Cloud Storage emulator.\n *\n * @param storage - The {@link FirebaseStorage} instance\n * @param host - The emulator host (ex: localhost)\n * @param port - The emulator port (ex: 5001)\n * @param options - Emulator options. `options.mockUserToken` is the mock auth\n * token to use for unit testing Security Rules.\n * @public\n */\nexport function connectStorageEmulator(\n  storage: FirebaseStorage,\n  host: string,\n  port: number,\n  options: {\n    mockUserToken?: EmulatorMockTokenOptions | string;\n  } = {}\n): void {\n  connectEmulatorInternal(storage as FirebaseStorageImpl, host, port, options);\n}\n","/**\n * Cloud Storage for Firebase\n *\n * @packageDocumentation\n */\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// eslint-disable-next-line import/no-extraneous-dependencies\nimport {\n  _registerComponent,\n  registerVersion,\n  SDK_VERSION\n} from '@firebase/app';\n\nimport { FirebaseStorageImpl } from '../src/service';\nimport {\n  Component,\n  ComponentType,\n  ComponentContainer,\n  InstanceFactoryOptions\n} from '@firebase/component';\n\nimport { name, version } from '../package.json';\n\nimport { FirebaseStorage } from './public-types';\nimport { STORAGE_TYPE } from './constants';\n\nexport * from './api';\nexport * from './api.browser';\n\nfunction factory(\n  container: ComponentContainer,\n  { instanceIdentifier: url }: InstanceFactoryOptions\n): FirebaseStorage {\n  const app = container.getProvider('app').getImmediate();\n  const authProvider = container.getProvider('auth-internal');\n  const appCheckProvider = container.getProvider('app-check-internal');\n\n  return new FirebaseStorageImpl(\n    app,\n    authProvider,\n    appCheckProvider,\n    url,\n    SDK_VERSION\n  );\n}\n\nfunction registerStorage(): void {\n  _registerComponent(\n    new Component(\n      STORAGE_TYPE,\n      factory,\n      ComponentType.PUBLIC\n    ).setMultipleInstances(true)\n  );\n  //RUNTIME_ENV will be replaced during the compilation to \"node\" for nodejs and an empty string for browser\n  registerVersion(name, version, '__RUNTIME_ENV__');\n  // BUILD_TARGET will be replaced by values like esm5, esm2017, cjs5, etc during the compilation\n  registerVersion(name, version, '__BUILD_TARGET__');\n}\n\nregisterStorage();\n","function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nmodule.exports = _arrayLikeToArray;","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nvar getRandomValues;\nvar rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation. Also,\n    // find the complete implementation of crypto (msCrypto) on IE11.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto !== 'undefined' && typeof msCrypto.getRandomValues === 'function' && msCrypto.getRandomValues.bind(msCrypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","import rng from './rng.js';\nimport stringify from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  options = options || {};\n  var rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (var i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return stringify(rnds);\n}\n\nexport default v4;","import rng from './rng.js';\nimport stringify from './stringify.js'; // **`v1()` - Generate time-based UUID**\n//\n// Inspired by https://github.com/LiosK/UUID.js\n// and http://docs.python.org/library/uuid.html\n\nvar _nodeId;\n\nvar _clockseq; // Previous uuid creation time\n\n\nvar _lastMSecs = 0;\nvar _lastNSecs = 0; // See https://github.com/uuidjs/uuid for API details\n\nfunction v1(options, buf, offset) {\n  var i = buf && offset || 0;\n  var b = buf || new Array(16);\n  options = options || {};\n  var node = options.node || _nodeId;\n  var clockseq = options.clockseq !== undefined ? options.clockseq : _clockseq; // node and clockseq need to be initialized to random values if they're not\n  // specified.  We do this lazily to minimize issues related to insufficient\n  // system entropy.  See #189\n\n  if (node == null || clockseq == null) {\n    var seedBytes = options.random || (options.rng || rng)();\n\n    if (node == null) {\n      // Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)\n      node = _nodeId = [seedBytes[0] | 0x01, seedBytes[1], seedBytes[2], seedBytes[3], seedBytes[4], seedBytes[5]];\n    }\n\n    if (clockseq == null) {\n      // Per 4.2.2, randomize (14 bit) clockseq\n      clockseq = _clockseq = (seedBytes[6] << 8 | seedBytes[7]) & 0x3fff;\n    }\n  } // UUID timestamps are 100 nano-second units since the Gregorian epoch,\n  // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so\n  // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'\n  // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.\n\n\n  var msecs = options.msecs !== undefined ? options.msecs : Date.now(); // Per 4.2.1.2, use count of uuid's generated during the current clock\n  // cycle to simulate higher resolution clock\n\n  var nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1; // Time since last uuid creation (in msecs)\n\n  var dt = msecs - _lastMSecs + (nsecs - _lastNSecs) / 10000; // Per 4.2.1.2, Bump clockseq on clock regression\n\n  if (dt < 0 && options.clockseq === undefined) {\n    clockseq = clockseq + 1 & 0x3fff;\n  } // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new\n  // time interval\n\n\n  if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {\n    nsecs = 0;\n  } // Per 4.2.1.2 Throw error if too many uuids are requested\n\n\n  if (nsecs >= 10000) {\n    throw new Error(\"uuid.v1(): Can't create more than 10M uuids/sec\");\n  }\n\n  _lastMSecs = msecs;\n  _lastNSecs = nsecs;\n  _clockseq = clockseq; // Per 4.1.4 - Convert from unix epoch to Gregorian epoch\n\n  msecs += 12219292800000; // `time_low`\n\n  var tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;\n  b[i++] = tl >>> 24 & 0xff;\n  b[i++] = tl >>> 16 & 0xff;\n  b[i++] = tl >>> 8 & 0xff;\n  b[i++] = tl & 0xff; // `time_mid`\n\n  var tmh = msecs / 0x100000000 * 10000 & 0xfffffff;\n  b[i++] = tmh >>> 8 & 0xff;\n  b[i++] = tmh & 0xff; // `time_high_and_version`\n\n  b[i++] = tmh >>> 24 & 0xf | 0x10; // include version\n\n  b[i++] = tmh >>> 16 & 0xff; // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)\n\n  b[i++] = clockseq >>> 8 | 0x80; // `clock_seq_low`\n\n  b[i++] = clockseq & 0xff; // `node`\n\n  for (var n = 0; n < 6; ++n) {\n    b[i + n] = node[n];\n  }\n\n  return buf || stringify(b);\n}\n\nexport default v1;","import validate from './validate.js';\n\nfunction parse(uuid) {\n  if (!validate(uuid)) {\n    throw TypeError('Invalid UUID');\n  }\n\n  var v;\n  var arr = new Uint8Array(16); // Parse ########-....-....-....-............\n\n  arr[0] = (v = parseInt(uuid.slice(0, 8), 16)) >>> 24;\n  arr[1] = v >>> 16 & 0xff;\n  arr[2] = v >>> 8 & 0xff;\n  arr[3] = v & 0xff; // Parse ........-####-....-....-............\n\n  arr[4] = (v = parseInt(uuid.slice(9, 13), 16)) >>> 8;\n  arr[5] = v & 0xff; // Parse ........-....-####-....-............\n\n  arr[6] = (v = parseInt(uuid.slice(14, 18), 16)) >>> 8;\n  arr[7] = v & 0xff; // Parse ........-....-....-####-............\n\n  arr[8] = (v = parseInt(uuid.slice(19, 23), 16)) >>> 8;\n  arr[9] = v & 0xff; // Parse ........-....-....-....-############\n  // (Use \"/\" to avoid 32-bit truncation when bit-shifting high-order bytes)\n\n  arr[10] = (v = parseInt(uuid.slice(24, 36), 16)) / 0x10000000000 & 0xff;\n  arr[11] = v / 0x100000000 & 0xff;\n  arr[12] = v >>> 24 & 0xff;\n  arr[13] = v >>> 16 & 0xff;\n  arr[14] = v >>> 8 & 0xff;\n  arr[15] = v & 0xff;\n  return arr;\n}\n\nexport default parse;","import stringify from './stringify.js';\nimport parse from './parse.js';\n\nfunction stringToBytes(str) {\n  str = unescape(encodeURIComponent(str)); // UTF8 escape\n\n  var bytes = [];\n\n  for (var i = 0; i < str.length; ++i) {\n    bytes.push(str.charCodeAt(i));\n  }\n\n  return bytes;\n}\n\nexport var DNS = '6ba7b810-9dad-11d1-80b4-00c04fd430c8';\nexport var URL = '6ba7b811-9dad-11d1-80b4-00c04fd430c8';\nexport default function (name, version, hashfunc) {\n  function generateUUID(value, namespace, buf, offset) {\n    if (typeof value === 'string') {\n      value = stringToBytes(value);\n    }\n\n    if (typeof namespace === 'string') {\n      namespace = parse(namespace);\n    }\n\n    if (namespace.length !== 16) {\n      throw TypeError('Namespace must be array-like (16 iterable integer values, 0-255)');\n    } // Compute hash of namespace and value, Per 4.3\n    // Future: Use spread syntax when supported on all platforms, e.g. `bytes =\n    // hashfunc([...namespace, ... value])`\n\n\n    var bytes = new Uint8Array(16 + value.length);\n    bytes.set(namespace);\n    bytes.set(value, namespace.length);\n    bytes = hashfunc(bytes);\n    bytes[6] = bytes[6] & 0x0f | version;\n    bytes[8] = bytes[8] & 0x3f | 0x80;\n\n    if (buf) {\n      offset = offset || 0;\n\n      for (var i = 0; i < 16; ++i) {\n        buf[offset + i] = bytes[i];\n      }\n\n      return buf;\n    }\n\n    return stringify(bytes);\n  } // Function#name is not settable on some platforms (#270)\n\n\n  try {\n    generateUUID.name = name; // eslint-disable-next-line no-empty\n  } catch (err) {} // For CommonJS default export support\n\n\n  generateUUID.DNS = DNS;\n  generateUUID.URL = URL;\n  return generateUUID;\n}","/*\n * Browser-compatible JavaScript MD5\n *\n * Modification of JavaScript MD5\n * https://github.com/blueimp/JavaScript-MD5\n *\n * Copyright 2011, Sebastian Tschan\n * https://blueimp.net\n *\n * Licensed under the MIT license:\n * https://opensource.org/licenses/MIT\n *\n * Based on\n * A JavaScript implementation of the RSA Data Security, Inc. MD5 Message\n * Digest Algorithm, as defined in RFC 1321.\n * Version 2.2 Copyright (C) Paul Johnston 1999 - 2009\n * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n * Distributed under the BSD License\n * See http://pajhome.org.uk/crypt/md5 for more info.\n */\nfunction md5(bytes) {\n  if (typeof bytes === 'string') {\n    var msg = unescape(encodeURIComponent(bytes)); // UTF8 escape\n\n    bytes = new Uint8Array(msg.length);\n\n    for (var i = 0; i < msg.length; ++i) {\n      bytes[i] = msg.charCodeAt(i);\n    }\n  }\n\n  return md5ToHexEncodedArray(wordsToMd5(bytesToWords(bytes), bytes.length * 8));\n}\n/*\n * Convert an array of little-endian words to an array of bytes\n */\n\n\nfunction md5ToHexEncodedArray(input) {\n  var output = [];\n  var length32 = input.length * 32;\n  var hexTab = '0123456789abcdef';\n\n  for (var i = 0; i < length32; i += 8) {\n    var x = input[i >> 5] >>> i % 32 & 0xff;\n    var hex = parseInt(hexTab.charAt(x >>> 4 & 0x0f) + hexTab.charAt(x & 0x0f), 16);\n    output.push(hex);\n  }\n\n  return output;\n}\n/**\n * Calculate output length with padding and bit length\n */\n\n\nfunction getOutputLength(inputLength8) {\n  return (inputLength8 + 64 >>> 9 << 4) + 14 + 1;\n}\n/*\n * Calculate the MD5 of an array of little-endian words, and a bit length.\n */\n\n\nfunction wordsToMd5(x, len) {\n  /* append padding */\n  x[len >> 5] |= 0x80 << len % 32;\n  x[getOutputLength(len) - 1] = len;\n  var a = 1732584193;\n  var b = -271733879;\n  var c = -1732584194;\n  var d = 271733878;\n\n  for (var i = 0; i < x.length; i += 16) {\n    var olda = a;\n    var oldb = b;\n    var oldc = c;\n    var oldd = d;\n    a = md5ff(a, b, c, d, x[i], 7, -680876936);\n    d = md5ff(d, a, b, c, x[i + 1], 12, -389564586);\n    c = md5ff(c, d, a, b, x[i + 2], 17, 606105819);\n    b = md5ff(b, c, d, a, x[i + 3], 22, -1044525330);\n    a = md5ff(a, b, c, d, x[i + 4], 7, -176418897);\n    d = md5ff(d, a, b, c, x[i + 5], 12, 1200080426);\n    c = md5ff(c, d, a, b, x[i + 6], 17, -1473231341);\n    b = md5ff(b, c, d, a, x[i + 7], 22, -45705983);\n    a = md5ff(a, b, c, d, x[i + 8], 7, 1770035416);\n    d = md5ff(d, a, b, c, x[i + 9], 12, -1958414417);\n    c = md5ff(c, d, a, b, x[i + 10], 17, -42063);\n    b = md5ff(b, c, d, a, x[i + 11], 22, -1990404162);\n    a = md5ff(a, b, c, d, x[i + 12], 7, 1804603682);\n    d = md5ff(d, a, b, c, x[i + 13], 12, -40341101);\n    c = md5ff(c, d, a, b, x[i + 14], 17, -1502002290);\n    b = md5ff(b, c, d, a, x[i + 15], 22, 1236535329);\n    a = md5gg(a, b, c, d, x[i + 1], 5, -165796510);\n    d = md5gg(d, a, b, c, x[i + 6], 9, -1069501632);\n    c = md5gg(c, d, a, b, x[i + 11], 14, 643717713);\n    b = md5gg(b, c, d, a, x[i], 20, -373897302);\n    a = md5gg(a, b, c, d, x[i + 5], 5, -701558691);\n    d = md5gg(d, a, b, c, x[i + 10], 9, 38016083);\n    c = md5gg(c, d, a, b, x[i + 15], 14, -660478335);\n    b = md5gg(b, c, d, a, x[i + 4], 20, -405537848);\n    a = md5gg(a, b, c, d, x[i + 9], 5, 568446438);\n    d = md5gg(d, a, b, c, x[i + 14], 9, -1019803690);\n    c = md5gg(c, d, a, b, x[i + 3], 14, -187363961);\n    b = md5gg(b, c, d, a, x[i + 8], 20, 1163531501);\n    a = md5gg(a, b, c, d, x[i + 13], 5, -1444681467);\n    d = md5gg(d, a, b, c, x[i + 2], 9, -51403784);\n    c = md5gg(c, d, a, b, x[i + 7], 14, 1735328473);\n    b = md5gg(b, c, d, a, x[i + 12], 20, -1926607734);\n    a = md5hh(a, b, c, d, x[i + 5], 4, -378558);\n    d = md5hh(d, a, b, c, x[i + 8], 11, -2022574463);\n    c = md5hh(c, d, a, b, x[i + 11], 16, 1839030562);\n    b = md5hh(b, c, d, a, x[i + 14], 23, -35309556);\n    a = md5hh(a, b, c, d, x[i + 1], 4, -1530992060);\n    d = md5hh(d, a, b, c, x[i + 4], 11, 1272893353);\n    c = md5hh(c, d, a, b, x[i + 7], 16, -155497632);\n    b = md5hh(b, c, d, a, x[i + 10], 23, -1094730640);\n    a = md5hh(a, b, c, d, x[i + 13], 4, 681279174);\n    d = md5hh(d, a, b, c, x[i], 11, -358537222);\n    c = md5hh(c, d, a, b, x[i + 3], 16, -722521979);\n    b = md5hh(b, c, d, a, x[i + 6], 23, 76029189);\n    a = md5hh(a, b, c, d, x[i + 9], 4, -640364487);\n    d = md5hh(d, a, b, c, x[i + 12], 11, -421815835);\n    c = md5hh(c, d, a, b, x[i + 15], 16, 530742520);\n    b = md5hh(b, c, d, a, x[i + 2], 23, -995338651);\n    a = md5ii(a, b, c, d, x[i], 6, -198630844);\n    d = md5ii(d, a, b, c, x[i + 7], 10, 1126891415);\n    c = md5ii(c, d, a, b, x[i + 14], 15, -1416354905);\n    b = md5ii(b, c, d, a, x[i + 5], 21, -57434055);\n    a = md5ii(a, b, c, d, x[i + 12], 6, 1700485571);\n    d = md5ii(d, a, b, c, x[i + 3], 10, -1894986606);\n    c = md5ii(c, d, a, b, x[i + 10], 15, -1051523);\n    b = md5ii(b, c, d, a, x[i + 1], 21, -2054922799);\n    a = md5ii(a, b, c, d, x[i + 8], 6, 1873313359);\n    d = md5ii(d, a, b, c, x[i + 15], 10, -30611744);\n    c = md5ii(c, d, a, b, x[i + 6], 15, -1560198380);\n    b = md5ii(b, c, d, a, x[i + 13], 21, 1309151649);\n    a = md5ii(a, b, c, d, x[i + 4], 6, -145523070);\n    d = md5ii(d, a, b, c, x[i + 11], 10, -1120210379);\n    c = md5ii(c, d, a, b, x[i + 2], 15, 718787259);\n    b = md5ii(b, c, d, a, x[i + 9], 21, -343485551);\n    a = safeAdd(a, olda);\n    b = safeAdd(b, oldb);\n    c = safeAdd(c, oldc);\n    d = safeAdd(d, oldd);\n  }\n\n  return [a, b, c, d];\n}\n/*\n * Convert an array bytes to an array of little-endian words\n * Characters >255 have their high-byte silently ignored.\n */\n\n\nfunction bytesToWords(input) {\n  if (input.length === 0) {\n    return [];\n  }\n\n  var length8 = input.length * 8;\n  var output = new Uint32Array(getOutputLength(length8));\n\n  for (var i = 0; i < length8; i += 8) {\n    output[i >> 5] |= (input[i / 8] & 0xff) << i % 32;\n  }\n\n  return output;\n}\n/*\n * Add integers, wrapping at 2^32. This uses 16-bit operations internally\n * to work around bugs in some JS interpreters.\n */\n\n\nfunction safeAdd(x, y) {\n  var lsw = (x & 0xffff) + (y & 0xffff);\n  var msw = (x >> 16) + (y >> 16) + (lsw >> 16);\n  return msw << 16 | lsw & 0xffff;\n}\n/*\n * Bitwise rotate a 32-bit number to the left.\n */\n\n\nfunction bitRotateLeft(num, cnt) {\n  return num << cnt | num >>> 32 - cnt;\n}\n/*\n * These functions implement the four basic operations the algorithm uses.\n */\n\n\nfunction md5cmn(q, a, b, x, s, t) {\n  return safeAdd(bitRotateLeft(safeAdd(safeAdd(a, q), safeAdd(x, t)), s), b);\n}\n\nfunction md5ff(a, b, c, d, x, s, t) {\n  return md5cmn(b & c | ~b & d, a, b, x, s, t);\n}\n\nfunction md5gg(a, b, c, d, x, s, t) {\n  return md5cmn(b & d | c & ~d, a, b, x, s, t);\n}\n\nfunction md5hh(a, b, c, d, x, s, t) {\n  return md5cmn(b ^ c ^ d, a, b, x, s, t);\n}\n\nfunction md5ii(a, b, c, d, x, s, t) {\n  return md5cmn(c ^ (b | ~d), a, b, x, s, t);\n}\n\nexport default md5;","import v35 from './v35.js';\nimport md5 from './md5.js';\nvar v3 = v35('v3', 0x30, md5);\nexport default v3;","// Adapted from Chris Veness' SHA1 code at\n// http://www.movable-type.co.uk/scripts/sha1.html\nfunction f(s, x, y, z) {\n  switch (s) {\n    case 0:\n      return x & y ^ ~x & z;\n\n    case 1:\n      return x ^ y ^ z;\n\n    case 2:\n      return x & y ^ x & z ^ y & z;\n\n    case 3:\n      return x ^ y ^ z;\n  }\n}\n\nfunction ROTL(x, n) {\n  return x << n | x >>> 32 - n;\n}\n\nfunction sha1(bytes) {\n  var K = [0x5a827999, 0x6ed9eba1, 0x8f1bbcdc, 0xca62c1d6];\n  var H = [0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0];\n\n  if (typeof bytes === 'string') {\n    var msg = unescape(encodeURIComponent(bytes)); // UTF8 escape\n\n    bytes = [];\n\n    for (var i = 0; i < msg.length; ++i) {\n      bytes.push(msg.charCodeAt(i));\n    }\n  } else if (!Array.isArray(bytes)) {\n    // Convert Array-like to Array\n    bytes = Array.prototype.slice.call(bytes);\n  }\n\n  bytes.push(0x80);\n  var l = bytes.length / 4 + 2;\n  var N = Math.ceil(l / 16);\n  var M = new Array(N);\n\n  for (var _i = 0; _i < N; ++_i) {\n    var arr = new Uint32Array(16);\n\n    for (var j = 0; j < 16; ++j) {\n      arr[j] = bytes[_i * 64 + j * 4] << 24 | bytes[_i * 64 + j * 4 + 1] << 16 | bytes[_i * 64 + j * 4 + 2] << 8 | bytes[_i * 64 + j * 4 + 3];\n    }\n\n    M[_i] = arr;\n  }\n\n  M[N - 1][14] = (bytes.length - 1) * 8 / Math.pow(2, 32);\n  M[N - 1][14] = Math.floor(M[N - 1][14]);\n  M[N - 1][15] = (bytes.length - 1) * 8 & 0xffffffff;\n\n  for (var _i2 = 0; _i2 < N; ++_i2) {\n    var W = new Uint32Array(80);\n\n    for (var t = 0; t < 16; ++t) {\n      W[t] = M[_i2][t];\n    }\n\n    for (var _t = 16; _t < 80; ++_t) {\n      W[_t] = ROTL(W[_t - 3] ^ W[_t - 8] ^ W[_t - 14] ^ W[_t - 16], 1);\n    }\n\n    var a = H[0];\n    var b = H[1];\n    var c = H[2];\n    var d = H[3];\n    var e = H[4];\n\n    for (var _t2 = 0; _t2 < 80; ++_t2) {\n      var s = Math.floor(_t2 / 20);\n      var T = ROTL(a, 5) + f(s, b, c, d) + e + K[s] + W[_t2] >>> 0;\n      e = d;\n      d = c;\n      c = ROTL(b, 30) >>> 0;\n      b = a;\n      a = T;\n    }\n\n    H[0] = H[0] + a >>> 0;\n    H[1] = H[1] + b >>> 0;\n    H[2] = H[2] + c >>> 0;\n    H[3] = H[3] + d >>> 0;\n    H[4] = H[4] + e >>> 0;\n  }\n\n  return [H[0] >> 24 & 0xff, H[0] >> 16 & 0xff, H[0] >> 8 & 0xff, H[0] & 0xff, H[1] >> 24 & 0xff, H[1] >> 16 & 0xff, H[1] >> 8 & 0xff, H[1] & 0xff, H[2] >> 24 & 0xff, H[2] >> 16 & 0xff, H[2] >> 8 & 0xff, H[2] & 0xff, H[3] >> 24 & 0xff, H[3] >> 16 & 0xff, H[3] >> 8 & 0xff, H[3] & 0xff, H[4] >> 24 & 0xff, H[4] >> 16 & 0xff, H[4] >> 8 & 0xff, H[4] & 0xff];\n}\n\nexport default sha1;","import v35 from './v35.js';\nimport sha1 from './sha1.js';\nvar v5 = v35('v5', 0x50, sha1);\nexport default v5;","export default '00000000-0000-0000-0000-000000000000';","import validate from './validate.js';\n\nfunction version(uuid) {\n  if (!validate(uuid)) {\n    throw TypeError('Invalid UUID');\n  }\n\n  return parseInt(uuid.substr(14, 1), 16);\n}\n\nexport default version;","/*!\n * mime-db\n * Copyright(c) 2014 Jonathan Ong\n * MIT Licensed\n */\n\n/**\n * Module exports.\n */\n\nmodule.exports = require('./db.json')\n","// .dirname, .basename, and .extname methods are extracted from Node.js v8.11.1,\n// backported and transplited with Babel, with backwards-compat fixes\n\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// resolves . and .. elements in a path array with directory names there\n// must be no slashes, empty elements, or device names (c:\\) in the array\n// (so also no leading and trailing slashes - it does not distinguish\n// relative and absolute paths)\nfunction normalizeArray(parts, allowAboveRoot) {\n  // if the path tries to go above the root, `up` ends up > 0\n  var up = 0;\n  for (var i = parts.length - 1; i >= 0; i--) {\n    var last = parts[i];\n    if (last === '.') {\n      parts.splice(i, 1);\n    } else if (last === '..') {\n      parts.splice(i, 1);\n      up++;\n    } else if (up) {\n      parts.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (allowAboveRoot) {\n    for (; up--; up) {\n      parts.unshift('..');\n    }\n  }\n\n  return parts;\n}\n\n// path.resolve([from ...], to)\n// posix version\nexports.resolve = function() {\n  var resolvedPath = '',\n      resolvedAbsolute = false;\n\n  for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n    var path = (i >= 0) ? arguments[i] : process.cwd();\n\n    // Skip empty and invalid entries\n    if (typeof path !== 'string') {\n      throw new TypeError('Arguments to path.resolve must be strings');\n    } else if (!path) {\n      continue;\n    }\n\n    resolvedPath = path + '/' + resolvedPath;\n    resolvedAbsolute = path.charAt(0) === '/';\n  }\n\n  // At this point the path should be resolved to a full absolute path, but\n  // handle relative paths to be safe (might happen when process.cwd() fails)\n\n  // Normalize the path\n  resolvedPath = normalizeArray(filter(resolvedPath.split('/'), function(p) {\n    return !!p;\n  }), !resolvedAbsolute).join('/');\n\n  return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';\n};\n\n// path.normalize(path)\n// posix version\nexports.normalize = function(path) {\n  var isAbsolute = exports.isAbsolute(path),\n      trailingSlash = substr(path, -1) === '/';\n\n  // Normalize the path\n  path = normalizeArray(filter(path.split('/'), function(p) {\n    return !!p;\n  }), !isAbsolute).join('/');\n\n  if (!path && !isAbsolute) {\n    path = '.';\n  }\n  if (path && trailingSlash) {\n    path += '/';\n  }\n\n  return (isAbsolute ? '/' : '') + path;\n};\n\n// posix version\nexports.isAbsolute = function(path) {\n  return path.charAt(0) === '/';\n};\n\n// posix version\nexports.join = function() {\n  var paths = Array.prototype.slice.call(arguments, 0);\n  return exports.normalize(filter(paths, function(p, index) {\n    if (typeof p !== 'string') {\n      throw new TypeError('Arguments to path.join must be strings');\n    }\n    return p;\n  }).join('/'));\n};\n\n\n// path.relative(from, to)\n// posix version\nexports.relative = function(from, to) {\n  from = exports.resolve(from).substr(1);\n  to = exports.resolve(to).substr(1);\n\n  function trim(arr) {\n    var start = 0;\n    for (; start < arr.length; start++) {\n      if (arr[start] !== '') break;\n    }\n\n    var end = arr.length - 1;\n    for (; end >= 0; end--) {\n      if (arr[end] !== '') break;\n    }\n\n    if (start > end) return [];\n    return arr.slice(start, end - start + 1);\n  }\n\n  var fromParts = trim(from.split('/'));\n  var toParts = trim(to.split('/'));\n\n  var length = Math.min(fromParts.length, toParts.length);\n  var samePartsLength = length;\n  for (var i = 0; i < length; i++) {\n    if (fromParts[i] !== toParts[i]) {\n      samePartsLength = i;\n      break;\n    }\n  }\n\n  var outputParts = [];\n  for (var i = samePartsLength; i < fromParts.length; i++) {\n    outputParts.push('..');\n  }\n\n  outputParts = outputParts.concat(toParts.slice(samePartsLength));\n\n  return outputParts.join('/');\n};\n\nexports.sep = '/';\nexports.delimiter = ':';\n\nexports.dirname = function (path) {\n  if (typeof path !== 'string') path = path + '';\n  if (path.length === 0) return '.';\n  var code = path.charCodeAt(0);\n  var hasRoot = code === 47 /*/*/;\n  var end = -1;\n  var matchedSlash = true;\n  for (var i = path.length - 1; i >= 1; --i) {\n    code = path.charCodeAt(i);\n    if (code === 47 /*/*/) {\n        if (!matchedSlash) {\n          end = i;\n          break;\n        }\n      } else {\n      // We saw the first non-path separator\n      matchedSlash = false;\n    }\n  }\n\n  if (end === -1) return hasRoot ? '/' : '.';\n  if (hasRoot && end === 1) {\n    // return '//';\n    // Backwards-compat fix:\n    return '/';\n  }\n  return path.slice(0, end);\n};\n\nfunction basename(path) {\n  if (typeof path !== 'string') path = path + '';\n\n  var start = 0;\n  var end = -1;\n  var matchedSlash = true;\n  var i;\n\n  for (i = path.length - 1; i >= 0; --i) {\n    if (path.charCodeAt(i) === 47 /*/*/) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now\n        if (!matchedSlash) {\n          start = i + 1;\n          break;\n        }\n      } else if (end === -1) {\n      // We saw the first non-path separator, mark this as the end of our\n      // path component\n      matchedSlash = false;\n      end = i + 1;\n    }\n  }\n\n  if (end === -1) return '';\n  return path.slice(start, end);\n}\n\n// Uses a mixed approach for backwards-compatibility, as ext behavior changed\n// in new Node.js versions, so only basename() above is backported here\nexports.basename = function (path, ext) {\n  var f = basename(path);\n  if (ext && f.substr(-1 * ext.length) === ext) {\n    f = f.substr(0, f.length - ext.length);\n  }\n  return f;\n};\n\nexports.extname = function (path) {\n  if (typeof path !== 'string') path = path + '';\n  var startDot = -1;\n  var startPart = 0;\n  var end = -1;\n  var matchedSlash = true;\n  // Track the state of characters (if any) we see before our first dot and\n  // after any path separator we find\n  var preDotState = 0;\n  for (var i = path.length - 1; i >= 0; --i) {\n    var code = path.charCodeAt(i);\n    if (code === 47 /*/*/) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now\n        if (!matchedSlash) {\n          startPart = i + 1;\n          break;\n        }\n        continue;\n      }\n    if (end === -1) {\n      // We saw the first non-path separator, mark this as the end of our\n      // extension\n      matchedSlash = false;\n      end = i + 1;\n    }\n    if (code === 46 /*.*/) {\n        // If this is our first dot, mark it as the start of our extension\n        if (startDot === -1)\n          startDot = i;\n        else if (preDotState !== 1)\n          preDotState = 1;\n    } else if (startDot !== -1) {\n      // We saw a non-dot and non-path separator before our dot, so we should\n      // have a good chance at having a non-empty extension\n      preDotState = -1;\n    }\n  }\n\n  if (startDot === -1 || end === -1 ||\n      // We saw a non-dot character immediately before the dot\n      preDotState === 0 ||\n      // The (right-most) trimmed path component is exactly '..'\n      preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {\n    return '';\n  }\n  return path.slice(startDot, end);\n};\n\nfunction filter (xs, f) {\n    if (xs.filter) return xs.filter(f);\n    var res = [];\n    for (var i = 0; i < xs.length; i++) {\n        if (f(xs[i], i, xs)) res.push(xs[i]);\n    }\n    return res;\n}\n\n// String.prototype.substr - negative index don't work in IE8\nvar substr = 'ab'.substr(-1) === 'b'\n    ? function (str, start, len) { return str.substr(start, len) }\n    : function (str, start, len) {\n        if (start < 0) start = str.length + start;\n        return str.substr(start, len);\n    }\n;\n","var arrayWithoutHoles = require(\"./arrayWithoutHoles\");\n\nvar iterableToArray = require(\"./iterableToArray\");\n\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray\");\n\nvar nonIterableSpread = require(\"./nonIterableSpread\");\n\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}\n\nmodule.exports = _toConsumableArray;","var arrayLikeToArray = require(\"./arrayLikeToArray\");\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}\n\nmodule.exports = _arrayWithoutHoles;","function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}\n\nmodule.exports = _iterableToArray;","var arrayLikeToArray = require(\"./arrayLikeToArray\");\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}\n\nmodule.exports = _unsupportedIterableToArray;","function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nmodule.exports = _nonIterableSpread;","var defineProperty = require(\"./defineProperty\");\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nmodule.exports = _objectSpread2;","function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nmodule.exports = _defineProperty;","var Converter = require('./src/converter');\n\n/**\n * Function get source and destination alphabet and return convert function\n *\n * @param {string|Array} srcAlphabet\n * @param {string|Array} dstAlphabet\n *\n * @returns {function(number|Array)}\n */\nfunction anyBase(srcAlphabet, dstAlphabet) {\n    var converter = new Converter(srcAlphabet, dstAlphabet);\n    /**\n     * Convert function\n     *\n     * @param {string|Array} number\n     *\n     * @return {string|Array} number\n     */\n    return function (number) {\n        return converter.convert(number);\n    }\n};\n\nanyBase.BIN = '01';\nanyBase.OCT = '01234567';\nanyBase.DEC = '0123456789';\nanyBase.HEX = '0123456789abcdef';\n\nmodule.exports = anyBase;","'use strict';\n\n/**\n * Converter\n *\n * @param {string|Array} srcAlphabet\n * @param {string|Array} dstAlphabet\n * @constructor\n */\nfunction Converter(srcAlphabet, dstAlphabet) {\n    if (!srcAlphabet || !dstAlphabet || !srcAlphabet.length || !dstAlphabet.length) {\n        throw new Error('Bad alphabet');\n    }\n    this.srcAlphabet = srcAlphabet;\n    this.dstAlphabet = dstAlphabet;\n}\n\n/**\n * Convert number from source alphabet to destination alphabet\n *\n * @param {string|Array} number - number represented as a string or array of points\n *\n * @returns {string|Array}\n */\nConverter.prototype.convert = function(number) {\n    var i, divide, newlen,\n    numberMap = {},\n    fromBase = this.srcAlphabet.length,\n    toBase = this.dstAlphabet.length,\n    length = number.length,\n    result = typeof number === 'string' ? '' : [];\n\n    if (!this.isValid(number)) {\n        throw new Error('Number \"' + number + '\" contains of non-alphabetic digits (' + this.srcAlphabet + ')');\n    }\n\n    if (this.srcAlphabet === this.dstAlphabet) {\n        return number;\n    }\n\n    for (i = 0; i < length; i++) {\n        numberMap[i] = this.srcAlphabet.indexOf(number[i]);\n    }\n    do {\n        divide = 0;\n        newlen = 0;\n        for (i = 0; i < length; i++) {\n            divide = divide * fromBase + numberMap[i];\n            if (divide >= toBase) {\n                numberMap[newlen++] = parseInt(divide / toBase, 10);\n                divide = divide % toBase;\n            } else if (newlen > 0) {\n                numberMap[newlen++] = 0;\n            }\n        }\n        length = newlen;\n        result = this.dstAlphabet.slice(divide, divide + 1).concat(result);\n    } while (newlen !== 0);\n\n    return result;\n};\n\n/**\n * Valid number with source alphabet\n *\n * @param {number} number\n *\n * @returns {boolean}\n */\nConverter.prototype.isValid = function(number) {\n    var i = 0;\n    for (; i < number.length; ++i) {\n        if (this.srcAlphabet.indexOf(number[i]) === -1) {\n            return false;\n        }\n    }\n    return true;\n};\n\nmodule.exports = Converter;"],"sourceRoot":""}