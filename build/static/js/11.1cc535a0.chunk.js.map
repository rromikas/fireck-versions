{"version":3,"sources":["pages/Appearance/Logo.tsx","components/Popover.tsx","components/ColorPicker.tsx","pages/Appearance/Colors.tsx","pages/Appearance/index.tsx","api/callComponent.tsx","components/Select.tsx","hooks/useFetch.ts","components/TableElements/CollectionTable.tsx","components/Label.tsx","components/TableElements/AddFilter.tsx","components/TooltipChild.tsx","components/TableElements/FilesCell/MediaField.tsx","components/TableElements/FilesCell/index.tsx","helper.ts","components/PageTitle.tsx","pages/Media/SelectMedia.tsx","facades/FilesManager.ts","api/files.ts","pages/Media/index.tsx","components/IconButton.tsx"],"names":["Logo","value","onValue","className","Button","onClick","IconButton","a","callMedia","res","fontSize","alt","src","PopoverWrapper","content","anchorOrigin","transformOrigin","open","onClose","closeOnContentClick","rest","useState","anchorEl","setAnchorEl","Popover","Boolean","classes","paper","vertical","horizontal","undefined","e","currentTarget","children","ColorPicker","color","onChange","event","hex","Colors","defaultColors","packs","label","colors","COLORS_AMOUNT","length","slice","useEffect","TasksManager","setColors","map","x","pi","c","i","val","arr","style","backgroundColor","Appearance","appearance","useSelector","state","setItemValue","index","items","store","dispatch","type","payload","PageTitle","forEach","updateDocument","docId","disabled","saved","id","callComponent","Component","props","Promise","resolve","reject","wrapper","document","getElementById","appendChild","createElement","ReactDOM","render","proceed","unmountComponentAtNode","parentNode","removeChild","WarningIcon","React","forwardRef","ref","size","Select","options","error","groundColor","classNames","spellCheck","title","placement","useFetch","collectionId","filters","orderBy","inView","getOptions","useNotify","useCallback","f","where","fieldId","operator","direction","populateRef","useInfiniteQuery","pageParam","CollectionsManager","getCollection","startAfter","keepPreviousData","getNextPageParam","lastPage","pages","lastDoc","data","fetchNextPage","hasNextPage","docs","reduce","b","Table","collectionType","onPick","blackList","singleSelect","valueFormatters","_filters","_onEdit","onEdit","hideFilters","history","useHistory","setFilters","fields","filter","field","displayOnTable","selected","setSelected","setOrderBy","endIsInView","setEndIsInView","onDeleteSelected","confirm","confirmation","deleteMultipleDocuments","includes","doc","push","onOrder","selectHandler","checked","prev","findIndex","splice","formatValue","moment","format","toString","substring","AddFilter","hidden","autoHide","Checkbox","root","select","target","stopPropagation","j","mediaSingle","FilesCell","file","files","colSpan","Label","AddFilterModal","setOpen","useFormik","onSubmit","vals","resetForm","initialValues","validate","errors","Object","keys","values","handleChange","submitCount","handleSubmit","isSubmitting","onMouseDown","maxWidth","name","onKeyDown","key","preventDefault","placeholder","TooltipChild","MediaField","Tooltip","arrow","tooltip","backgroundImage","Files","useRef","Math","random","formatBytes","d","floor","log","parseFloat","pow","toFixed","getFileExtension","mime","extension","split","pop","er","SelectMedia","multiple","uploadRef","topRef","setLoading","isTopVisible","setIsTopVisible","refreshCounter","setCounter","collectionTypes","find","current","scrollIntoView","behavior","uploaded","uploadFile","click","url","MediaDocumentFormatters","FilesManager","storage","getStorage","nameParts","fileName","shortuuid","generate","fileRef","uploadTask","uploadBytesResumable","on","snapshot","getDownloadURL","then","downloadUrl","path","deleteObject","upload","fileDetails","storagePath","addDocument","window","Media","notify","variant"],"mappings":"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","file":"static/js/11.1cc535a0.chunk.js","sourcesContent":["import EditRounded from \"@material-ui/icons/EditRounded\";\r\nimport IconButton from \"components/IconButton\";\r\nimport { callMedia } from \"pages/Media/SelectMedia\";\r\nimport Button from \"components/Button\";\r\n\r\ninterface LogoProps {\r\n  value: string;\r\n  onValue: (newVal: string) => void;\r\n}\r\n\r\nconst Logo: React.FC<LogoProps> = ({ value, onValue }) => {\r\n  return (\r\n    <div>\r\n      <div className=\"flex justify-between mb-2\">\r\n        <div className=\"text-white leading-none\">Logo</div>\r\n        <Button\r\n          onClick={() => onValue(\"\")}\r\n          className=\"h-5 px-2 bg-fireck-4 hover:bg-fireck-4-hover text-black min-w-unset text-xs\"\r\n        >\r\n          Reset\r\n        </Button>\r\n      </div>\r\n\r\n      <div className=\"bg-fireck-3 p-3 relative rounded\">\r\n        <IconButton\r\n          className=\"absolute right-2 top-2\"\r\n          onClick={async () => {\r\n            const res = await callMedia(false);\r\n            if (typeof res === \"string\") {\r\n              onValue(res);\r\n            }\r\n          }}\r\n        >\r\n          <EditRounded fontSize=\"inherit\" className=\"text-base\"></EditRounded>\r\n        </IconButton>\r\n        <img alt=\"\" className=\"max-w-135px w-full\" src={value}></img>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Logo;\r\n","import { ReactElement, useState } from \"react\";\r\nimport Popover, { PopoverProps } from \"@mui/material/Popover\";\r\n\r\nexport interface PopoverWrapperProps extends Omit<PopoverProps, \"open\"> {\r\n  content: ReactElement;\r\n  open?: boolean;\r\n  onClose?: () => void;\r\n  closeOnContentClick?: boolean;\r\n}\r\n\r\nconst PopoverWrapper: React.FC<PopoverWrapperProps> = ({\r\n  content,\r\n  anchorOrigin,\r\n  transformOrigin,\r\n  open,\r\n  onClose,\r\n  closeOnContentClick,\r\n  ...rest\r\n}) => {\r\n  const [anchorEl, setAnchorEl] = useState<any>(null);\r\n\r\n  return (\r\n    <>\r\n      <Popover\r\n        open={open != null ? open : Boolean(anchorEl)}\r\n        {...rest}\r\n        anchorEl={anchorEl}\r\n        onClose={onClose ? onClose : () => setAnchorEl(null)}\r\n        classes={{ paper: \"shadow-3-3-12-10 border rounded\" }}\r\n        anchorOrigin={\r\n          anchorOrigin || {\r\n            vertical: \"top\",\r\n            horizontal: \"center\",\r\n          }\r\n        }\r\n        transformOrigin={\r\n          transformOrigin || {\r\n            vertical: \"top\",\r\n            horizontal: \"center\",\r\n          }\r\n        }\r\n      >\r\n        <div\r\n          onClick={closeOnContentClick ? (onClose ? onClose : () => setAnchorEl(null)) : undefined}\r\n        >\r\n          {content}\r\n        </div>\r\n      </Popover>\r\n      <div onClick={(e) => setAnchorEl(e.currentTarget)}>{rest.children}</div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PopoverWrapper;\r\n","import Popover from \"components/Popover\";\r\nimport { SketchPicker } from \"react-color\";\r\n\r\ninterface ColorPickerProps\r\n  extends React.DetailedHTMLProps<React.HTMLAttributes<HTMLDivElement>, HTMLDivElement> {\r\n  value: string;\r\n  onValue: (val: string) => void;\r\n}\r\n\r\nconst ColorPicker: React.FC<ColorPickerProps> = ({ value, onValue, ...rest }) => {\r\n  return (\r\n    <Popover\r\n      content={\r\n        <SketchPicker\r\n          color={value}\r\n          onChange={(color, event) => {\r\n            onValue(color.hex);\r\n          }}\r\n        ></SketchPicker>\r\n      }\r\n      anchorOrigin={{\r\n        vertical: \"bottom\",\r\n        horizontal: \"center\",\r\n      }}\r\n    >\r\n      <div {...rest}></div>\r\n    </Popover>\r\n  );\r\n};\r\n\r\nexport default ColorPicker;\r\n","import Button from \"components/Button\";\r\nimport ColorPicker from \"components/ColorPicker\";\r\nimport { TasksManager } from \"facades/TasksManager\";\r\nimport { useEffect } from \"react\";\r\n\r\nexport interface ColorsItem {\r\n  value: string[];\r\n}\r\n\r\ninterface ColorsProps {\r\n  value: string[];\r\n  onValue: (newVal: string[]) => void;\r\n}\r\n\r\nexport const COLORS_AMOUNT = 5;\r\n\r\nconst Colors: React.FC<ColorsProps> = ({ value, onValue }) => {\r\n  let defaultColors = [\r\n    \"#091717\",\r\n    \"#122122\",\r\n    \"#112929\",\r\n    \"#23f3f3\",\r\n    \"#4C9394\",\r\n    \"#173434\",\r\n    \"#091717\",\r\n    \"#112929\",\r\n    \"#1dcccc\",\r\n    \"#3B7677\",\r\n  ];\r\n\r\n  let mainColors =\r\n    value.length === COLORS_AMOUNT * 2\r\n      ? value.slice(0, COLORS_AMOUNT)\r\n      : defaultColors.slice(0, COLORS_AMOUNT);\r\n  let hoverColors =\r\n    value.length === COLORS_AMOUNT * 2\r\n      ? value.slice(COLORS_AMOUNT, COLORS_AMOUNT * 2)\r\n      : defaultColors.slice(COLORS_AMOUNT, COLORS_AMOUNT * 2);\r\n\r\n  let packs = [\r\n    { label: \"Main\", colors: mainColors },\r\n    { label: \"Hover\", colors: hoverColors },\r\n  ];\r\n\r\n  useEffect(() => {\r\n    TasksManager.setColors(value);\r\n  }, [value]);\r\n\r\n  return (\r\n    <div className=\"text-white\">\r\n      <div className=\"flex justify-between mb-2\">\r\n        <div className=\"leading-none\">Colors</div>\r\n        <Button\r\n          onClick={() => onValue([])}\r\n          className=\"h-5 px-2 bg-fireck-4 hover:bg-fireck-4-hover text-black min-w-unset text-xs\"\r\n        >\r\n          Reset\r\n        </Button>\r\n      </div>\r\n\r\n      <div>\r\n        {packs.map((x, pi) => (\r\n          <>\r\n            <div className=\"text-xs mb-0.5\">{x.label}</div>\r\n            <div className=\"flex\">\r\n              {x.colors.map((c, i) => (\r\n                <div key={`color-${i}-pack-${pi}`} className=\"mr-2\">\r\n                  <ColorPicker\r\n                    value={c}\r\n                    onValue={(val) => {\r\n                      let arr =\r\n                        value.length === COLORS_AMOUNT * 2 ? [...value] : [...defaultColors];\r\n                      arr[pi * COLORS_AMOUNT + i] = val;\r\n                      onValue(arr);\r\n                    }}\r\n                    className=\" w-11 h-11 rounded relative cursor-pointer flex mb-2\"\r\n                    style={{ backgroundColor: c }}\r\n                  ></ColorPicker>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Colors;\r\n","import Logo from \"assets/logo.svg\";\r\nimport Button from \"components/Button\";\r\nimport { useSelector } from \"react-redux\";\r\nimport store, { RootState } from \"store\";\r\nimport PageTitle from \"components/PageTitle\";\r\nimport LogoItem from \"./Logo\";\r\nimport Colors from \"./Colors\";\r\nimport { updateDocument } from \"api/collections\";\r\n\r\nexport interface AppearanceProps {}\r\n\r\nexport interface ApperanceItem {\r\n  id: string;\r\n  name: string;\r\n  value: any;\r\n  docId: string;\r\n}\r\n\r\nconst COLLECTION_ID = \"AppearanceReservedCollection\";\r\n\r\nconst Appearance: React.FC<AppearanceProps> = () => {\r\n  const appearance = useSelector((state: RootState) => state.appearance);\r\n\r\n  const setItemValue = (val: any, index: number) => {\r\n    let arr = [...appearance.items];\r\n    arr[index].value = val;\r\n    store.dispatch({ type: \"SET_APPEARANCE\", payload: arr });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"flex flex-wrap justify-between mb-8\">\r\n        <PageTitle className=\"mb-4 mr-3\">Appearance</PageTitle>\r\n        <Button\r\n          onClick={() => {\r\n            appearance.items.forEach((x) => {\r\n              updateDocument(COLLECTION_ID, x.docId, x);\r\n            });\r\n            store.dispatch({ type: \"SET_APPEARANCE_SAVED\" });\r\n          }}\r\n          disabled={appearance.saved}\r\n          className={`h-34px ${\r\n            !appearance.saved\r\n              ? \"bg-fireck-4 hover:bg-fireck-4-hover\"\r\n              : \"bg-gray-300 text-gray-500 cursor-default\"\r\n          }  mb-4`}\r\n        >\r\n          {!appearance.saved ? \"Save\" : \"Saved!\"}\r\n        </Button>\r\n      </div>\r\n      <div className=\"flex flex-wrap\">\r\n        {appearance.items.map((x, i) => (\r\n          <div key={`appearance-item-${x.id}`} className=\"mb-7 mr-7\">\r\n            {x.id === \"logo\" ? (\r\n              <LogoItem\r\n                value={x.value || Logo}\r\n                onValue={(val) => {\r\n                  setItemValue(val, i);\r\n                }}\r\n              ></LogoItem>\r\n            ) : x.id === \"colors\" ? (\r\n              <Colors\r\n                value={x.value}\r\n                onValue={(val) => {\r\n                  setItemValue(val, i);\r\n                }}\r\n              ></Colors>\r\n            ) : null}\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Appearance;\r\n","import ReactDOM from \"react-dom\";\r\nimport React from \"react\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"store\";\r\nimport NotificationsProvider from \"components/NotificationsProvider\";\r\n\r\nexport interface CallableComponent<T> {\r\n  proceed: (v: T) => void;\r\n}\r\n\r\ninterface callComponentArgs<T> {\r\n  Component: React.FC<any>;\r\n  props: Omit<T, \"proceed\">;\r\n}\r\n\r\nexport function callComponent<T, RT>({ Component, props }: callComponentArgs<T>): Promise<RT> {\r\n  return new Promise((resolve, reject) => {\r\n    const wrapper = document.getElementById(\"root\")?.appendChild(document.createElement(\"div\"));\r\n\r\n    if (wrapper) {\r\n      ReactDOM.render(\r\n        <Provider store={store}>\r\n          <NotificationsProvider>\r\n            <Component\r\n              {...props}\r\n              proceed={(val: RT) => {\r\n                ReactDOM.unmountComponentAtNode(wrapper);\r\n                wrapper.parentNode?.removeChild(wrapper);\r\n                resolve(val);\r\n              }}\r\n            />\r\n          </NotificationsProvider>\r\n        </Provider>,\r\n        wrapper\r\n      );\r\n    }\r\n  });\r\n}\r\n","import { IoAlertCircleOutline } from \"react-icons/io5\";\r\nimport Tooltip from \"@mui/material/Tooltip\";\r\nimport React, { SelectHTMLAttributes } from \"react\";\r\nimport classNames from \"classnames\";\r\n\r\nconst WarningIcon = React.forwardRef(function MyComponent(props: any, ref: any) {\r\n  return (\r\n    <div {...props} ref={ref}>\r\n      <IoAlertCircleOutline className=\"text-red-FF0000\" size={20}></IoAlertCircleOutline>\r\n    </div>\r\n  );\r\n});\r\n\r\nexport interface SelectProps extends SelectHTMLAttributes<HTMLSelectElement> {\r\n  className?: string;\r\n  options: { label: string; value: string | number }[];\r\n  error?: string | boolean;\r\n  groundColor: \"white\" | \"black\";\r\n}\r\n\r\nconst Select: React.FC<SelectProps> = ({\r\n  className = \"\",\r\n  options,\r\n  error,\r\n  groundColor,\r\n  ...props\r\n}) => {\r\n  return (\r\n    <div className={`${className} relative flex items-center`}>\r\n      <select\r\n        className={classNames(\"px-3 h-full border-2 border-solid w-full rounded outline-none\", {\r\n          \"border-red-FF0000\": error,\r\n          \"focus:border-fireck-4\": !error,\r\n          \"border-gray-300 bg-gray-300\": groundColor === \"white\",\r\n          \"border-white bg-white\": groundColor === \"black\",\r\n        })}\r\n        {...props}\r\n        spellCheck={false}\r\n      >\r\n        {options.map((x, i) => (\r\n          <option data-testid={`select-option-${x.value}`} key={\"opt-\" + i} value={x.value}>\r\n            {x.label}\r\n          </option>\r\n        ))}\r\n      </select>\r\n      {error ? (\r\n        <Tooltip title={error} placement=\"top\">\r\n          <WarningIcon className=\"absolute right-2 my-auto w-auto\"></WarningIcon>\r\n        </Tooltip>\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Select;\r\n","import { useNotify } from \"components/NotificationsProvider\";\r\nimport { FilterType } from \"components/TableElements/CollectionTable\";\r\nimport { createIndex } from \"components/TableElements/CreateIndex\";\r\nimport { useEffect, useCallback } from \"react\";\r\nimport { Document, GetCollectionOptions } from \"utils/interfaces\";\r\nimport CollectionsManager from \"facades/CollectionsManager\";\r\nimport { useInfiniteQuery } from \"react-query\";\r\n\r\ninterface UseFetchProps {\r\n  collectionId: string;\r\n  filters?: FilterType[];\r\n  orderBy?: { fieldId: string; direction: \"asc\" | \"desc\" };\r\n  inView: boolean;\r\n}\r\n\r\nconst useFetch = ({ collectionId, filters = [], orderBy, inView }: UseFetchProps) => {\r\n  const notify = useNotify();\r\n\r\n  const getOptions = useCallback(() => {\r\n    let options: GetCollectionOptions = { collectionId };\r\n\r\n    options.where = \"\";\r\n    options.orderBy = \"\";\r\n\r\n    filters.forEach((f, i) => {\r\n      options.where += (i > 0 ? \";\" : \"\") + f.fieldId + \",\" + f.operator + \",\" + f.value;\r\n      if (orderBy && orderBy.fieldId !== f.fieldId) {\r\n        options.orderBy += (options.orderBy ? \";\" : \"\") + f.fieldId;\r\n      }\r\n    });\r\n\r\n    if (orderBy) {\r\n      options.orderBy += (options.orderBy ? \";\" : \"\") + `${orderBy.fieldId},${orderBy.direction}`;\r\n    }\r\n    if (!orderBy && !filters.length) {\r\n      options.orderBy = \"createdAt,asc\";\r\n    }\r\n\r\n    options.populateRef = false;\r\n\r\n    return options;\r\n  }, [orderBy, filters, collectionId]);\r\n\r\n  const { data, error, fetchNextPage, hasNextPage } = useInfiniteQuery<Document[]>(\r\n    [collectionId, orderBy, filters],\r\n    ({ pageParam }) => {\r\n      return CollectionsManager.getCollection({ ...getOptions(), startAfter: pageParam });\r\n    },\r\n    {\r\n      keepPreviousData: true,\r\n      getNextPageParam: (lastPage, pages) => {\r\n        let lastDoc = lastPage?.length && lastPage.length === 10 ? lastPage[9] : null;\r\n        return lastDoc ? lastDoc[orderBy ? orderBy.fieldId : \"createdAt\"] : undefined;\r\n      },\r\n    }\r\n  );\r\n\r\n  const onError = (message: string) => {\r\n    if (message.includes(\"FAILED_PRECONDITION\")) {\r\n      createIndex(message.split(\"it here:\")[1]);\r\n    } else {\r\n      notify(message, { variant: \"error\" });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (inView && hasNextPage) {\r\n      fetchNextPage();\r\n    }\r\n  }, [inView, fetchNextPage, hasNextPage]);\r\n\r\n  return { docs: data?.pages.reduce((a, b) => [...a, ...b], []) || [] };\r\n};\r\n\r\nexport default useFetch;\r\n","import { Document } from \"utils/interfaces\";\r\nimport { CollectionType, AnyField } from \"api/collectionTypes\";\r\nimport FilesCell from \"./FilesCell\";\r\nimport React, { useEffect } from \"react\";\r\nimport ExpandMoreRounded from \"@mui/icons-material/ExpandMoreRounded\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { confirm } from \"components/Confirm\";\r\nimport AddFilter from \"./AddFilter\";\r\nimport Button from \"components/Button\";\r\nimport SimpleBar from \"simplebar-react\";\r\nimport classNames from \"classnames\";\r\nimport useFetch from \"hooks/useFetch\";\r\nimport { InView } from \"react-intersection-observer\";\r\nimport Checkbox from \"@mui/material/Checkbox\";\r\nimport moment from \"moment\";\r\nimport CollectionsManager from \"facades/CollectionsManager\";\r\n\r\nexport interface TableProps {\r\n  collectionType: CollectionType;\r\n  onPick?: (a: Document[]) => void;\r\n  blackList?: string[];\r\n  singleSelect?: boolean;\r\n  valueFormatters?: { [key: string]: (val: any) => any };\r\n  groundColor: \"white\" | \"black\";\r\n  filters?: FilterType[];\r\n  onEdit?: (doc: Document) => void;\r\n  hideFilters?: boolean;\r\n}\r\n\r\nexport type FilterType = { fieldId: string; operator: string; value: string; hidden?: boolean };\r\n\r\nconst Table: React.FC<TableProps> = ({\r\n  collectionType,\r\n  onPick,\r\n  blackList = [],\r\n  singleSelect = false,\r\n  valueFormatters,\r\n  groundColor,\r\n  filters: _filters = [],\r\n  onEdit: _onEdit,\r\n  hideFilters = false,\r\n}) => {\r\n  const history = useHistory();\r\n\r\n  const [filters, setFilters] = React.useState<FilterType[]>([]);\r\n  const fields = collectionType.fields.filter((field) => field.displayOnTable);\r\n  const [selected, setSelected] = React.useState<string[]>([]);\r\n  const [orderBy, setOrderBy] = React.useState<{ fieldId: string; direction: \"asc\" | \"desc\" }>();\r\n  const [endIsInView, setEndIsInView] = React.useState(false);\r\n\r\n  const { docs } = useFetch({\r\n    collectionId: collectionType.id,\r\n    filters,\r\n    orderBy,\r\n    inView: endIsInView,\r\n  });\r\n\r\n  const onDeleteSelected = async () => {\r\n    if (await confirm({ confirmation: `Delete ${selected.length} documents?` })) {\r\n      CollectionsManager.deleteMultipleDocuments(\r\n        collectionType.id,\r\n        docs.filter((x) => selected.includes(x.docId))\r\n      );\r\n\r\n      setSelected([]);\r\n    }\r\n  };\r\n\r\n  const onEdit =\r\n    _onEdit ||\r\n    ((doc: Document) => {\r\n      history.push(`/collections/${collectionType.id}/edit/${doc.docId}`);\r\n    });\r\n\r\n  const onOrder = (field: AnyField) =>\r\n    orderBy?.fieldId !== field.id\r\n      ? () => {\r\n          setOrderBy({ fieldId: field.id, direction: \"asc\" });\r\n        }\r\n      : orderBy?.direction !== \"asc\"\r\n      ? () => setOrderBy(undefined)\r\n      : () => setOrderBy({ fieldId: field.id, direction: \"desc\" });\r\n\r\n  const selectAll = (select: boolean) => setSelected(select ? docs.map((x) => x.docId) : []);\r\n\r\n  const selectHandler = (docId: string, checked: boolean) => {\r\n    if (checked) {\r\n      if (singleSelect) {\r\n        setSelected([docId]);\r\n      } else {\r\n        setSelected((prev) => [...prev, docId]);\r\n      }\r\n\r\n      return;\r\n    }\r\n    setSelected((prev) => {\r\n      let arr = [...prev];\r\n      let index = arr.findIndex((x) => x === docId);\r\n      if (index != null) {\r\n        arr.splice(index, 1);\r\n      }\r\n      return arr;\r\n    });\r\n  };\r\n\r\n  const formatValue = (field: AnyField, value: any) => {\r\n    return field.type === \"date\"\r\n      ? moment(value).format(\"YYYY-MM-DD HH:mm\")\r\n      : valueFormatters && field.id in valueFormatters\r\n      ? valueFormatters[field.id](value)\r\n      : value.toString().substring(0, 40);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (_filters.length) {\r\n      setFilters((prev) => [...prev, ..._filters]);\r\n    }\r\n  }, [_filters]);\r\n\r\n  return (\r\n    <div className=\"h-full w-full flex-col flex\">\r\n      <div className=\"flex justify-between mb-3\">\r\n        {hideFilters ? null : (\r\n          <div className=\"flex flex-wrap\">\r\n            <AddFilter\r\n              collectionType={collectionType}\r\n              onValue={(val: FilterType) => setFilters((prev) => [val, ...prev])}\r\n            ></AddFilter>\r\n            {filters.map((f, i) =>\r\n              f.hidden ? null : (\r\n                <div\r\n                  key={`f-${i}`}\r\n                  className={classNames(\r\n                    \"rounded min-h-28px border leading-28px pl-3 text-sm pr-3 flex mr-3 mb-3 relative\",\r\n                    { \"text-white border-white\": groundColor === \"black\" },\r\n                    { \"text-black border-black\": groundColor === \"white\" }\r\n                  )}\r\n                >\r\n                  {f.fieldId} {f.operator} {f.value}{\" \"}\r\n                  <span\r\n                    onClick={() =>\r\n                      setFilters((prev) => {\r\n                        let arr = [...prev];\r\n                        arr.splice(i, 1);\r\n                        return arr;\r\n                      })\r\n                    }\r\n                    className=\"text-xs leading-28px ml-3 cursor-pointer\"\r\n                  >\r\n                    ✕\r\n                  </span>\r\n                </div>\r\n              )\r\n            )}\r\n          </div>\r\n        )}\r\n\r\n        {!onPick ? (\r\n          <Button\r\n            onClick={onDeleteSelected}\r\n            disabled={selected.length === 0}\r\n            className={`px-7 mb-3 min-w-unset rounded h-28px ${\r\n              selected.length === 0\r\n                ? \"bg-gray-E1E1E1 text-gray-6C6C6C cursor-default\"\r\n                : \"bg-red-FF0000 hover:bg-red-FF0000-hover text-white\"\r\n            } `}\r\n          >\r\n            Delete\r\n          </Button>\r\n        ) : (\r\n          <Button\r\n            onClick={() => onPick(docs.filter((x) => selected.includes(x.docId)))}\r\n            className={`h-28px min-w-unset rounded mb-3 px-7 ${\r\n              selected.length === 0\r\n                ? \"bg-gray-300 text-gray-500 cursor-default\"\r\n                : \"bg-fireck-4 hover:bg-fireck-4-hover\"\r\n            } `}\r\n          >\r\n            Select\r\n          </Button>\r\n        )}\r\n      </div>\r\n      <div\r\n        className={classNames(\"flex-grow h-0 -mt-3 rounded overflow-hidden bg-white\", {\r\n          \"shadow-border-gray\": groundColor === \"white\",\r\n        })}\r\n      >\r\n        <SimpleBar className={\"relative scrollbar-light h-full\"} autoHide={false}>\r\n          <table className=\"w-full text-center\">\r\n            <thead>\r\n              <tr className=\"whitespace-nowrap\">\r\n                <th className=\"sticky top-0 bg-gray-E1E1E1 z-10 px-1\">\r\n                  {singleSelect ? null : (\r\n                    <Checkbox\r\n                      size=\"small\"\r\n                      classes={{ checked: \"text-fireck-1\", root: \"p-0\" }}\r\n                      checked={selected.length === docs.length}\r\n                      onChange={(e) => selectAll(e.target.checked)}\r\n                    ></Checkbox>\r\n                  )}\r\n                </th>\r\n                {fields.map((field, i) => (\r\n                  <th className=\"font-semibold sticky top-0 bg-gray-E1E1E1\" key={`th-${i}`}>\r\n                    <div className=\"flex items-center justify-center\">\r\n                      <div className=\"w-5\"></div>\r\n                      <div className=\"cursor-pointer select-none\" onClick={onOrder(field)}>\r\n                        {field.id}\r\n                      </div>\r\n                      <div className=\"w-5\">\r\n                        {orderBy?.fieldId === field.id ? (\r\n                          <ExpandMoreRounded\r\n                            fontSize=\"small\"\r\n                            className={`${\r\n                              orderBy?.direction === \"asc\" ? \"transform rotate-180\" : \"\"\r\n                            }`}\r\n                          ></ExpandMoreRounded>\r\n                        ) : null}\r\n                      </div>\r\n                    </div>\r\n                  </th>\r\n                ))}\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {docs.map((doc, i) =>\r\n                blackList.includes(doc.docId) ? null : (\r\n                  <tr\r\n                    onClick={() =>\r\n                      onPick ? selectHandler(doc.docId, !selected.includes(doc.docId)) : onEdit(doc)\r\n                    }\r\n                    key={`row-${i}`}\r\n                    className={\"cursor-pointer hover:bg-fireck-4\"}\r\n                  >\r\n                    <td className=\"px-1\" onClick={(e) => e.stopPropagation()}>\r\n                      <Checkbox\r\n                        size=\"small\"\r\n                        classes={{ checked: \"text-fireck-1\", root: \"p-0\" }}\r\n                        checked={selected.includes(doc.docId)}\r\n                        onChange={(e) => selectHandler(doc.docId, e.target.checked)}\r\n                      ></Checkbox>\r\n                    </td>\r\n                    {fields.map((field, j) => (\r\n                      <td key={`row-${i}-col-${j}`} className=\"px-2\">\r\n                        {doc[field.id] != null ? (\r\n                          field.type === \"media\" ? (\r\n                            field.mediaSingle ? (\r\n                              <FilesCell file={doc[field.id]}></FilesCell>\r\n                            ) : (\r\n                              <FilesCell files={doc[field.id]} />\r\n                            )\r\n                          ) : (\r\n                            <div className=\"whitespace-nowrap\">\r\n                              {formatValue(field, doc[field.id])}\r\n                            </div>\r\n                          )\r\n                        ) : null}\r\n                      </td>\r\n                    ))}\r\n                  </tr>\r\n                )\r\n              )}\r\n              <tr>\r\n                <td colSpan={fields.length + 1}>\r\n                  <InView\r\n                    onChange={async (inView) => {\r\n                      setEndIsInView(inView);\r\n                    }}\r\n                  >\r\n                    <div className=\"w-full\"></div>\r\n                  </InView>\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n\r\n          <div></div>\r\n        </SimpleBar>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Table;\r\n","import React from \"react\";\r\nimport ErrorRounded from \"@mui/icons-material/ErrorRounded\";\r\nimport Tooltip from \"@mui/material/Tooltip\";\r\nimport classNames from \"classnames\";\r\n\r\nexport interface LabelProps {\r\n  error?: string | undefined | null;\r\n  className?: string;\r\n  children: any;\r\n  groundColor: \"black\" | \"white\";\r\n}\r\n\r\nconst WarningIcon = React.forwardRef(function MyComponent(props: any, ref: any) {\r\n  return (\r\n    <div {...props} ref={ref}>\r\n      <ErrorRounded className=\"text-red-500 text-xl\" fontSize=\"inherit\"></ErrorRounded>\r\n    </div>\r\n  );\r\n});\r\n\r\nconst Label: React.FC<LabelProps> = ({ className = \"\", children, error, groundColor }) => {\r\n  return (\r\n    <div\r\n      className={classNames(`flex justify-between relative ${className}`, {\r\n        \"text-white\": groundColor === \"black\",\r\n        \"text-black\": groundColor === \"white\",\r\n      })}\r\n    >\r\n      <div>{children}</div>\r\n      {error ? (\r\n        <Tooltip title={error} placement=\"top\">\r\n          <WarningIcon className=\"absolute right-2 my-auto w-auto\"></WarningIcon>\r\n        </Tooltip>\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Label;\r\n","import Modal from \"@mui/material/Modal\";\r\nimport Input from \"components/Input\";\r\nimport Select from \"components/Select\";\r\nimport Button from \"components/Button\";\r\nimport { CollectionType } from \"api/collectionTypes\";\r\nimport React from \"react\";\r\nimport { useFormik } from \"formik\";\r\nimport Label from \"components/Label\";\r\nimport CloseRounded from \"@mui/icons-material/CloseRounded\";\r\n\r\nexport interface AddFilterModalProps {\r\n  collectionType: Pick<CollectionType, \"fields\">;\r\n  onValue: Function;\r\n  groundColor?: \"black\" | \"white\";\r\n}\r\n\r\nconst AddFilterModal: React.FC<AddFilterModalProps> = ({\r\n  collectionType,\r\n  onValue,\r\n  groundColor = \"white\",\r\n}) => {\r\n  const operators = [\r\n    \"<\",\r\n    \"<=\",\r\n    \"==\",\r\n    \">\",\r\n    \">=\",\r\n    \"!=\",\r\n    \"array-contains\",\r\n    \"array-contains-any\",\r\n    \"in\",\r\n    \"not-in\",\r\n  ];\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const { values, errors, handleChange, submitCount, handleSubmit, isSubmitting } = useFormik({\r\n    onSubmit: async (vals, { resetForm }) => {\r\n      onValue(vals);\r\n      setOpen(false);\r\n      resetForm();\r\n    },\r\n    initialValues: {\r\n      value: \"\",\r\n      operator: \"\",\r\n      fieldId: \"\",\r\n    },\r\n    validate: (vals: any) => {\r\n      let errors: any = {};\r\n      Object.keys(vals).forEach((x) => {\r\n        if (!vals[x]) {\r\n          errors[x] = \"Required\";\r\n        }\r\n      });\r\n      return errors;\r\n    },\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <Button\r\n        onClick={() => setOpen(true)}\r\n        className=\"bg-fireck-4 hover:bg-fireck-4-hover min-w-unset flex items-center justify-center h-28px px-7 rounded text-sm mr-3 mb-3\"\r\n      >\r\n        Filters\r\n      </Button>\r\n      {!open ? null : (\r\n        <Modal open={open}>\r\n          <div\r\n            className=\"fixed left-0 top-0 w-full h-full flex p-7\"\r\n            onMouseDown={() => setOpen(false)}\r\n          >\r\n            <div\r\n              onMouseDown={(e) => e.stopPropagation()}\r\n              className=\"bg-white rounded p-7 m-auto relative animate-littlemoveup\"\r\n              style={{ maxWidth: 600 }}\r\n            >\r\n              <CloseRounded\r\n                className=\"absolute top-0 right-0 cursor-pointer\"\r\n                onClick={() => setOpen(false)}\r\n              ></CloseRounded>\r\n              <div className=\"flex flex-wrap -mx-2 mb-4\">\r\n                <div className=\"sm:w-1/3 w-full mb-3 px-2\">\r\n                  <Label\r\n                    groundColor={groundColor}\r\n                    className=\"mb-2\"\r\n                    error={submitCount > 0 ? errors.fieldId : null}\r\n                  >\r\n                    Field\r\n                  </Label>\r\n                  <Select\r\n                    className=\"h-34px\"\r\n                    groundColor=\"white\"\r\n                    name=\"fieldId\"\r\n                    onChange={handleChange}\r\n                    value={values.fieldId}\r\n                    options={[\r\n                      { value: \"\", label: \"Select\" },\r\n                      ...collectionType.fields.map((x) => ({ value: x.id, label: x.id })),\r\n                    ]}\r\n                  ></Select>\r\n                </div>\r\n                <div className=\"sm:w-1/3 w-full mb-3 px-2\">\r\n                  <Label\r\n                    groundColor={groundColor}\r\n                    className=\"mb-2\"\r\n                    error={submitCount > 0 ? errors.operator : null}\r\n                  >\r\n                    Operator\r\n                  </Label>\r\n                  <Select\r\n                    className=\"h-34px\"\r\n                    groundColor=\"white\"\r\n                    name=\"operator\"\r\n                    onChange={handleChange}\r\n                    value={values.operator}\r\n                    options={[\r\n                      { value: \"\", label: \"Select\" },\r\n                      ...operators.map((x) => ({ value: x, label: x })),\r\n                    ]}\r\n                  ></Select>\r\n                </div>\r\n                <div className=\"sm:w-1/3 w-full mb-3 px-2\">\r\n                  <Label\r\n                    groundColor={groundColor}\r\n                    className=\"mb-2 text-black\"\r\n                    error={submitCount > 0 ? errors.value : null}\r\n                  >\r\n                    Value\r\n                  </Label>\r\n                  <Input\r\n                    onKeyDown={(e) => {\r\n                      if (e.key === \"Enter\") {\r\n                        e.preventDefault();\r\n                        handleSubmit();\r\n                      }\r\n                    }}\r\n                    groundColor=\"white\"\r\n                    placeholder={\r\n                      [\"in\", \"not in\", \"array-contains-any\"].includes(values.operator)\r\n                        ? \"value, value, value\"\r\n                        : \"value\"\r\n                    }\r\n                    className=\"placeholder-black h-34px\"\r\n                    value={values.value}\r\n                    onChange={handleChange}\r\n                    name=\"value\"\r\n                  ></Input>\r\n                </div>\r\n              </div>\r\n              <div className=\"flex justify-end\">\r\n                <Button\r\n                  disabled={isSubmitting}\r\n                  onClick={() => handleSubmit()}\r\n                  className=\"bg-fireck-4 hover:bg-fireck-4-hover h-34px\"\r\n                >\r\n                  Add\r\n                </Button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Modal>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AddFilterModal;\r\n","import { forwardRef } from \"react\";\r\n\r\nconst TooltipChild = forwardRef(function MyComponent(props: any, ref: any) {\r\n  return <div {...props} ref={ref}></div>;\r\n});\r\n\r\nexport default TooltipChild;\r\n","import TooltipChild from \"components/TooltipChild\";\r\nimport Tooltip from \"@mui/material/Tooltip\";\r\n\r\ninterface MediaFieldProps {\r\n  src: string;\r\n}\r\n\r\nconst MediaField: React.FC<MediaFieldProps> = ({ src }) => {\r\n  return (\r\n    <Tooltip\r\n      arrow\r\n      title={\r\n        <div className=\"p-1\">\r\n          <img src={src} className=\"max-w-136px max-h-136px w-auto h-auto\" alt=\"\" />\r\n        </div>\r\n      }\r\n      placement=\"top\"\r\n      classes={{\r\n        tooltip: \"font-poppins text-xs p-0 rounded bg-fireck-1\",\r\n        arrow: \"text-fireck-1\",\r\n      }}\r\n    >\r\n      <TooltipChild>\r\n        <div className=\"group w-4 h-4 relative flex items-center justify-center rounded hover:bg-gray-535371 hover:bg-opacity-5 cursor-pointer\">\r\n          <div\r\n            className=\"relative w-4 h-4 rounded-full bg-center bg-cover pointer-events-none\"\r\n            style={{ backgroundImage: `url(${src})` }}\r\n          ></div>\r\n        </div>\r\n      </TooltipChild>\r\n    </Tooltip>\r\n  );\r\n};\r\n\r\nexport default MediaField;\r\n","import React from \"react\";\r\nimport MediaField from \"./MediaField\";\r\n\r\nexport interface FilesProps {\r\n  files?: string[];\r\n  file?: string;\r\n}\r\n\r\nconst Files: React.FC<FilesProps> = ({ files, file }) => {\r\n  const id = React.useRef<number>(Math.random());\r\n\r\n  return (\r\n    <div className=\"flex justify-center\">\r\n      {(files ? files : file ? [file] : []).slice(0, 4).map((f, i) => (\r\n        <div key={`${id}-file-${i}`} className=\"mr-0.5\">\r\n          <MediaField src={f}></MediaField>\r\n        </div>\r\n      ))}\r\n      {files && files.length > 4 ? (\r\n        <div className=\"relative\">\r\n          <div className=\"w-4 h-4 rounded-full bg-fireck-4 text-10px flex items-center justify-center\">\r\n            {files.length - 4}+\r\n          </div>\r\n        </div>\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Files;\r\n","import mime from \"mime-types\";\r\n\r\nexport function formatBytes(a: number, b = 2) {\r\n  if (0 === a) return \"0 Bytes\";\r\n  const c = 0 > b ? 0 : b,\r\n    d = Math.floor(Math.log(a) / Math.log(1024));\r\n  return (\r\n    parseFloat((a / Math.pow(1024, d)).toFixed(c)) +\r\n    \" \" +\r\n    [\"Bytes\", \"KB\", \"MB\", \"GB\", \"TB\", \"PB\", \"EB\", \"ZB\", \"YB\"][d]\r\n  );\r\n}\r\n\r\nexport function getFileExtension(file: File): string {\r\n  try {\r\n    return mime.extension(file.type) || file.name.split(\".\").pop() || \"unknown\";\r\n  } catch (er) {\r\n    return \"unknown\";\r\n  }\r\n}\r\n","import classNames from \"classnames\";\r\n\r\nexport interface PageTitleProps\r\n  extends React.DetailedHTMLProps<React.HTMLAttributes<HTMLDivElement>, HTMLDivElement> {}\r\n\r\nconst PageTitle: React.FC<PageTitleProps> = ({ className, ...rest }) => {\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={classNames(\"text-27px text-white font-medium capitalize leading-none\", className)}\r\n    ></div>\r\n  );\r\n};\r\n\r\nexport default PageTitle;\r\n","import ButtonBase from \"@mui/material/ButtonBase\";\r\nimport React from \"react\";\r\nimport { uploadFile } from \"api/files\";\r\nimport Button from \"components/Button\";\r\nimport AddRounded from \"@mui/icons-material/AddRounded\";\r\nimport ExpandLessRounded from \"@mui/icons-material/ExpandLessRounded\";\r\nimport { InView } from \"react-intersection-observer\";\r\nimport { callComponent } from \"api/callComponent\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { RootState } from \"store\";\r\nimport CollectionTable from \"components/TableElements/CollectionTable\";\r\nimport { MediaDocumentFormatters } from \".\";\r\nimport CloseRounded from \"@mui/icons-material/CloseRounded\";\r\n\r\nexport interface SelectMediaProps {\r\n  multiple?: boolean;\r\n  proceed: Function;\r\n}\r\n\r\nconst SelectMedia: React.FC<SelectMediaProps> = ({ multiple = false, proceed }) => {\r\n  const uploadRef = React.useRef(null as any);\r\n  const topRef = React.useRef(null as any);\r\n  const [loading, setLoading] = React.useState<boolean | string>(false);\r\n  const [isTopVisible, setIsTopVisible] = React.useState(false);\r\n  const [refreshCounter, setCounter] = React.useState(0);\r\n\r\n  const { collectionType } = useSelector((state: RootState) => {\r\n    return {\r\n      collectionType: state.collectionTypes.find((x) => x.id === \"FilesReservedCollection\"),\r\n    };\r\n  });\r\n\r\n  return (\r\n    <div className=\"fixed z-30 left-0 top-0 w-full h-full flex overflow-auto bg-black bg-opacity-40\">\r\n      <div className=\"m-auto p-8 rounded bg-white max-w-846px w-full max-h-552px h-full relative flex-col flex animate-littlemoveup\">\r\n        {!isTopVisible ? (\r\n          <ButtonBase\r\n            className=\"z-30 absolute shadow-2xl outline-none right-6 bottom-3 w-34px h-34px rounded flex cursor-pointer text-black bg-orange-300 hover:bg-orange-301 items-center justify-center\"\r\n            onClick={() => topRef.current.scrollIntoView({ behavior: \"smooth\" })}\r\n          >\r\n            <ExpandLessRounded></ExpandLessRounded>\r\n          </ButtonBase>\r\n        ) : null}\r\n        <CloseRounded\r\n          className=\"absolute top-0 right-0 cursor-pointer\"\r\n          onClick={() => proceed(false)}\r\n        ></CloseRounded>\r\n        <InView onChange={(inView) => setIsTopVisible(inView)}>\r\n          <div ref={topRef}></div>\r\n        </InView>\r\n        <div className=\"flex justify-between flex-wrap mb-7\">\r\n          <div className=\"font-medium text-2xl leading-none mb-4 mr-4\">Select file</div>\r\n          <input\r\n            type=\"file\"\r\n            multiple\r\n            className=\"hidden\"\r\n            ref={uploadRef}\r\n            onChange={async (e) => {\r\n              const files = e.target.files;\r\n              if (files && files.length) {\r\n                setLoading(`Uploading ${files.length} file${files.length > 1 ? \"s\" : \"\"}...`);\r\n                let uploaded = 0;\r\n                for (let file of files) {\r\n                  const res = await uploadFile(file);\r\n                  uploaded++;\r\n\r\n                  setLoading(`${uploaded}/${files.length} uploaded.`);\r\n                }\r\n                setCounter((prev) => prev + 1);\r\n                setLoading(false);\r\n              }\r\n            }}\r\n          />\r\n          <Button\r\n            onClick={() => uploadRef.current.click()}\r\n            className=\"bg-fireck-4 hover:bg-fireck-4-hover h-28px mb-4 min-w-unset\"\r\n          >\r\n            <div className=\"flex items-center\">\r\n              <AddRounded className=\"mr-2 text-lg\" fontSize=\"inherit\"></AddRounded>\r\n              <span>Upload</span>\r\n            </div>\r\n          </Button>\r\n        </div>\r\n        <div className=\"flex-grow h-0\">\r\n          {!collectionType ? null : (\r\n            <CollectionTable\r\n              groundColor=\"white\"\r\n              key={`media-table-${refreshCounter}`}\r\n              onPick={(files) => {\r\n                proceed(multiple ? files.map((f) => f.url) : files[0].url);\r\n              }}\r\n              singleSelect={!multiple}\r\n              collectionType={collectionType}\r\n              valueFormatters={MediaDocumentFormatters}\r\n            ></CollectionTable>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SelectMedia;\r\n\r\nexport const callMedia = (multiple = false) => {\r\n  return callComponent<SelectMediaProps, string | boolean>({\r\n    Component: SelectMedia,\r\n    props: { multiple },\r\n  });\r\n};\r\n","import {\r\n  deleteObject,\r\n  getDownloadURL,\r\n  getStorage,\r\n  ref,\r\n  uploadBytesResumable,\r\n} from \"firebase/storage\";\r\nimport shortuuid from \"short-uuid\";\r\n\r\nclass FilesManagerClass {\r\n  upload(file: File): Promise<{ downloadUrl: string; fileName: string } | { error: string }> {\r\n    return new Promise((resolve) => {\r\n      try {\r\n        const storage = getStorage();\r\n        const nameParts = file.name.split(\".\");\r\n        const fileName = shortuuid.generate() + \".\" + nameParts[nameParts.length - 1];\r\n        let fileRef = ref(storage, fileName);\r\n\r\n        const uploadTask = uploadBytesResumable(fileRef, file);\r\n        uploadTask.on(\r\n          \"state_changed\",\r\n          (snapshot) => {},\r\n          (error) => {\r\n            resolve({ error: error.name });\r\n          },\r\n          () => {\r\n            getDownloadURL(uploadTask.snapshot.ref).then((downloadUrl) => {\r\n              resolve({ downloadUrl, fileName });\r\n            });\r\n          }\r\n        );\r\n      } catch (error: any) {\r\n        resolve({ error });\r\n      }\r\n    });\r\n  }\r\n\r\n  delete(path: string) {\r\n    const storage = getStorage();\r\n    deleteObject(ref(storage, path));\r\n  }\r\n}\r\n\r\nexport const FilesManager = new FilesManagerClass();\r\n","import { getFileExtension } from \"helper\";\r\nimport store from \"store\";\r\nimport { addDocument, deleteDocument, updateDocument } from \"./collections\";\r\nimport { FilesManager } from \"facades/FilesManager\";\r\n\r\nexport const uploadFile = async (file: File): Promise<{ error: string } | any> => {\r\n  try {\r\n    const res = await FilesManager.upload(file);\r\n\r\n    if (\"error\" in res) {\r\n      return res;\r\n    } else {\r\n      const fileDetails = {\r\n        name: file.name,\r\n        size: file.size,\r\n        url: res.downloadUrl,\r\n        storagePath: res.fileName,\r\n        type: getFileExtension(file),\r\n      };\r\n      return addDocument(\"FilesReservedCollection\", fileDetails);\r\n    }\r\n  } catch (error: any) {\r\n    return { error: error.toString() };\r\n  }\r\n};\r\n\r\nexport type FileDocument = {\r\n  docId: string;\r\n  name: string;\r\n  size: number;\r\n  storagePath: string;\r\n  createdAt: number;\r\n  url: string;\r\n};\r\n\r\nexport const getFiles = async ({\r\n  limit = 10,\r\n  orderBy,\r\n  startAt,\r\n  startAfter,\r\n}: {\r\n  limit?: number;\r\n  orderBy: string;\r\n  startAt?: string | number;\r\n  startAfter?: string | number;\r\n}): Promise<Array<FileDocument> | { error: string }> => {\r\n  try {\r\n    const user = store.getState().user;\r\n    const token = user ? user.token : null;\r\n    return fetch(\r\n      window.location.origin +\r\n        `/private/files?limit=${limit}${\r\n          startAt ? \"&startAt=\" + startAt : \"\"\r\n        }&orderBy=${orderBy},desc${startAfter ? `&startAfter=${startAfter}` : \"\"}`,\r\n      {\r\n        headers: { Authorization: \"Bearer \" + token },\r\n      }\r\n    ).then((x) => x.json());\r\n  } catch (error: any) {\r\n    return { error };\r\n  }\r\n};\r\n\r\nexport const getFilesCount = async () => {\r\n  try {\r\n    const user = store.getState().user;\r\n    const token = user ? user.token : null;\r\n    return fetch(window.location.origin + `/private/files/count`, {\r\n      headers: { Authorization: \"Bearer \" + token },\r\n    }).then((x) => x.json());\r\n  } catch (error) {\r\n    return { error };\r\n  }\r\n};\r\n\r\nexport const deleteFile = (docId: string, storagePath: string) => {\r\n  try {\r\n    FilesManager.delete(storagePath);\r\n    return deleteDocument(\"FilesReservedCollection\", docId);\r\n  } catch (error) {\r\n    return { error };\r\n  }\r\n};\r\n\r\nexport const editFile = (docId: string, updates: { [key: string]: any }) => {\r\n  try {\r\n    return updateDocument(\"FilesReservedCollection\", docId, updates);\r\n  } catch (error) {\r\n    return { error };\r\n  }\r\n};\r\n","import Button from \"components/Button\";\r\nimport React, { useState } from \"react\";\r\nimport { uploadFile } from \"api/files\";\r\nimport store, { RootState } from \"store\";\r\nimport { useNotify } from \"components/NotificationsProvider\";\r\nimport PageTitle from \"components/PageTitle\";\r\nimport CollectionTable from \"components/TableElements/CollectionTable\";\r\nimport { useSelector } from \"react-redux\";\r\nimport AddRounded from \"@material-ui/icons/AddRounded\";\r\nimport { formatBytes } from \"helper\";\r\n\r\nexport interface MediaProps {}\r\n\r\nexport const MediaDocumentFormatters = {\r\n  url: (value: string) => (\r\n    <div\r\n      onClick={(e) => {\r\n        e.stopPropagation();\r\n        window.open(value, \"_blank\");\r\n      }}\r\n      className=\"bg-center bg-cover h-10 w-10 mx-auto bg-gray-E1E1E1\"\r\n      style={{ backgroundImage: `url(${value})` }}\r\n    ></div>\r\n  ),\r\n  size: (value: number) => formatBytes(value),\r\n};\r\n\r\nconst Media: React.FC<MediaProps> = () => {\r\n  const uploadRef = React.useRef(null as any);\r\n  const notify = useNotify();\r\n  const [refreshCounter, setCounter] = useState(0);\r\n\r\n  const { collectionType } = useSelector((state: RootState) => {\r\n    return {\r\n      collectionType: state.collectionTypes.find((x) => x.id === \"FilesReservedCollection\"),\r\n    };\r\n  });\r\n\r\n  return (\r\n    <div className=\"h-full w-full flex flex-col\">\r\n      <div className=\"flex justify-between flex-wrap mb-3\">\r\n        <PageTitle className=\"mb-4 mr-4\">Media</PageTitle>\r\n        <input\r\n          key={`file-input-${refreshCounter}`}\r\n          type=\"file\"\r\n          multiple\r\n          className=\"hidden\"\r\n          ref={uploadRef}\r\n          onChange={async (e) => {\r\n            const files = e.target.files;\r\n\r\n            if (files && files.length) {\r\n              store.dispatch({\r\n                type: \"SET_LOADING\",\r\n                payload: `Uploading ${files.length} file${files.length > 1 ? \"s\" : \"\"}...`,\r\n              });\r\n              let uploaded = 0;\r\n              for (let file of files) {\r\n                const res = await uploadFile(file);\r\n                if (!(\"error\" in res)) {\r\n                  uploaded++;\r\n                  store.dispatch({\r\n                    type: \"SET_LOADING\",\r\n                    payload: `${uploaded}/${files.length} uploaded.`,\r\n                  });\r\n                } else {\r\n                  notify(res.error + \". Try reload the app\", { variant: \"error\" });\r\n                }\r\n              }\r\n\r\n              store.dispatch({ type: \"SET_LOADING\", payload: false });\r\n              setCounter((prev) => prev + 1);\r\n            }\r\n          }}\r\n        />\r\n        <Button\r\n          onClick={() => uploadRef.current.click()}\r\n          className=\"bg-fireck-4 hover:bg-fireck-4-hover mb-4 h-34px pr-6 pl-5 min-w-unset\"\r\n        >\r\n          <div className=\"flex items-center\">\r\n            <AddRounded className=\"mr-2 text-lg\" fontSize=\"inherit\"></AddRounded>\r\n            <span>Upload</span>\r\n          </div>\r\n        </Button>\r\n      </div>\r\n\r\n      {!collectionType ? null : (\r\n        <CollectionTable\r\n          groundColor=\"black\"\r\n          key={`files-table-${refreshCounter}`}\r\n          valueFormatters={MediaDocumentFormatters}\r\n          collectionType={collectionType}\r\n        ></CollectionTable>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Media;\r\n","export type IconButtonVariant = \"transparent\" | \"standard\";\r\n\r\nexport interface IconButtonProps {\r\n  className?: string;\r\n  variant?: IconButtonVariant;\r\n  [x: string]: any;\r\n}\r\n\r\nconst IconButton: React.FC<IconButtonProps> = ({\r\n  className = \"\",\r\n  variant = \"standard\",\r\n  ...rest\r\n}) => {\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={\r\n        `bg-fireck-4 hover:bg-fireck-4-hover h-5 w-5 rounded flex items-center justify-center transition cursor-pointer ` +\r\n        className\r\n      }\r\n    ></div>\r\n  );\r\n};\r\n\r\nexport default IconButton;\r\n"],"sourceRoot":""}