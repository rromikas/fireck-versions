{"version":3,"sources":["pages/Users/index.tsx","api/callComponent.tsx","components/Select.tsx","components/TableElements/CreateIndex.tsx","hooks/useFetch.ts","components/TableElements/CollectionTable.tsx","components/Label.tsx","components/TableElements/AddFilter.tsx","components/TooltipChild.tsx","components/TableElements/FilesCell/MediaField.tsx","components/TableElements/FilesCell/index.tsx"],"names":["Collection","collectionType","useSelector","state","collectionTypes","find","x","id","history","useHistory","className","onClick","push","fontSize","groundColor","callComponent","Component","props","Promise","resolve","reject","wrapper","document","getElementById","appendChild","createElement","ReactDOM","render","store","proceed","val","unmountComponentAtNode","parentNode","removeChild","WarningIcon","React","forwardRef","ref","size","Select","options","error","classNames","spellCheck","map","i","value","label","title","placement","CreateIndexModal","url","onMouseDown","e","stopPropagation","Button","window","open","useFetch","collectionId","filters","orderBy","inView","useState","docs","setDocs","inViewRef","useRef","endReached","filterSortTriggered","notify","useNotify","loading","setLoading","abortController","AbortController","filterSortCounter","setFilterSortCounter","getOptions","useCallback","data","forEach","f","where","fieldId","operator","direction","length","startAfter","populateRef","onError","message","includes","split","variant","useEffect","current","fetcher","a","triggeredBySortFilter","getCollection","signal","newData","prev","limit","abort","Table","onPick","blackList","singleSelect","valueFormatters","_filters","_onEdit","onEdit","hideFilters","setFilters","fields","filter","field","displayOnTable","selected","setSelected","setOrderBy","endIsInView","setEndIsInView","onDeleteSelected","confirm","confirmation","deleteDocument","docId","doc","onOrder","undefined","selectHandler","checked","arr","index","findIndex","splice","formatValue","type","moment","format","toString","substring","AddFilter","onValue","hidden","disabled","autoHide","Checkbox","classes","root","onChange","select","target","j","mediaSingle","FilesCell","file","files","colSpan","Label","children","AddFilterModal","setOpen","useFormik","onSubmit","vals","resetForm","initialValues","validate","errors","Object","keys","values","handleChange","submitCount","handleSubmit","isSubmitting","style","maxWidth","name","onKeyDown","key","preventDefault","placeholder","TooltipChild","MediaField","src","Tooltip","arrow","alt","tooltip","backgroundImage","Files","Math","random","slice"],"mappings":"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","file":"static/js/15.6dc7a4d0.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { RootState } from \"store\";\r\nimport Button from \"components/Button\";\r\nimport AddRounded from \"@material-ui/icons/AddRounded\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Table from \"components/TableElements/CollectionTable\";\r\n\r\nexport interface CollectionProps {}\r\n\r\nconst Collection: React.FC<CollectionProps> = () => {\r\n  const collectionType = useSelector((state: RootState) => {\r\n    return state.collectionTypes.find((x) => x.id === \"UsersReservedCollection\");\r\n  });\r\n\r\n  const history = useHistory();\r\n\r\n  return (\r\n    <div className=\"h-full flex flex-col w-full\">\r\n      <div className=\"flex flex-wrap justify-between mb-5\">\r\n        <div className=\"mr-3 mb-3 text-27px font-medium capitalize leading-none text-white\">\r\n          Users\r\n        </div>\r\n        <Button\r\n          onClick={() => history.push(`/collections/${collectionType?.id}/add`)}\r\n          className=\"bg-fireck-4 hover:bg-fireck-4-hover mb-3 h-34px min-w-unset\"\r\n        >\r\n          <div className=\"flex items-center pr-1\">\r\n            <AddRounded fontSize=\"inherit\" className=\"text-lg sm:mr-3\"></AddRounded>\r\n            <span>Create</span>\r\n          </div>\r\n        </Button>\r\n      </div>\r\n\r\n      {collectionType ? (\r\n        <div className=\"flex-grow h-0\">\r\n          <Table\r\n            groundColor=\"black\"\r\n            key={collectionType.id}\r\n            collectionType={collectionType}\r\n          ></Table>\r\n        </div>\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Collection;\r\n","import ReactDOM from \"react-dom\";\r\nimport React from \"react\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"store\";\r\nimport NotificationsProvider from \"components/NotificationsProvider\";\r\n\r\nexport interface CallableComponent<T> {\r\n  proceed: (v: T) => void;\r\n}\r\n\r\ninterface callComponentArgs<T> {\r\n  Component: React.FC<any>;\r\n  props: Omit<T, \"proceed\">;\r\n}\r\n\r\nexport function callComponent<T, RT>({ Component, props }: callComponentArgs<T>): Promise<RT> {\r\n  return new Promise((resolve, reject) => {\r\n    const wrapper = document.getElementById(\"root\")?.appendChild(document.createElement(\"div\"));\r\n\r\n    if (wrapper) {\r\n      ReactDOM.render(\r\n        <Provider store={store}>\r\n          <NotificationsProvider>\r\n            <Component\r\n              {...props}\r\n              proceed={(val: RT) => {\r\n                ReactDOM.unmountComponentAtNode(wrapper);\r\n                wrapper.parentNode?.removeChild(wrapper);\r\n                resolve(val);\r\n              }}\r\n            />\r\n          </NotificationsProvider>\r\n        </Provider>,\r\n        wrapper\r\n      );\r\n    }\r\n  });\r\n}\r\n","import { IoAlertCircleOutline } from \"react-icons/io5\";\r\nimport Tooltip from \"@mui/material/Tooltip\";\r\nimport React, { SelectHTMLAttributes } from \"react\";\r\nimport classNames from \"classnames\";\r\n\r\nconst WarningIcon = React.forwardRef(function MyComponent(props: any, ref: any) {\r\n  return (\r\n    <div {...props} ref={ref}>\r\n      <IoAlertCircleOutline className=\"text-red-FF0000\" size={20}></IoAlertCircleOutline>\r\n    </div>\r\n  );\r\n});\r\n\r\nexport interface SelectProps extends SelectHTMLAttributes<HTMLSelectElement> {\r\n  className?: string;\r\n  options: { label: string; value: string | number }[];\r\n  error?: string | boolean;\r\n  groundColor: \"white\" | \"black\";\r\n}\r\n\r\nconst Select: React.FC<SelectProps> = ({\r\n  className = \"\",\r\n  options,\r\n  error,\r\n  groundColor,\r\n  ...props\r\n}) => {\r\n  return (\r\n    <div className={`${className} relative flex items-center`}>\r\n      <select\r\n        className={classNames(\"px-3 h-full border-2 border-solid w-full rounded outline-none\", {\r\n          \"border-red-FF0000\": error,\r\n          \"focus:border-fireck-4\": !error,\r\n          \"border-gray-300 bg-gray-300\": groundColor === \"white\",\r\n          \"border-white bg-white\": groundColor === \"black\",\r\n        })}\r\n        {...props}\r\n        spellCheck={false}\r\n      >\r\n        {options.map((x, i) => (\r\n          <option data-testid={`select-option-${x.value}`} key={\"opt-\" + i} value={x.value}>\r\n            {x.label}\r\n          </option>\r\n        ))}\r\n      </select>\r\n      {error ? (\r\n        <Tooltip title={error} placement=\"top\">\r\n          <WarningIcon className=\"absolute right-2 my-auto w-auto\"></WarningIcon>\r\n        </Tooltip>\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Select;\r\n","import { callComponent } from \"api/callComponent\";\r\nimport Button from \"components/Button\";\r\n\r\nexport interface CreateIndexModalProps {\r\n  proceed: Function;\r\n  url: string;\r\n}\r\n\r\nconst CreateIndexModal: React.FC<CreateIndexModalProps> = ({ proceed, url }) => {\r\n  return (\r\n    <div\r\n      className=\"fixed left-0 top-0 w-full h-full flex bg-black bg-opacity-40\"\r\n      onMouseDown={() => proceed(false)}\r\n    >\r\n      <div onMouseDown={(e) => e.stopPropagation()} className=\"bg-white rounded p-7  m-auto\">\r\n        <div className=\"mb-12\">This query requires creating an index.</div>\r\n        <div className=\"flex justify-between\">\r\n          <Button\r\n            className=\"bg-fireck-5 hover:bg-fireck-5-hover min-w-unset text-white h-28px\"\r\n            onClick={() => proceed(false)}\r\n          >\r\n            Later\r\n          </Button>\r\n          <Button\r\n            className=\"bg-fireck-4 hover:bg-fireck-4-hover min-w-unset h-28px\"\r\n            onClick={() => {\r\n              window.open(url, \"_blank\");\r\n              proceed(false);\r\n            }}\r\n          >\r\n            Create\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CreateIndexModal;\r\n\r\nexport const createIndex = (url: string) => {\r\n  callComponent<CreateIndexModalProps, boolean>({ Component: CreateIndexModal, props: { url } });\r\n};\r\n","import { Document, getCollection, GetCollectionOptions } from \"api/collections\";\r\nimport { useNotify } from \"components/NotificationsProvider\";\r\nimport { FilterType } from \"components/TableElements/CollectionTable\";\r\nimport { createIndex } from \"components/TableElements/CreateIndex\";\r\nimport { useEffect, useRef, useState, useCallback } from \"react\";\r\n\r\ninterface UseFetchProps {\r\n  collectionId: string;\r\n  filters?: FilterType[];\r\n  orderBy?: { fieldId: string; direction: \"asc\" | \"desc\" };\r\n  inView: boolean;\r\n}\r\n\r\nconst useFetch = ({ collectionId, filters = [], orderBy, inView }: UseFetchProps) => {\r\n  const [docs, setDocs] = useState<Document[]>([]);\r\n  const inViewRef = useRef(false);\r\n  const endReached = useRef(false);\r\n  const filterSortTriggered = useRef(false);\r\n  const notify = useNotify();\r\n  const [loading, setLoading] = useState(false);\r\n  const abortController = useRef(new AbortController());\r\n  const [filterSortCounter, setFilterSortCounter] = useState(0);\r\n\r\n  const getOptions = useCallback(\r\n    (data: Document[]) => {\r\n      let options: GetCollectionOptions = { collectionId };\r\n\r\n      options.where = \"\";\r\n      options.orderBy = \"\";\r\n\r\n      filters.forEach((f, i) => {\r\n        options.where += (i > 0 ? \";\" : \"\") + f.fieldId + \",\" + f.operator + \",\" + f.value;\r\n        if (orderBy && orderBy.fieldId !== f.fieldId) {\r\n          options.orderBy += (options.orderBy ? \";\" : \"\") + f.fieldId;\r\n        }\r\n      });\r\n\r\n      if (orderBy) {\r\n        options.orderBy += (options.orderBy ? \";\" : \"\") + `${orderBy.fieldId},${orderBy.direction}`;\r\n      }\r\n      if (!orderBy && !filters.length) {\r\n        options.orderBy = \"createdAt,asc\";\r\n      }\r\n\r\n      if (data.length) {\r\n        options.startAfter = data[data.length - 1][orderBy ? orderBy.fieldId : \"createdAt\"];\r\n      }\r\n      options.populateRef = false;\r\n\r\n      return options;\r\n    },\r\n    [orderBy, filters, collectionId]\r\n  );\r\n\r\n  const onError = (message: string) => {\r\n    if (message.includes(\"FAILED_PRECONDITION\")) {\r\n      createIndex(message.split(\"it here:\")[1]);\r\n    } else {\r\n      notify(message, { variant: \"error\" });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    inViewRef.current = inView;\r\n    const fetcher = async () => {\r\n      if ((!endReached.current && inViewRef.current) || filterSortTriggered.current) {\r\n        let triggeredBySortFilter = filterSortTriggered.current;\r\n        filterSortTriggered.current = false;\r\n\r\n        let options = getOptions(triggeredBySortFilter ? [] : docs);\r\n        setLoading(true);\r\n\r\n        const newData = await getCollection(options, abortController.current.signal);\r\n\r\n        if (newData.error) {\r\n          if (newData.error !== \"aborted\") {\r\n            onError(newData.error);\r\n          }\r\n        } else {\r\n          setDocs((prev) => (triggeredBySortFilter ? newData : [...prev, ...newData]));\r\n          if (newData.length < (options.limit || 10)) {\r\n            endReached.current = true;\r\n          }\r\n        }\r\n        setLoading(false);\r\n      }\r\n    };\r\n    fetcher();\r\n\r\n    return () => {\r\n      abortController.current.abort();\r\n      abortController.current = new AbortController();\r\n    };\r\n  }, [inView, docs, filterSortCounter]);\r\n\r\n  useEffect(() => {\r\n    filterSortTriggered.current = true;\r\n    endReached.current = false;\r\n    setFilterSortCounter((prev) => prev + 1);\r\n  }, [filters, orderBy]);\r\n\r\n  return { docs, setDocs, loading };\r\n};\r\n\r\nexport default useFetch;\r\n","import { Document } from \"api/collections\";\r\nimport { CollectionType, AnyField } from \"api/collectionTypes\";\r\nimport { deleteDocument } from \"api/collections\";\r\nimport FilesCell from \"./FilesCell\";\r\nimport React, { useEffect } from \"react\";\r\nimport ExpandMoreRounded from \"@mui/icons-material/ExpandMoreRounded\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { confirm } from \"components/Confirm\";\r\nimport AddFilter from \"./AddFilter\";\r\nimport Button from \"components/Button\";\r\nimport SimpleBar from \"simplebar-react\";\r\nimport classNames from \"classnames\";\r\nimport useFetch from \"hooks/useFetch\";\r\nimport { InView } from \"react-intersection-observer\";\r\nimport Checkbox from \"@mui/material/Checkbox\";\r\nimport moment from \"moment\";\r\n\r\nexport interface TableProps {\r\n  collectionType: CollectionType;\r\n  onPick?: (a: Document[]) => void;\r\n  blackList?: string[];\r\n  singleSelect?: boolean;\r\n  valueFormatters?: { [key: string]: (val: any) => any };\r\n  groundColor: \"white\" | \"black\";\r\n  filters?: FilterType[];\r\n  onEdit?: (doc: Document) => void;\r\n  hideFilters?: boolean;\r\n}\r\n\r\nexport type FilterType = { fieldId: string; operator: string; value: string; hidden?: boolean };\r\n\r\nconst Table: React.FC<TableProps> = ({\r\n  collectionType,\r\n  onPick,\r\n  blackList = [],\r\n  singleSelect = false,\r\n  valueFormatters,\r\n  groundColor,\r\n  filters: _filters = [],\r\n  onEdit: _onEdit,\r\n  hideFilters = false,\r\n}) => {\r\n  const history = useHistory();\r\n\r\n  const [filters, setFilters] = React.useState<FilterType[]>([]);\r\n  const fields = collectionType.fields.filter((field) => field.displayOnTable);\r\n  const [selected, setSelected] = React.useState<string[]>([]);\r\n  const [orderBy, setOrderBy] = React.useState<{ fieldId: string; direction: \"asc\" | \"desc\" }>();\r\n  const [endIsInView, setEndIsInView] = React.useState(false);\r\n\r\n  const { docs, setDocs } = useFetch({\r\n    collectionId: collectionType.id,\r\n    filters,\r\n    orderBy,\r\n    inView: endIsInView,\r\n  });\r\n\r\n  const onDeleteSelected = async () => {\r\n    if (await confirm({ confirmation: `Delete ${selected.length} documents?` })) {\r\n      selected.forEach((x) => {\r\n        deleteDocument(collectionType.id, x);\r\n      });\r\n      setDocs((prev) => prev.filter((x) => !selected.includes(x.docId)));\r\n      setSelected([]);\r\n    }\r\n  };\r\n\r\n  const onEdit =\r\n    _onEdit ||\r\n    ((doc: Document) => {\r\n      history.push(`/collections/${collectionType.id}/edit/${doc.docId}`);\r\n    });\r\n\r\n  const onOrder = (field: AnyField) =>\r\n    orderBy?.fieldId !== field.id\r\n      ? () => {\r\n          setOrderBy({ fieldId: field.id, direction: \"asc\" });\r\n        }\r\n      : orderBy?.direction !== \"asc\"\r\n      ? () => setOrderBy(undefined)\r\n      : () => setOrderBy({ fieldId: field.id, direction: \"desc\" });\r\n\r\n  const selectAll = (select: boolean) => setSelected(select ? docs.map((x) => x.docId) : []);\r\n\r\n  const selectHandler = (docId: string, checked: boolean) => {\r\n    if (checked) {\r\n      if (singleSelect) {\r\n        setSelected([docId]);\r\n      } else {\r\n        setSelected((prev) => [...prev, docId]);\r\n      }\r\n\r\n      return;\r\n    }\r\n    setSelected((prev) => {\r\n      let arr = [...prev];\r\n      let index = arr.findIndex((x) => x === docId);\r\n      if (index != null) {\r\n        arr.splice(index, 1);\r\n      }\r\n      return arr;\r\n    });\r\n  };\r\n\r\n  const formatValue = (field: AnyField, value: any) => {\r\n    return field.type === \"date\"\r\n      ? moment(value).format(\"YYYY-MM-DD HH:mm\")\r\n      : valueFormatters && field.id in valueFormatters\r\n      ? valueFormatters[field.id](value)\r\n      : value.toString().substring(0, 40);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (_filters.length) {\r\n      setFilters((prev) => [...prev, ..._filters]);\r\n    }\r\n  }, [_filters]);\r\n\r\n  return (\r\n    <div className=\"h-full w-full flex-col flex\">\r\n      <div className=\"flex justify-between mb-3\">\r\n        {hideFilters ? null : (\r\n          <div className=\"flex flex-wrap\">\r\n            <AddFilter\r\n              collectionType={collectionType}\r\n              onValue={(val: FilterType) => setFilters((prev) => [val, ...prev])}\r\n            ></AddFilter>\r\n            {filters.map((f, i) =>\r\n              f.hidden ? null : (\r\n                <div\r\n                  key={`f-${i}`}\r\n                  className={classNames(\r\n                    \"rounded min-h-28px border leading-28px pl-3 text-sm pr-3 flex mr-3 mb-3 relative\",\r\n                    { \"text-white border-white\": groundColor === \"black\" },\r\n                    { \"text-black border-black\": groundColor === \"white\" }\r\n                  )}\r\n                >\r\n                  {f.fieldId} {f.operator} {f.value}{\" \"}\r\n                  <span\r\n                    onClick={() =>\r\n                      setFilters((prev) => {\r\n                        let arr = [...prev];\r\n                        arr.splice(i, 1);\r\n                        return arr;\r\n                      })\r\n                    }\r\n                    className=\"text-xs leading-28px ml-3 cursor-pointer\"\r\n                  >\r\n                    ✕\r\n                  </span>\r\n                </div>\r\n              )\r\n            )}\r\n          </div>\r\n        )}\r\n\r\n        {!onPick ? (\r\n          <Button\r\n            onClick={onDeleteSelected}\r\n            disabled={selected.length === 0}\r\n            className={`px-7 mb-3 min-w-unset h-28px ${\r\n              selected.length === 0\r\n                ? \"bg-gray-E1E1E1 text-gray-6C6C6C cursor-default\"\r\n                : \"bg-red-FF0000 hover:bg-red-FF0000-hover text-white\"\r\n            } `}\r\n          >\r\n            Delete\r\n          </Button>\r\n        ) : (\r\n          <Button\r\n            onClick={() => onPick(docs.filter((x) => selected.includes(x.docId)))}\r\n            className={`h-28px min-w-unset mb-3 px-7 ${\r\n              selected.length === 0\r\n                ? \"bg-gray-300 text-gray-500 cursor-default\"\r\n                : \"bg-fireck-4 hover:bg-fireck-4-hover\"\r\n            } `}\r\n          >\r\n            Select\r\n          </Button>\r\n        )}\r\n      </div>\r\n      <div\r\n        className={classNames(\"flex-grow h-0 -mt-3 rounded overflow-hidden bg-white\", {\r\n          \"shadow-border-gray\": groundColor === \"white\",\r\n        })}\r\n      >\r\n        <SimpleBar className={\"relative scrollbar-light h-full\"} autoHide={false}>\r\n          <table className=\"w-full text-center\">\r\n            <thead>\r\n              <tr className=\"whitespace-nowrap\">\r\n                <th className=\"sticky top-0 bg-gray-E1E1E1 z-10 px-1\">\r\n                  {singleSelect ? null : (\r\n                    <Checkbox\r\n                      size=\"small\"\r\n                      classes={{ checked: \"text-fireck-1\", root: \"p-0\" }}\r\n                      checked={selected.length === docs.length}\r\n                      onChange={(e) => selectAll(e.target.checked)}\r\n                    ></Checkbox>\r\n                  )}\r\n                </th>\r\n                {fields.map((field, i) => (\r\n                  <th className=\"font-semibold sticky top-0 bg-gray-E1E1E1\" key={`th-${i}`}>\r\n                    <div className=\"flex items-center justify-center\">\r\n                      <div className=\"w-5\"></div>\r\n                      <div className=\"cursor-pointer select-none\" onClick={onOrder(field)}>\r\n                        {field.id}\r\n                      </div>\r\n                      <div className=\"w-5\">\r\n                        {orderBy?.fieldId === field.id ? (\r\n                          <ExpandMoreRounded\r\n                            fontSize=\"small\"\r\n                            className={`${\r\n                              orderBy?.direction === \"asc\" ? \"transform rotate-180\" : \"\"\r\n                            }`}\r\n                          ></ExpandMoreRounded>\r\n                        ) : null}\r\n                      </div>\r\n                    </div>\r\n                  </th>\r\n                ))}\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {docs.map((doc, i) =>\r\n                blackList.includes(doc.docId) ? null : (\r\n                  <tr\r\n                    onClick={() =>\r\n                      onPick ? selectHandler(doc.docId, !selected.includes(doc.docId)) : onEdit(doc)\r\n                    }\r\n                    key={`row-${i}`}\r\n                    className={\"cursor-pointer hover:bg-fireck-4\"}\r\n                  >\r\n                    <td className=\"px-1\" onClick={(e) => e.stopPropagation()}>\r\n                      <Checkbox\r\n                        size=\"small\"\r\n                        classes={{ checked: \"text-fireck-1\", root: \"p-0\" }}\r\n                        checked={selected.includes(doc.docId)}\r\n                        onChange={(e) => selectHandler(doc.docId, e.target.checked)}\r\n                      ></Checkbox>\r\n                    </td>\r\n                    {fields.map((field, j) => (\r\n                      <td key={`row-${i}-col-${j}`} className=\"px-2\">\r\n                        {doc[field.id] != null ? (\r\n                          field.type === \"media\" ? (\r\n                            field.mediaSingle ? (\r\n                              <FilesCell file={doc[field.id]}></FilesCell>\r\n                            ) : (\r\n                              <FilesCell files={doc[field.id]} />\r\n                            )\r\n                          ) : (\r\n                            <div className=\"whitespace-nowrap\">\r\n                              {formatValue(field, doc[field.id])}\r\n                            </div>\r\n                          )\r\n                        ) : null}\r\n                      </td>\r\n                    ))}\r\n                  </tr>\r\n                )\r\n              )}\r\n              <tr>\r\n                <td colSpan={fields.length + 1}>\r\n                  <InView\r\n                    onChange={async (inView) => {\r\n                      setEndIsInView(inView);\r\n                    }}\r\n                  >\r\n                    <div className=\"w-full\"></div>\r\n                  </InView>\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n\r\n          <div></div>\r\n        </SimpleBar>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Table;\r\n","import React from \"react\";\r\nimport ErrorRounded from \"@mui/icons-material/ErrorRounded\";\r\nimport Tooltip from \"@mui/material/Tooltip\";\r\nimport classNames from \"classnames\";\r\n\r\nexport interface LabelProps {\r\n  error?: string | undefined | null;\r\n  className?: string;\r\n  children: any;\r\n  groundColor: \"black\" | \"white\";\r\n}\r\n\r\nconst WarningIcon = React.forwardRef(function MyComponent(props: any, ref: any) {\r\n  return (\r\n    <div {...props} ref={ref}>\r\n      <ErrorRounded className=\"text-red-500 text-xl\" fontSize=\"inherit\"></ErrorRounded>\r\n    </div>\r\n  );\r\n});\r\n\r\nconst Label: React.FC<LabelProps> = ({ className = \"\", children, error, groundColor }) => {\r\n  return (\r\n    <div\r\n      className={classNames(`flex justify-between relative ${className}`, {\r\n        \"text-white\": groundColor === \"black\",\r\n        \"text-black\": groundColor === \"white\",\r\n      })}\r\n    >\r\n      <div>{children}</div>\r\n      {error ? (\r\n        <Tooltip title={error} placement=\"top\">\r\n          <WarningIcon className=\"absolute right-2 my-auto w-auto\"></WarningIcon>\r\n        </Tooltip>\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Label;\r\n","import Modal from \"@mui/material/Modal\";\r\nimport Input from \"components/Input\";\r\nimport Select from \"components/Select\";\r\nimport Button from \"components/Button\";\r\nimport { CollectionType } from \"api/collectionTypes\";\r\nimport React from \"react\";\r\nimport { useFormik } from \"formik\";\r\nimport Label from \"components/Label\";\r\nimport CloseRounded from \"@mui/icons-material/CloseRounded\";\r\n\r\nexport interface AddFilterModalProps {\r\n  collectionType: Pick<CollectionType, \"fields\">;\r\n  onValue: Function;\r\n  groundColor?: \"black\" | \"white\";\r\n}\r\n\r\nconst AddFilterModal: React.FC<AddFilterModalProps> = ({\r\n  collectionType,\r\n  onValue,\r\n  groundColor = \"white\",\r\n}) => {\r\n  const operators = [\r\n    \"<\",\r\n    \"<=\",\r\n    \"==\",\r\n    \">\",\r\n    \">=\",\r\n    \"!=\",\r\n    \"array-contains\",\r\n    \"array-contains-any\",\r\n    \"in\",\r\n    \"not-in\",\r\n  ];\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const { values, errors, handleChange, submitCount, handleSubmit, isSubmitting } = useFormik({\r\n    onSubmit: async (vals, { resetForm }) => {\r\n      onValue(vals);\r\n      setOpen(false);\r\n      resetForm();\r\n    },\r\n    initialValues: {\r\n      value: \"\",\r\n      operator: \"\",\r\n      fieldId: \"\",\r\n    },\r\n    validate: (vals: any) => {\r\n      let errors: any = {};\r\n      Object.keys(vals).forEach((x) => {\r\n        if (!vals[x]) {\r\n          errors[x] = \"Required\";\r\n        }\r\n      });\r\n      return errors;\r\n    },\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <Button\r\n        onClick={() => setOpen(true)}\r\n        className=\"bg-fireck-4 hover:bg-fireck-4-hover min-w-unset flex items-center justify-center h-28px px-7 rounded text-sm mr-3 mb-3\"\r\n      >\r\n        Filters\r\n      </Button>\r\n      {!open ? null : (\r\n        <Modal open={open}>\r\n          <div\r\n            className=\"fixed left-0 top-0 w-full h-full flex p-7\"\r\n            onMouseDown={() => setOpen(false)}\r\n          >\r\n            <div\r\n              onMouseDown={(e) => e.stopPropagation()}\r\n              className=\"bg-white rounded p-7 m-auto relative animate-littlemoveup\"\r\n              style={{ maxWidth: 600 }}\r\n            >\r\n              <CloseRounded\r\n                className=\"absolute top-0 right-0 cursor-pointer\"\r\n                onClick={() => setOpen(false)}\r\n              ></CloseRounded>\r\n              <div className=\"flex flex-wrap -mx-2 mb-4\">\r\n                <div className=\"sm:w-1/3 w-full mb-3 px-2\">\r\n                  <Label\r\n                    groundColor={groundColor}\r\n                    className=\"mb-2\"\r\n                    error={submitCount > 0 ? errors.fieldId : null}\r\n                  >\r\n                    Field\r\n                  </Label>\r\n                  <Select\r\n                    className=\"h-34px\"\r\n                    groundColor=\"white\"\r\n                    name=\"fieldId\"\r\n                    onChange={handleChange}\r\n                    value={values.fieldId}\r\n                    options={[\r\n                      { value: \"\", label: \"Select\" },\r\n                      ...collectionType.fields.map((x) => ({ value: x.id, label: x.id })),\r\n                    ]}\r\n                  ></Select>\r\n                </div>\r\n                <div className=\"sm:w-1/3 w-full mb-3 px-2\">\r\n                  <Label\r\n                    groundColor={groundColor}\r\n                    className=\"mb-2\"\r\n                    error={submitCount > 0 ? errors.operator : null}\r\n                  >\r\n                    Operator\r\n                  </Label>\r\n                  <Select\r\n                    className=\"h-34px\"\r\n                    groundColor=\"white\"\r\n                    name=\"operator\"\r\n                    onChange={handleChange}\r\n                    value={values.operator}\r\n                    options={[\r\n                      { value: \"\", label: \"Select\" },\r\n                      ...operators.map((x) => ({ value: x, label: x })),\r\n                    ]}\r\n                  ></Select>\r\n                </div>\r\n                <div className=\"sm:w-1/3 w-full mb-3 px-2\">\r\n                  <Label\r\n                    groundColor={groundColor}\r\n                    className=\"mb-2 text-black\"\r\n                    error={submitCount > 0 ? errors.value : null}\r\n                  >\r\n                    Value\r\n                  </Label>\r\n                  <Input\r\n                    onKeyDown={(e) => {\r\n                      if (e.key === \"Enter\") {\r\n                        e.preventDefault();\r\n                        handleSubmit();\r\n                      }\r\n                    }}\r\n                    groundColor=\"white\"\r\n                    placeholder={\r\n                      [\"in\", \"not in\", \"array-contains-any\"].includes(values.operator)\r\n                        ? \"value, value, value\"\r\n                        : \"value\"\r\n                    }\r\n                    className=\"placeholder-black h-34px\"\r\n                    value={values.value}\r\n                    onChange={handleChange}\r\n                    name=\"value\"\r\n                  ></Input>\r\n                </div>\r\n              </div>\r\n              <div className=\"flex justify-end\">\r\n                <Button\r\n                  disabled={isSubmitting}\r\n                  onClick={() => handleSubmit()}\r\n                  className=\"bg-fireck-4 hover:bg-fireck-4-hover h-34px\"\r\n                >\r\n                  Add\r\n                </Button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Modal>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AddFilterModal;\r\n","import { forwardRef } from \"react\";\r\n\r\nconst TooltipChild = forwardRef(function MyComponent(props: any, ref: any) {\r\n  return <div {...props} ref={ref}></div>;\r\n});\r\n\r\nexport default TooltipChild;\r\n","import TooltipChild from \"components/TooltipChild\";\r\nimport Tooltip from \"@mui/material/Tooltip\";\r\n\r\ninterface MediaFieldProps {\r\n  src: string;\r\n}\r\n\r\nconst MediaField: React.FC<MediaFieldProps> = ({ src }) => {\r\n  return (\r\n    <Tooltip\r\n      arrow\r\n      title={\r\n        <div className=\"p-1\">\r\n          <img src={src} className=\"max-w-136px max-h-136px w-auto h-auto\" alt=\"\" />\r\n        </div>\r\n      }\r\n      placement=\"top\"\r\n      classes={{\r\n        tooltip: \"font-poppins text-xs p-0 rounded bg-fireck-1\",\r\n        arrow: \"text-fireck-1\",\r\n      }}\r\n    >\r\n      <TooltipChild>\r\n        <div className=\"group w-4 h-4 relative flex items-center justify-center rounded hover:bg-gray-535371 hover:bg-opacity-5 cursor-pointer\">\r\n          <div\r\n            className=\"relative w-4 h-4 rounded-full bg-center bg-cover pointer-events-none\"\r\n            style={{ backgroundImage: `url(${src})` }}\r\n          ></div>\r\n        </div>\r\n      </TooltipChild>\r\n    </Tooltip>\r\n  );\r\n};\r\n\r\nexport default MediaField;\r\n","import React from \"react\";\r\nimport MediaField from \"./MediaField\";\r\n\r\nexport interface FilesProps {\r\n  files?: string[];\r\n  file?: string;\r\n}\r\n\r\nconst Files: React.FC<FilesProps> = ({ files, file }) => {\r\n  const id = React.useRef<number>(Math.random());\r\n\r\n  return (\r\n    <div className=\"flex justify-center\">\r\n      {(files ? files : file ? [file] : []).slice(0, 4).map((f, i) => (\r\n        <div key={`${id}-file-${i}`} className=\"mr-0.5\">\r\n          <MediaField src={f}></MediaField>\r\n        </div>\r\n      ))}\r\n      {files && files.length > 4 ? (\r\n        <div className=\"relative\">\r\n          <div className=\"w-4 h-4 rounded-full bg-fireck-4 text-10px flex items-center justify-center\">\r\n            {files.length - 4}+\r\n          </div>\r\n        </div>\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Files;\r\n"],"sourceRoot":""}