{"version":3,"sources":["components/CallComponent.tsx","components/Select.tsx","components/Label.tsx","hooks/useFetch.ts","components/TableElements/CollectionTable.tsx","components/TableElements/AddFilter.tsx","components/TooltipChild.tsx","components/TableElements/FilesCell/MediaField.tsx","components/TableElements/FilesCell/index.tsx","components/PageTitle.tsx","pages/Media/index.tsx"],"names":["callComponent","Component","props","Promise","resolve","reject","wrapper","document","getElementById","appendChild","createElement","ReactDOM","render","store","client","queryClient","proceed","val","unmountComponentAtNode","parentNode","removeChild","WarningIcon","React","forwardRef","ref","className","size","Select","options","error","ground","mainClasses","classNames","spellCheck","map","x","i","value","label","title","placement","memo","fontSize","Label","children","toLowerCase","classes","tooltip","tooltipArrow","useFetch","collectionId","filters","orderBy","inView","getOptions","useNotify","useCallback","forEach","f","where","fieldId","operator","direction","length","populateRef","useInfiniteQuery","pageParam","dataProvider","getCollection","startAfter","keepPreviousData","getNextPageParam","lastPage","pages","lastDoc","undefined","data","fetchNextPage","hasNextPage","useEffect","docs","reduce","a","b","Table","collectionType","onPick","blackList","singleSelect","valueFormatters","_filters","_onEdit","onEdit","hideFilters","history","useHistory","useState","setFilters","fields","filter","field","displayOnTable","selected","setSelected","setOrderBy","endIsInView","setEndIsInView","id","onDeleteSelected","confirm","confirmation","CollectionsManager","deleteMultipleDocuments","includes","docId","doc","push","onOrder","selectHandler","checked","prev","arr","index","findIndex","splice","formatValue","type","moment","format","toString","substring","AddFilter","onValue","hidden","uncapitalize","onClick","Button","disabled","Checkbox","root","onChange","e","select","target","stopPropagation","j","mediaSingle","FilesCell","file","files","colSpan","AddFilterModal","open","setOpen","useFormik","onSubmit","vals","resetForm","initialValues","validate","errors","Object","keys","values","handleChange","submitCount","handleSubmit","isSubmitting","onMouseDown","style","maxWidth","name","onKeyDown","key","preventDefault","placeholder","TooltipChild","MediaField","src","Tooltip","arrow","alt","window","backgroundImage","Files","useRef","Math","random","slice","PageTitle","rest","MediaDocumentFormatters","url","formatBytes","Media","uploadRef","notify","refreshCounter","setCounter","useSelector","state","collectionTypes","find","COLLECTION_IDS","MEDIA","multiple","dispatch","payload","uploaded","uploadFile","res","variant","current","click"],"mappings":"sOAiBO,SAASA,EAAT,GAAwF,IAAxDC,EAAuD,EAAvDA,UAAWC,EAA4C,EAA5CA,MAChD,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAAY,IAAD,EAChCC,EAAO,UAAGC,SAASC,eAAe,eAA3B,aAAG,EAAiCC,YAAYF,SAASG,cAAc,QAEhFJ,GACFK,IAASC,OACP,cAAC,IAAD,CAAUC,MAAOA,IAAjB,SACE,cAAC,IAAD,UACE,cAAC,sBAAD,CAAqBC,OAAQC,cAA7B,SACE,cAACd,EAAD,2BACMC,GADN,IAEEc,QAAS,SAACC,GAAa,IAAD,EACpBN,IAASO,uBAAuBZ,GAChC,UAAAA,EAAQa,kBAAR,SAAoBC,YAAYd,GAChCF,EAAQa,aAMlBX,Q,mKC/BFe,EAAcC,IAAMC,YAAW,SAAqBrB,EAAYsB,GACpE,OACE,+CAAStB,GAAT,IAAgBsB,IAAKA,EAArB,SACE,cAAC,IAAD,CAAsBC,UAAU,kBAAkBC,KAAM,WAYxDC,EAAgC,SAAC,GAA0D,IAAD,IAAvDF,iBAAuD,MAA3C,GAA2C,EAAvCG,EAAuC,EAAvCA,QAASC,EAA8B,EAA9BA,MAAOC,EAAuB,EAAvBA,OAAW5B,EAAY,iBAC1F6B,EAAW,eAAWD,EAAX,0BAAmCA,EAAnC,gCAAiEA,EAAjE,iCAAgGA,EAAhG,kCAAgIA,EAAhI,mCAAiKA,EAAjK,cACf,OACE,sBAAKL,UAAS,UAAKA,EAAL,+BAAd,UACE,gDACEA,UAAWO,IAAW,gEAAD,aACnB,oBAAqBH,GACpBE,GAAeF,KAEd3B,GALN,IAME+B,YAAY,EANd,SAQGL,EAAQM,KAAI,SAACC,EAAGC,GAAJ,OACX,wBAAQ,sCAA8BD,EAAEE,OAA0BA,MAAOF,EAAEE,MAA3E,SACGF,EAAEG,OADiD,OAASF,SAKlEP,EACC,cAAC,IAAD,CAASU,MAAOV,EAAOW,UAAU,MAAjC,SACE,cAACnB,EAAD,CAAaI,UAAU,sCAEvB,SAKKgB,mBAAKd,I,iHCnCdN,EAAcC,IAAMC,YAAW,SAAqBrB,EAAYsB,GACpE,OACE,+CAAStB,GAAT,IAAgBsB,IAAKA,EAArB,SACE,cAAC,IAAD,CAAcC,UAAU,uBAAuBiB,SAAS,kBA2B/CC,IAtBqB,SAAC,GAAiD,IAAD,IAA9ClB,iBAA8C,MAAlC,GAAkC,EAA9BmB,EAA8B,EAA9BA,SAAUf,EAAoB,EAApBA,MAAOC,EAAa,EAAbA,OACtE,OACE,sBACEL,UAAWO,IAAW,iCAAD,OACcP,GADd,UAEhBK,EAAOe,cAFS,cADvB,UAME,8BAAMD,IACLf,EACC,cAAC,IAAD,CACEU,MAAOV,EACPW,UAAU,MACVM,QAAS,CAAEC,QAAS,aAAcC,aAAc,cAHlD,SAKE,cAAC3B,EAAD,CAAaI,UAAU,sCAEvB,U,qOCoCKwB,EA3DE,SAAC,GAAoE,IAAlEC,EAAiE,EAAjEA,aAAiE,IAAnDC,eAAmD,MAAzC,GAAyC,EAArCC,EAAqC,EAArCA,QAASC,EAA4B,EAA5BA,OAGjDC,GAFSC,cAEIC,uBAAY,WAC7B,IAAI5B,EAAgC,CAAEsB,eAEtCtB,MAAgB,GAChBA,QAAkB,IAkBlB,OAhBAuB,EAAQM,SAAQ,SAACC,EAAGtB,GAClBR,EAAQ+B,QAAUvB,EAAI,EAAI,IAAM,IAAMsB,EAAEE,QAAU,IAAMF,EAAEG,SAAW,IAAMH,EAAErB,MACzEe,GAAWA,EAAQQ,UAAYF,EAAEE,UACnChC,EAAQwB,UAAYxB,EAAQwB,QAAU,IAAM,IAAMM,EAAEE,YAIpDR,IACFxB,EAAQwB,UAAYxB,EAAQwB,QAAU,IAAM,IAAzB,UAAkCA,EAAQQ,QAA1C,YAAqDR,EAAQU,YAE7EV,GAAYD,EAAQY,SACvBnC,EAAQwB,QAAU,iBAGpBxB,EAAQoC,aAAc,EAEfpC,IACN,CAACwB,EAASD,EAASD,KAEtB,EAAoDe,2BAClD,CAACf,EAAcE,EAASD,IACxB,YAAoB,IAAjBe,EAAgB,EAAhBA,UACD,OAAOC,IAAaC,cAAb,2BAAgCd,KAAhC,IAA8Ce,WAAYH,OAEnE,CACEI,kBAAkB,EAClBC,iBAAkB,SAACC,EAAUC,GAC3B,IAAIC,GAAkB,OAARF,QAAQ,IAARA,OAAA,EAAAA,EAAUT,SAA8B,KAApBS,EAAST,OAAgBS,EAAS,GAAK,KACzE,OAAOE,EAAUA,EAAQtB,EAAUA,EAAQQ,QAAU,kBAAee,KATlEC,EAAR,EAAQA,KAAaC,GAArB,EAAchD,MAAd,EAAqBgD,eAAeC,EAApC,EAAoCA,YA4BpC,OANAC,qBAAU,WACJ1B,GAAUyB,GACZD,MAED,CAACxB,EAAQwB,EAAeC,IAEpB,CAAEE,MAAU,OAAJJ,QAAI,IAAJA,OAAA,EAAAA,EAAMH,MAAMQ,QAAO,SAACC,EAAGC,GAAJ,4BAAcD,GAAd,YAAoBC,MAAI,MAAO,K,sDCqNpDC,IA1PqB,SAAC,GAU9B,IATLC,EASI,EATJA,eACAC,EAQI,EARJA,OAQI,IAPJC,iBAOI,MAPQ,GAOR,MANJC,oBAMI,SALJC,EAKI,EALJA,gBACA3D,EAII,EAJJA,OAII,IAHJqB,QAASuC,OAGL,MAHgB,GAGhB,EAFIC,EAEJ,EAFJC,OAEI,IADJC,mBACI,SACEC,EAAUC,cAEhB,EAA8BzE,IAAM0E,SAAuB,IAA3D,mBAAO7C,EAAP,KAAgB8C,EAAhB,KACMC,EAASb,EAAea,OAAOC,QAAO,SAACC,GAAD,OAAWA,EAAMC,kBAC7D,EAAgC/E,IAAM0E,SAAmB,IAAzD,mBAAOM,EAAP,KAAiBC,EAAjB,KACA,EAA8BjF,IAAM0E,WAApC,mBAAO5C,EAAP,KAAgBoD,EAAhB,KACA,EAAsClF,IAAM0E,UAAS,GAArD,mBAAOS,EAAP,KAAoBC,EAApB,KAEQ1B,EAAS/B,EAAS,CACxBC,aAAcmC,EAAesB,GAC7BxD,UACAC,UACAC,OAAQoD,IAJFzB,KAOF4B,GAAgB,uCAAG,sBAAA1B,EAAA,sEACb2B,YAAQ,CAAEC,aAAa,UAAD,OAAYR,EAASvC,OAArB,iBADT,kCAErBgD,IAAmBC,wBACjB3B,EAAesB,GACf3B,EAAKmB,QAAO,SAAChE,GAAD,OAAOmE,EAASW,SAAS9E,EAAE+E,WAGzCX,EAAY,IAPS,2CAAH,qDAWhBX,GACJD,GACC,SAACwB,GACArB,EAAQsB,KAAR,uBAA6B/B,EAAesB,GAA5C,iBAAuDQ,EAAID,SAGzDG,GAAU,SAACjB,GAAD,OACP,OAAPhD,QAAO,IAAPA,OAAA,EAAAA,EAASQ,WAAYwC,EAAMO,GACvB,WACEH,EAAW,CAAE5C,QAASwC,EAAMO,GAAI7C,UAAW,SAEtB,SAAhB,OAAPV,QAAO,IAAPA,OAAA,EAAAA,EAASU,WACT,kBAAM0C,OAAW7B,IACjB,kBAAM6B,EAAW,CAAE5C,QAASwC,EAAMO,GAAI7C,UAAW,WAIjDwD,GAAgB,SAACJ,EAAeK,GAGhChB,EAFAgB,EACE/B,EACU,CAAC0B,GAED,SAACM,GAAD,4BAAcA,GAAd,CAAoBN,KAKxB,SAACM,GACX,IAAIC,EAAG,YAAOD,GACVE,EAAQD,EAAIE,WAAU,SAACxF,GAAD,OAAOA,IAAM+E,KAIvC,OAHa,MAATQ,GACFD,EAAIG,OAAOF,EAAO,GAEbD,KAILI,GAAc,SAACzB,EAAiB/D,GACpC,MAAsB,SAAf+D,EAAM0B,KACTC,IAAO1F,GAAO2F,OAAO,oBACrBvC,GAAmBW,EAAMO,MAAMlB,EAC/BA,EAAgBW,EAAMO,IAAItE,GAC1BA,EAAM4F,WAAWC,UAAU,EAAG,KASpC,OANAnD,qBAAU,WACJW,EAAS3B,QACXkC,GAAW,SAACuB,GAAD,4BAAcA,GAAd,YAAuB9B,SAEnC,CAACA,IAGF,sBAAKjE,UAAU,8BAAf,UACE,sBAAKA,UAAU,4BAAf,UACGoE,EAAc,KACb,sBAAKpE,UAAU,iBAAf,UACE,cAAC0G,EAAA,EAAD,CACErG,OAAQA,EACRuD,eAAgBA,EAChB+C,QAAS,SAACnH,GAAD,OAAqBgF,GAAW,SAACuB,GAAD,OAAWvG,GAAX,mBAAmBuG,UAE7DrE,EAAQjB,KAAI,SAACwB,EAAGtB,GAAJ,OACXsB,EAAE2E,OAAS,KACT,sBAEE5G,UAAWO,IACT,mFADmB,UAEhBsG,YAAaxG,GAFG,qBAEiBwG,YAAaxG,GAF9B,gBAFvB,UAOG4B,EAAEE,QAPL,IAOeF,EAAEG,SAPjB,IAO4BH,EAAErB,MAAO,IACnC,sBACEkG,QAAS,kBACPtC,GAAW,SAACuB,GACV,IAAIC,EAAG,YAAOD,GAEd,OADAC,EAAIG,OAAOxF,EAAG,GACPqF,MAGXhG,UAAU,2CARZ,sBARF,YACYW,UAyBlBkD,EAaA,cAACkD,EAAA,EAAD,CACED,QAAS,kBAAMjD,EAAON,EAAKmB,QAAO,SAAChE,GAAD,OAAOmE,EAASW,SAAS9E,EAAE+E,YAC7DzF,UAAS,+CACa,IAApB6E,EAASvC,OACL,kEACA,2CAHG,KAFX,oBAZA,cAACyE,EAAA,EAAD,CACED,QAAS3B,GACT6B,SAA8B,IAApBnC,EAASvC,OACnBtC,UAAS,+CACa,IAApB6E,EAASvC,OACL,kEACA,yCAHG,KAHX,uBAwBJ,qBAAKtC,UAAWO,IAAW,wDAA3B,SACE,eAAC,IAAD,CAAWP,UAAS,wBAAmBK,EAAnB,oBAApB,UACE,wBAAOL,UAAU,qBAAjB,UACE,gCACE,qBAAIA,UAAU,oBAAd,UACE,oBAAIA,UAAS,4BAAuBK,EAAvB,8BAAb,SACG0D,EAAe,KACd,cAACkD,EAAA,EAAD,CACEhH,KAAK,QACLoB,QAAS,CAAEyE,QAAS,yBAA0BoB,KAAM,OACpDpB,QAASjB,EAASvC,SAAWiB,EAAKjB,OAClC6E,SAAU,SAACC,GAAD,OA9GXC,EA8G4BD,EAAEE,OAAOxB,QA9GjBhB,EAAYuC,EAAS9D,EAAK9C,KAAI,SAACC,GAAD,OAAOA,EAAE+E,SAAS,IAArE,IAAC4B,OAkHJ5C,EAAOhE,KAAI,SAACkE,EAAOhE,GAAR,OACV,oBACEX,UAAS,wCAAmCK,EAAnC,oBADX,SAIE,sBAAKL,UAAU,mCAAf,UACE,qBAAKA,UAAU,QACf,qBAAKA,UAAU,6BAA6B8G,QAASlB,GAAQjB,GAA7D,SACGA,EAAMO,KAET,qBAAKlF,UAAU,MAAf,UACU,OAAP2B,QAAO,IAAPA,OAAA,EAAAA,EAASQ,WAAYwC,EAAMO,GAC1B,cAAC,IAAD,CACEjE,SAAS,QACTjB,UAAS,UACgB,SAAhB,OAAP2B,QAAO,IAAPA,OAAA,EAAAA,EAASU,WAAsB,uBAAyB,MAG1D,WAjBV,aAEa1B,YAsBnB,kCACG4C,EAAK9C,KAAI,SAACiF,EAAK/E,GAAN,OACRmD,EAAU0B,SAASE,EAAID,OAAS,KAC9B,qBACEqB,QAAS,kBACPjD,EAASgC,GAAcH,EAAID,OAAQZ,EAASW,SAASE,EAAID,QAAUtB,GAAOuB,IAG5E1F,UAAS,8BAAyBK,EAAzB,kCAAyDA,EAAzD,sBALX,UAOE,oBAAIL,UAAU,OAAO8G,QAAS,SAACM,GAAD,OAAOA,EAAEG,mBAAvC,SACE,cAACN,EAAA,EAAD,CACEhH,KAAK,QACLoB,QAAS,CAAEyE,QAAS,yBAA0BoB,KAAM,OACpDpB,QAASjB,EAASW,SAASE,EAAID,OAC/B0B,SAAU,SAACC,GAAD,OAAOvB,GAAcH,EAAID,MAAO2B,EAAEE,OAAOxB,cAGtDrB,EAAOhE,KAAI,SAACkE,EAAO6C,GAAR,OACV,oBAA8BxH,UAAU,OAAxC,SACoB,MAAjB0F,EAAIf,EAAMO,IACM,UAAfP,EAAM0B,KACJ1B,EAAM8C,YACJ,cAACC,EAAA,EAAD,CAAWC,KAAMjC,EAAIf,EAAMO,MAE3B,cAACwC,EAAA,EAAD,CAAWE,MAAOlC,EAAIf,EAAMO,MAG9B,qBAAKlF,UAAU,oBAAf,SACGoG,GAAYzB,EAAOe,EAAIf,EAAMO,OAGhC,MAbN,cAAgBvE,EAAhB,gBAAyB6G,SAhB7B,cAIc7G,OA+BlB,6BACE,oBAAIkH,QAASpD,EAAOnC,OAAS,EAA7B,SACE,cAAC,IAAD,CACE6E,SAAQ,uCAAE,WAAOvF,GAAP,SAAA6B,EAAA,sDACRwB,EAAerD,GADP,2CAAF,sDADV,SAKE,qBAAK5B,UAAU,uBAOzB,kC,0KCjHK8H,IAnJuC,SAAC,GAAyC,IAAvClE,EAAsC,EAAtCA,eAAgB+C,EAAsB,EAAtBA,QAcvE,GAd6F,EAAbtG,OAcxDR,IAAM0E,UAAS,IAAvC,mBAAOwD,EAAP,KAAaC,EAAb,KAEA,EAAkFC,YAAU,CAC1FC,SAAS,WAAD,4BAAE,WAAOC,EAAP,kBAAA1E,EAAA,sDAAe2E,EAAf,EAAeA,UACvBzB,EAAQwB,GACRH,GAAQ,GACRI,IAHQ,2CAAF,qDAAC,GAKTC,cAAe,CACbzH,MAAO,GACPwB,SAAU,GACVD,QAAS,IAEXmG,SAAU,SAACH,GACT,IAAII,EAAc,GAMlB,OALAC,OAAOC,KAAKN,GAAMnG,SAAQ,SAACtB,GACpByH,EAAKzH,KACR6H,EAAO7H,GAAK,eAGT6H,KAlBHG,EAAR,EAAQA,OAAQH,EAAhB,EAAgBA,OAAQI,EAAxB,EAAwBA,aAAcC,EAAtC,EAAsCA,YAAaC,EAAnD,EAAmDA,aAAcC,EAAjE,EAAiEA,aAsBjE,OACE,qCACE,cAAC,IAAD,CACEhC,QAAS,kBAAMkB,GAAQ,IACvBhI,UAAU,kIAFZ,qBAME+H,EACA,cAAC,IAAD,CAAOA,KAAMA,EAAb,SACE,qBACE/H,UAAU,4CACV+I,YAAa,kBAAMf,GAAQ,IAF7B,SAIE,sBACEe,YAAa,SAAC3B,GAAD,OAAOA,EAAEG,mBACtBvH,UAAU,4DACVgJ,MAAO,CAAEC,SAAU,KAHrB,UAKE,cAAC,IAAD,CACEjJ,UAAU,wCACV8G,QAAS,kBAAMkB,GAAQ,MAEzB,sBAAKhI,UAAU,4BAAf,UACE,sBAAKA,UAAU,4BAAf,UACE,cAAC,IAAD,CACEK,OAAO,SACPL,UAAU,OACVI,MAAOwI,EAAc,EAAIL,EAAOpG,QAAU,KAH5C,mBAOA,cAAC,IAAD,CACEnC,UAAU,SACVK,OAAO,SACP6I,KAAK,UACL/B,SAAUwB,EACV/H,MAAO8H,EAAOvG,QACdhC,QAAO,CACL,CAAES,MAAO,GAAIC,MAAO,WADf,mBAEF+C,EAAea,OAAOhE,KAAI,SAACC,GAAD,MAAQ,CAAEE,MAAOF,EAAEwE,GAAIrE,MAAOH,EAAEwE,cAInE,sBAAKlF,UAAU,4BAAf,UACE,cAAC,IAAD,CACEK,OAAO,SACPL,UAAU,OACVI,MAAOwI,EAAc,EAAIL,EAAOnG,SAAW,KAH7C,sBAOA,cAAC,IAAD,CACEpC,UAAU,SACVK,OAAO,SACP6I,KAAK,WACL/B,SAAUwB,EACV/H,MAAO8H,EAAOtG,SACdjC,QAAO,CACL,CAAES,MAAO,GAAIC,MAAO,WADf,mBA/FP,CAChB,IACA,KACA,KACA,IACA,KACA,KACA,iBACA,qBACA,KACA,UAuF+BJ,KAAI,SAACC,GAAD,MAAQ,CAAEE,MAAOF,EAAGG,MAAOH,aAIlD,sBAAKV,UAAU,4BAAf,UACE,cAAC,IAAD,CACEK,OAAO,SACPL,UAAU,kBACVI,MAAOwI,EAAc,EAAIL,EAAO3H,MAAQ,KAH1C,mBAOA,cAAC,IAAD,CACEuI,UAAW,SAAC/B,GACI,UAAVA,EAAEgC,MACJhC,EAAEiC,iBACFR,MAGJxI,OAAO,SACPiJ,YACE,CAAC,KAAM,SAAU,sBAAsB9D,SAASkD,EAAOtG,UACnD,sBACA,QAENpC,UAAU,2BACVY,MAAO8H,EAAO9H,MACduG,SAAUwB,EACVO,KAAK,gBAIX,qBAAKlJ,UAAU,mBAAf,SACE,cAAC,IAAD,CACEgH,SAAU8B,EACVhC,QAAS,kBAAM+B,KACf7I,UAAS,mEAHX,0BArFD,U,oECzDAuJ,EAJMzJ,sBAAW,SAAqBrB,EAAYsB,GAC/D,OAAO,+CAAStB,GAAT,IAAgBsB,IAAKA,Q,SCqCfyJ,EAjC+B,SAAC,GAAa,IAAXC,EAAU,EAAVA,IAC/C,OACE,cAACC,EAAA,EAAD,CACEC,OAAK,EACL7I,MACE,qBAAKd,UAAU,MAAf,SACE,qBAAKyJ,IAAKA,EAAKzJ,UAAU,wCAAwC4J,IAAI,OAGzE7I,UAAU,MACVM,QAAS,CACPC,QAAS,sDACTqI,MAAO,cAVX,SAaE,cAAC,EAAD,UACE,qBACE7C,QAAS,SAACM,GACRA,EAAEG,kBACFsC,OAAO9B,KAAK0B,EAAK,WAEnBzJ,UAAU,yHALZ,SAOE,qBACEA,UAAU,uEACVgJ,MAAO,CAAEc,gBAAgB,OAAD,OAASL,EAAT,eCHrBM,IArBqB,SAAC,GAAqB,IAAnBnC,EAAkB,EAAlBA,MAAOD,EAAW,EAAXA,KACtCzC,EAAKrF,IAAMmK,OAAeC,KAAKC,UAErC,OACE,sBAAKlK,UAAU,sBAAf,WACI4H,IAAgBD,EAAO,CAACA,GAAQ,KAAIwC,MAAM,EAAG,GAAG1J,KAAI,SAACwB,EAAGtB,GAAJ,OACpD,qBAA6BX,UAAU,SAAvC,SACE,cAAC,EAAD,CAAYyJ,IAAKxH,KADnB,UAAaiD,EAAb,iBAAwBvE,OAIzBiH,GAASA,EAAMtF,OAAS,EACvB,qBAAKtC,UAAU,WAAf,SACE,sBAAKA,UAAU,8EAAf,UACG4H,EAAMtF,OAAS,EADlB,SAIA,U,+FCVK8H,IAT6B,SAAC,GAA4B,IAA1BpK,EAAyB,EAAzBA,UAAcqK,EAAW,iBACtE,OACE,+CACMA,GADN,IAEErK,UAAWO,IAAW,gDAAiDP,Q,8PCKhEsK,EAA0B,CACrCC,IAAK,SAAC3J,GAAD,OACH,qBACEkG,QAAS,SAACM,GACRA,EAAEG,kBACFsC,OAAO9B,KAAKnH,EAAO,WAErBZ,UAAU,sDACVgJ,MAAO,CAAEc,gBAAgB,OAAD,OAASlJ,EAAT,SAG5BX,KAAM,SAACW,GAAD,OAAmB4J,YAAY5J,KA0ExB6J,UAvEqB,WAClC,IAAMC,EAAY7K,IAAMmK,OAAO,MACzBW,EAAS7I,cACf,EAAqCyC,mBAAS,GAA9C,mBAAOqG,EAAP,KAAuBC,EAAvB,KAEQjH,EAAmBkH,aAAY,SAACC,GACtC,MAAO,CACLnH,eAAgBmH,EAAMC,gBAAgBC,MAAK,SAACvK,GAAD,OAAOA,EAAEwE,KAAOgG,IAAeC,aAFtEvH,eAMR,OACE,sBAAK5D,UAAU,8BAAf,UACE,sBAAKA,UAAU,sCAAf,UACE,cAAC,IAAD,CAAWA,UAAU,YAArB,mBACA,uBAEEqG,KAAK,OACL+E,UAAQ,EACRpL,UAAU,SACVD,IAAK2K,EACLvD,SAAQ,uCAAE,WAAOC,GAAP,yBAAA3D,EAAA,2DACFmE,EAAQR,EAAEE,OAAOM,SAEVA,EAAMtF,OAHX,iBAINlD,IAAMiM,SAAS,CACbhF,KAAM,cACNiF,QAAQ,aAAD,OAAe1D,EAAMtF,OAArB,gBAAmCsF,EAAMtF,OAAS,EAAI,IAAM,GAA5D,SAELiJ,EAAW,EART,cASW3D,GATX,gEASGD,EATH,kBAUcjF,IAAa8I,WAAW7D,GAVtC,QAWE,UADA8D,EAVF,QAkBFd,EAAOc,EAAIrL,MAAQ,uBAAwB,CAAEsL,QAAS,WANtDH,IACAnM,IAAMiM,SAAS,CACbhF,KAAM,cACNiF,QAAQ,GAAD,OAAKC,EAAL,YAAiB3D,EAAMtF,OAAvB,iBAfP,+IAsBNlD,IAAMiM,SAAS,CAAEhF,KAAM,cAAeiF,SAAS,IAC/CT,GAAW,SAAC9E,GAAD,OAAUA,EAAO,KAvBtB,gEAAF,uDANV,qBACqB6E,IAgCrB,cAAC,IAAD,CACE9D,QAAS,kBAAM4D,EAAUiB,QAAQC,SACjC5L,UAAU,6EAFZ,SAIE,sBAAKA,UAAU,oBAAf,UACE,cAAC,IAAD,CAAYA,UAAU,eAAeiB,SAAS,YAC9C,kDAKJ2C,EACA,cAAC,IAAD,CACEvD,OAAO,SAEP2D,gBAAiBsG,EACjB1G,eAAgBA,GAJlB,sBAEsBgH,IAHL","file":"static/js/9.2c1e4b00.chunk.js","sourcesContent":["import ReactDOM from \"react-dom\";\r\nimport React from \"react\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"store\";\r\nimport NotificationsProvider from \"components/NotificationsProvider\";\r\nimport { QueryClientProvider } from \"react-query\";\r\nimport { queryClient } from \"index\";\r\n\r\nexport interface CallableComponent<T> {\r\n  proceed: (v: T) => void;\r\n}\r\n\r\ninterface callComponentArgs<T> {\r\n  Component: React.FC<any>;\r\n  props: Omit<T, \"proceed\">;\r\n}\r\n\r\nexport function callComponent<T, RT>({ Component, props }: callComponentArgs<T>): Promise<RT> {\r\n  return new Promise((resolve, reject) => {\r\n    const wrapper = document.getElementById(\"root\")?.appendChild(document.createElement(\"div\"));\r\n\r\n    if (wrapper) {\r\n      ReactDOM.render(\r\n        <Provider store={store}>\r\n          <NotificationsProvider>\r\n            <QueryClientProvider client={queryClient}>\r\n              <Component\r\n                {...props}\r\n                proceed={(val: RT) => {\r\n                  ReactDOM.unmountComponentAtNode(wrapper);\r\n                  wrapper.parentNode?.removeChild(wrapper);\r\n                  resolve(val);\r\n                }}\r\n              />\r\n            </QueryClientProvider>\r\n          </NotificationsProvider>\r\n        </Provider>,\r\n        wrapper\r\n      );\r\n    }\r\n  });\r\n}\r\n","import { IoAlertCircleOutline } from \"react-icons/io5\";\r\nimport Tooltip from \"@mui/material/Tooltip\";\r\nimport React, { memo, SelectHTMLAttributes } from \"react\";\r\nimport classNames from \"classnames\";\r\nimport { GroundType } from \"utils/types\";\r\n\r\nconst WarningIcon = React.forwardRef(function MyComponent(props: any, ref: any) {\r\n  return (\r\n    <div {...props} ref={ref}>\r\n      <IoAlertCircleOutline className=\"text-red-FF0000\" size={20}></IoAlertCircleOutline>\r\n    </div>\r\n  );\r\n});\r\n\r\nexport interface SelectProps extends SelectHTMLAttributes<HTMLSelectElement> {\r\n  className?: string;\r\n  options: { label: string; value: string | number }[];\r\n  error?: string | boolean;\r\n  ground: GroundType;\r\n}\r\n\r\nconst Select: React.FC<SelectProps> = ({ className = \"\", options, error, ground, ...props }) => {\r\n  let mainClasses = `input${ground}TextColor input${ground}HoverBackground input${ground}FocusedTextColor input${ground}FocusedBackground input${ground}FocusedBorderColor input${ground}Background`;\r\n  return (\r\n    <div className={`${className} relative flex items-center`}>\r\n      <select\r\n        className={classNames(\"px-3 h-full border-2 border-solid w-full rounded outline-none\", {\r\n          \"border-red-FF0000\": error,\r\n          [mainClasses]: !error,\r\n        })}\r\n        {...props}\r\n        spellCheck={false}\r\n      >\r\n        {options.map((x, i) => (\r\n          <option data-testid={`select-option-${x.value}`} key={\"opt-\" + i} value={x.value}>\r\n            {x.label}\r\n          </option>\r\n        ))}\r\n      </select>\r\n      {error ? (\r\n        <Tooltip title={error} placement=\"top\">\r\n          <WarningIcon className=\"absolute right-2 my-auto w-auto\"></WarningIcon>\r\n        </Tooltip>\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default memo(Select);\r\n","import React from \"react\";\r\nimport ErrorRounded from \"@mui/icons-material/ErrorRounded\";\r\nimport Tooltip from \"@mui/material/Tooltip\";\r\nimport classNames from \"classnames\";\r\nimport { GroundType } from \"utils/types\";\r\n\r\nexport interface LabelProps {\r\n  error?: string | undefined | null;\r\n  className?: string;\r\n  children: any;\r\n  ground: GroundType;\r\n}\r\n\r\nconst WarningIcon = React.forwardRef(function MyComponent(props: any, ref: any) {\r\n  return (\r\n    <div {...props} ref={ref}>\r\n      <ErrorRounded className=\"text-red-500 text-xl\" fontSize=\"inherit\"></ErrorRounded>\r\n    </div>\r\n  );\r\n});\r\n\r\nconst Label: React.FC<LabelProps> = ({ className = \"\", children, error, ground }) => {\r\n  return (\r\n    <div\r\n      className={classNames(\r\n        `flex justify-between relative ${className}`,\r\n        `${ground.toLowerCase()}TextColor`\r\n      )}\r\n    >\r\n      <div>{children}</div>\r\n      {error ? (\r\n        <Tooltip\r\n          title={error}\r\n          placement=\"top\"\r\n          classes={{ tooltip: \"bg-red-500\", tooltipArrow: \"bg-red-500\" }}\r\n        >\r\n          <WarningIcon className=\"absolute right-2 my-auto w-auto\"></WarningIcon>\r\n        </Tooltip>\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Label;\r\n","import { useNotify } from \"components/NotificationsProvider\";\r\nimport { FilterType } from \"components/TableElements/CollectionTable\";\r\nimport { createIndex } from \"components/TableElements/CreateIndex\";\r\nimport { useEffect, useCallback } from \"react\";\r\nimport { Document, GetCollectionOptions } from \"utils/interfaces\";\r\nimport { useInfiniteQuery } from \"react-query\";\r\nimport dataProvider from \"api/dataProvider\";\r\n\r\ninterface UseFetchProps {\r\n  collectionId: string;\r\n  filters?: FilterType[];\r\n  orderBy?: { fieldId: string; direction: \"asc\" | \"desc\" };\r\n  inView: boolean;\r\n}\r\n\r\nconst useFetch = ({ collectionId, filters = [], orderBy, inView }: UseFetchProps) => {\r\n  const notify = useNotify();\r\n\r\n  const getOptions = useCallback(() => {\r\n    let options: GetCollectionOptions = { collectionId };\r\n\r\n    options.where = \"\";\r\n    options.orderBy = \"\";\r\n\r\n    filters.forEach((f, i) => {\r\n      options.where += (i > 0 ? \";\" : \"\") + f.fieldId + \",\" + f.operator + \",\" + f.value;\r\n      if (orderBy && orderBy.fieldId !== f.fieldId) {\r\n        options.orderBy += (options.orderBy ? \";\" : \"\") + f.fieldId;\r\n      }\r\n    });\r\n\r\n    if (orderBy) {\r\n      options.orderBy += (options.orderBy ? \";\" : \"\") + `${orderBy.fieldId},${orderBy.direction}`;\r\n    }\r\n    if (!orderBy && !filters.length) {\r\n      options.orderBy = \"createdAt,asc\";\r\n    }\r\n\r\n    options.populateRef = false;\r\n\r\n    return options;\r\n  }, [orderBy, filters, collectionId]);\r\n\r\n  const { data, error, fetchNextPage, hasNextPage } = useInfiniteQuery<Document[]>(\r\n    [collectionId, orderBy, filters],\r\n    ({ pageParam }) => {\r\n      return dataProvider.getCollection({ ...getOptions(), startAfter: pageParam });\r\n    },\r\n    {\r\n      keepPreviousData: true,\r\n      getNextPageParam: (lastPage, pages) => {\r\n        let lastDoc = lastPage?.length && lastPage.length === 10 ? lastPage[9] : null;\r\n        return lastDoc ? lastDoc[orderBy ? orderBy.fieldId : \"createdAt\"] : undefined;\r\n      },\r\n    }\r\n  );\r\n\r\n  const onError = (message: string) => {\r\n    if (message.includes(\"FAILED_PRECONDITION\")) {\r\n      createIndex(message.split(\"it here:\")[1]);\r\n    } else {\r\n      notify(message, { variant: \"error\" });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (inView && hasNextPage) {\r\n      fetchNextPage();\r\n    }\r\n  }, [inView, fetchNextPage, hasNextPage]);\r\n\r\n  return { docs: data?.pages.reduce((a, b) => [...a, ...b], []) || [] };\r\n};\r\n\r\nexport default useFetch;\r\n","import { Document } from \"utils/interfaces\";\r\nimport { CollectionType } from \"utils/interfaces\";\r\nimport { AnyField } from \"utils/types\";\r\nimport FilesCell from \"./FilesCell\";\r\nimport React, { useEffect } from \"react\";\r\nimport ExpandMoreRounded from \"@mui/icons-material/ExpandMoreRounded\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { confirm } from \"components/Confirm\";\r\nimport AddFilter from \"./AddFilter\";\r\nimport Button from \"components/Button\";\r\nimport SimpleBar from \"simplebar-react\";\r\nimport classNames from \"classnames\";\r\nimport useFetch from \"hooks/useFetch\";\r\nimport { InView } from \"react-intersection-observer\";\r\nimport Checkbox from \"@mui/material/Checkbox\";\r\nimport moment from \"moment\";\r\nimport CollectionsManager from \"facades/CollectionsManager\";\r\nimport { GroundType } from \"utils/types\";\r\nimport { uncapitalize } from \"helper\";\r\n\r\nexport interface TableProps {\r\n  collectionType: CollectionType;\r\n  onPick?: (a: Document[]) => void;\r\n  blackList?: string[];\r\n  singleSelect?: boolean;\r\n  valueFormatters?: { [key: string]: (val: any) => any };\r\n  ground: GroundType;\r\n  filters?: FilterType[];\r\n  onEdit?: (doc: Document) => void;\r\n  hideFilters?: boolean;\r\n}\r\n\r\nexport type FilterType = { fieldId: string; operator: string; value: string; hidden?: boolean };\r\n\r\nconst Table: React.FC<TableProps> = ({\r\n  collectionType,\r\n  onPick,\r\n  blackList = [],\r\n  singleSelect = false,\r\n  valueFormatters,\r\n  ground,\r\n  filters: _filters = [],\r\n  onEdit: _onEdit,\r\n  hideFilters = false,\r\n}) => {\r\n  const history = useHistory();\r\n\r\n  const [filters, setFilters] = React.useState<FilterType[]>([]);\r\n  const fields = collectionType.fields.filter((field) => field.displayOnTable);\r\n  const [selected, setSelected] = React.useState<string[]>([]);\r\n  const [orderBy, setOrderBy] = React.useState<{ fieldId: string; direction: \"asc\" | \"desc\" }>();\r\n  const [endIsInView, setEndIsInView] = React.useState(false);\r\n\r\n  const { docs } = useFetch({\r\n    collectionId: collectionType.id,\r\n    filters,\r\n    orderBy,\r\n    inView: endIsInView,\r\n  });\r\n\r\n  const onDeleteSelected = async () => {\r\n    if (await confirm({ confirmation: `Delete ${selected.length} documents?` })) {\r\n      CollectionsManager.deleteMultipleDocuments(\r\n        collectionType.id,\r\n        docs.filter((x) => selected.includes(x.docId))\r\n      );\r\n\r\n      setSelected([]);\r\n    }\r\n  };\r\n\r\n  const onEdit =\r\n    _onEdit ||\r\n    ((doc: Document) => {\r\n      history.push(`/collections/${collectionType.id}/edit/${doc.docId}`);\r\n    });\r\n\r\n  const onOrder = (field: AnyField) =>\r\n    orderBy?.fieldId !== field.id\r\n      ? () => {\r\n          setOrderBy({ fieldId: field.id, direction: \"asc\" });\r\n        }\r\n      : orderBy?.direction !== \"asc\"\r\n      ? () => setOrderBy(undefined)\r\n      : () => setOrderBy({ fieldId: field.id, direction: \"desc\" });\r\n\r\n  const selectAll = (select: boolean) => setSelected(select ? docs.map((x) => x.docId) : []);\r\n\r\n  const selectHandler = (docId: string, checked: boolean) => {\r\n    if (checked) {\r\n      if (singleSelect) {\r\n        setSelected([docId]);\r\n      } else {\r\n        setSelected((prev) => [...prev, docId]);\r\n      }\r\n\r\n      return;\r\n    }\r\n    setSelected((prev) => {\r\n      let arr = [...prev];\r\n      let index = arr.findIndex((x) => x === docId);\r\n      if (index != null) {\r\n        arr.splice(index, 1);\r\n      }\r\n      return arr;\r\n    });\r\n  };\r\n\r\n  const formatValue = (field: AnyField, value: any) => {\r\n    return field.type === \"date\"\r\n      ? moment(value).format(\"YYYY-MM-DD HH:mm\")\r\n      : valueFormatters && field.id in valueFormatters\r\n      ? valueFormatters[field.id](value)\r\n      : value.toString().substring(0, 40);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (_filters.length) {\r\n      setFilters((prev) => [...prev, ..._filters]);\r\n    }\r\n  }, [_filters]);\r\n\r\n  return (\r\n    <div className=\"h-full w-full flex-col flex\">\r\n      <div className=\"flex justify-between mb-3\">\r\n        {hideFilters ? null : (\r\n          <div className=\"flex flex-wrap\">\r\n            <AddFilter\r\n              ground={ground}\r\n              collectionType={collectionType}\r\n              onValue={(val: FilterType) => setFilters((prev) => [val, ...prev])}\r\n            ></AddFilter>\r\n            {filters.map((f, i) =>\r\n              f.hidden ? null : (\r\n                <div\r\n                  key={`f-${i}`}\r\n                  className={classNames(\r\n                    \"rounded min-h-28px border leading-28px pl-3 text-sm pr-3 flex mr-3 mb-3 relative\",\r\n                    `${uncapitalize(ground)}TextColor ${uncapitalize(ground)}BorderColor`\r\n                  )}\r\n                >\r\n                  {f.fieldId} {f.operator} {f.value}{\" \"}\r\n                  <span\r\n                    onClick={() =>\r\n                      setFilters((prev) => {\r\n                        let arr = [...prev];\r\n                        arr.splice(i, 1);\r\n                        return arr;\r\n                      })\r\n                    }\r\n                    className=\"text-xs leading-28px ml-3 cursor-pointer\"\r\n                  >\r\n                    ✕\r\n                  </span>\r\n                </div>\r\n              )\r\n            )}\r\n          </div>\r\n        )}\r\n\r\n        {!onPick ? (\r\n          <Button\r\n            onClick={onDeleteSelected}\r\n            disabled={selected.length === 0}\r\n            className={`px-7 mb-3 min-w-unset rounded h-28px ${\r\n              selected.length === 0\r\n                ? \"buttonDisabledBackground buttonDisabledTextColor cursor-default\"\r\n                : \"dangerBackground buttonDangerTextColor\"\r\n            } `}\r\n          >\r\n            Delete\r\n          </Button>\r\n        ) : (\r\n          <Button\r\n            onClick={() => onPick(docs.filter((x) => selected.includes(x.docId)))}\r\n            className={`h-28px min-w-unset rounded mb-3 px-7 ${\r\n              selected.length === 0\r\n                ? \"buttonDisabledBackground buttonDisabledTextColor cursor-default\"\r\n                : \"primaryBackground buttonPrimaryTextColor\"\r\n            } `}\r\n          >\r\n            Select\r\n          </Button>\r\n        )}\r\n      </div>\r\n      <div className={classNames(\"flex-grow h-0 -mt-3 rounded overflow-hidden bg-white\")}>\r\n        <SimpleBar className={`relative table${ground}Scrollbar h-full`}>\r\n          <table className=\"w-full text-center\">\r\n            <thead>\r\n              <tr className=\"whitespace-nowrap\">\r\n                <th className={`sticky top-0 table${ground}HeaderBackground z-10 px-1`}>\r\n                  {singleSelect ? null : (\r\n                    <Checkbox\r\n                      size=\"small\"\r\n                      classes={{ checked: \"tableCheckboxTextColor\", root: \"p-0\" }}\r\n                      checked={selected.length === docs.length}\r\n                      onChange={(e) => selectAll(e.target.checked)}\r\n                    ></Checkbox>\r\n                  )}\r\n                </th>\r\n                {fields.map((field, i) => (\r\n                  <th\r\n                    className={`font-medium sticky top-0 table${ground}HeaderBackground`}\r\n                    key={`th-${i}`}\r\n                  >\r\n                    <div className=\"flex items-center justify-center\">\r\n                      <div className=\"w-5\"></div>\r\n                      <div className=\"cursor-pointer select-none\" onClick={onOrder(field)}>\r\n                        {field.id}\r\n                      </div>\r\n                      <div className=\"w-5\">\r\n                        {orderBy?.fieldId === field.id ? (\r\n                          <ExpandMoreRounded\r\n                            fontSize=\"small\"\r\n                            className={`${\r\n                              orderBy?.direction === \"asc\" ? \"transform rotate-180\" : \"\"\r\n                            }`}\r\n                          ></ExpandMoreRounded>\r\n                        ) : null}\r\n                      </div>\r\n                    </div>\r\n                  </th>\r\n                ))}\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {docs.map((doc, i) =>\r\n                blackList.includes(doc.docId) ? null : (\r\n                  <tr\r\n                    onClick={() =>\r\n                      onPick ? selectHandler(doc.docId, !selected.includes(doc.docId)) : onEdit(doc)\r\n                    }\r\n                    key={`row-${i}`}\r\n                    className={`cursor-pointer table${ground}RowHoverTextColor table${ground}RowHoverBackground`}\r\n                  >\r\n                    <td className=\"px-1\" onClick={(e) => e.stopPropagation()}>\r\n                      <Checkbox\r\n                        size=\"small\"\r\n                        classes={{ checked: \"tableCheckboxTextColor\", root: \"p-0\" }}\r\n                        checked={selected.includes(doc.docId)}\r\n                        onChange={(e) => selectHandler(doc.docId, e.target.checked)}\r\n                      ></Checkbox>\r\n                    </td>\r\n                    {fields.map((field, j) => (\r\n                      <td key={`row-${i}-col-${j}`} className=\"px-2\">\r\n                        {doc[field.id] != null ? (\r\n                          field.type === \"media\" ? (\r\n                            field.mediaSingle ? (\r\n                              <FilesCell file={doc[field.id]}></FilesCell>\r\n                            ) : (\r\n                              <FilesCell files={doc[field.id]} />\r\n                            )\r\n                          ) : (\r\n                            <div className=\"whitespace-nowrap\">\r\n                              {formatValue(field, doc[field.id])}\r\n                            </div>\r\n                          )\r\n                        ) : null}\r\n                      </td>\r\n                    ))}\r\n                  </tr>\r\n                )\r\n              )}\r\n              <tr>\r\n                <td colSpan={fields.length + 1}>\r\n                  <InView\r\n                    onChange={async (inView) => {\r\n                      setEndIsInView(inView);\r\n                    }}\r\n                  >\r\n                    <div className=\"w-full\"></div>\r\n                  </InView>\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n\r\n          <div></div>\r\n        </SimpleBar>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Table;\r\n","import Modal from \"@mui/material/Modal\";\r\nimport Input from \"components/Input\";\r\nimport Select from \"components/Select\";\r\nimport Button from \"components/Button\";\r\nimport { CollectionType } from \"utils/interfaces\";\r\nimport React from \"react\";\r\nimport { useFormik } from \"formik\";\r\nimport Label from \"components/Label\";\r\nimport CloseRounded from \"@mui/icons-material/CloseRounded\";\r\nimport { GroundType } from \"utils/types\";\r\n\r\nexport interface AddFilterModalProps {\r\n  collectionType: Pick<CollectionType, \"fields\">;\r\n  onValue: Function;\r\n  ground: GroundType;\r\n}\r\n\r\nconst AddFilterModal: React.FC<AddFilterModalProps> = ({ collectionType, onValue, ground }) => {\r\n  const operators = [\r\n    \"<\",\r\n    \"<=\",\r\n    \"==\",\r\n    \">\",\r\n    \">=\",\r\n    \"!=\",\r\n    \"array-contains\",\r\n    \"array-contains-any\",\r\n    \"in\",\r\n    \"not-in\",\r\n  ];\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const { values, errors, handleChange, submitCount, handleSubmit, isSubmitting } = useFormik({\r\n    onSubmit: async (vals, { resetForm }) => {\r\n      onValue(vals);\r\n      setOpen(false);\r\n      resetForm();\r\n    },\r\n    initialValues: {\r\n      value: \"\",\r\n      operator: \"\",\r\n      fieldId: \"\",\r\n    },\r\n    validate: (vals: any) => {\r\n      let errors: any = {};\r\n      Object.keys(vals).forEach((x) => {\r\n        if (!vals[x]) {\r\n          errors[x] = \"Required\";\r\n        }\r\n      });\r\n      return errors;\r\n    },\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <Button\r\n        onClick={() => setOpen(true)}\r\n        className=\"secondaryBackground buttonSecondaryTextColor min-w-unset flex items-center justify-center h-28px px-7 rounded text-sm mr-3 mb-3\"\r\n      >\r\n        Filters\r\n      </Button>\r\n      {!open ? null : (\r\n        <Modal open={open}>\r\n          <div\r\n            className=\"fixed left-0 top-0 w-full h-full flex p-7\"\r\n            onMouseDown={() => setOpen(false)}\r\n          >\r\n            <div\r\n              onMouseDown={(e) => e.stopPropagation()}\r\n              className=\"bg-white rounded p-7 m-auto relative animate-littlemoveup\"\r\n              style={{ maxWidth: 600 }}\r\n            >\r\n              <CloseRounded\r\n                className=\"absolute top-0 right-0 cursor-pointer\"\r\n                onClick={() => setOpen(false)}\r\n              ></CloseRounded>\r\n              <div className=\"flex flex-wrap -mx-2 mb-4\">\r\n                <div className=\"sm:w-1/3 w-full mb-3 px-2\">\r\n                  <Label\r\n                    ground=\"Dialog\"\r\n                    className=\"mb-2\"\r\n                    error={submitCount > 0 ? errors.fieldId : null}\r\n                  >\r\n                    Field\r\n                  </Label>\r\n                  <Select\r\n                    className=\"h-34px\"\r\n                    ground=\"Dialog\"\r\n                    name=\"fieldId\"\r\n                    onChange={handleChange}\r\n                    value={values.fieldId}\r\n                    options={[\r\n                      { value: \"\", label: \"Select\" },\r\n                      ...collectionType.fields.map((x) => ({ value: x.id, label: x.id })),\r\n                    ]}\r\n                  ></Select>\r\n                </div>\r\n                <div className=\"sm:w-1/3 w-full mb-3 px-2\">\r\n                  <Label\r\n                    ground=\"Dialog\"\r\n                    className=\"mb-2\"\r\n                    error={submitCount > 0 ? errors.operator : null}\r\n                  >\r\n                    Operator\r\n                  </Label>\r\n                  <Select\r\n                    className=\"h-34px\"\r\n                    ground=\"Dialog\"\r\n                    name=\"operator\"\r\n                    onChange={handleChange}\r\n                    value={values.operator}\r\n                    options={[\r\n                      { value: \"\", label: \"Select\" },\r\n                      ...operators.map((x) => ({ value: x, label: x })),\r\n                    ]}\r\n                  ></Select>\r\n                </div>\r\n                <div className=\"sm:w-1/3 w-full mb-3 px-2\">\r\n                  <Label\r\n                    ground=\"Dialog\"\r\n                    className=\"mb-2 text-black\"\r\n                    error={submitCount > 0 ? errors.value : null}\r\n                  >\r\n                    Value\r\n                  </Label>\r\n                  <Input\r\n                    onKeyDown={(e) => {\r\n                      if (e.key === \"Enter\") {\r\n                        e.preventDefault();\r\n                        handleSubmit();\r\n                      }\r\n                    }}\r\n                    ground=\"Dialog\"\r\n                    placeholder={\r\n                      [\"in\", \"not in\", \"array-contains-any\"].includes(values.operator)\r\n                        ? \"value, value, value\"\r\n                        : \"value\"\r\n                    }\r\n                    className=\"placeholder-black h-34px\"\r\n                    value={values.value}\r\n                    onChange={handleChange}\r\n                    name=\"value\"\r\n                  ></Input>\r\n                </div>\r\n              </div>\r\n              <div className=\"flex justify-end\">\r\n                <Button\r\n                  disabled={isSubmitting}\r\n                  onClick={() => handleSubmit()}\r\n                  className={`primaryBackground buttonPrimaryTextColor h-28px min-w-unset px-8`}\r\n                >\r\n                  Add\r\n                </Button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Modal>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AddFilterModal;\r\n","import { forwardRef } from \"react\";\r\n\r\nconst TooltipChild = forwardRef(function MyComponent(props: any, ref: any) {\r\n  return <div {...props} ref={ref}></div>;\r\n});\r\n\r\nexport default TooltipChild;\r\n","import TooltipChild from \"components/TooltipChild\";\r\nimport Tooltip from \"@mui/material/Tooltip\";\r\n\r\ninterface MediaFieldProps {\r\n  src: string;\r\n}\r\n\r\nconst MediaField: React.FC<MediaFieldProps> = ({ src }) => {\r\n  return (\r\n    <Tooltip\r\n      arrow\r\n      title={\r\n        <div className=\"p-1\">\r\n          <img src={src} className=\"max-w-136px max-h-136px w-auto h-auto\" alt=\"\" />\r\n        </div>\r\n      }\r\n      placement=\"top\"\r\n      classes={{\r\n        tooltip: \"font-poppins text-xs p-0 rounded bg-white shadow-md\",\r\n        arrow: \"text-white\",\r\n      }}\r\n    >\r\n      <TooltipChild>\r\n        <div\r\n          onClick={(e) => {\r\n            e.stopPropagation();\r\n            window.open(src, \"_blank\");\r\n          }}\r\n          className=\"group w-4 h-4 relative flex items-center justify-center rounded hover:bg-gray-535371 hover:bg-opacity-5 cursor-pointer\"\r\n        >\r\n          <div\r\n            className=\"relative w-4 h-4 rounded-full bg-center bg-cover pointer-events-none\"\r\n            style={{ backgroundImage: `url(${src})` }}\r\n          ></div>\r\n        </div>\r\n      </TooltipChild>\r\n    </Tooltip>\r\n  );\r\n};\r\n\r\nexport default MediaField;\r\n","import React from \"react\";\r\nimport MediaField from \"./MediaField\";\r\n\r\nexport interface FilesProps {\r\n  files?: string[];\r\n  file?: string;\r\n}\r\n\r\nconst Files: React.FC<FilesProps> = ({ files, file }) => {\r\n  const id = React.useRef<number>(Math.random());\r\n\r\n  return (\r\n    <div className=\"flex justify-center\">\r\n      {(files ? files : file ? [file] : []).slice(0, 4).map((f, i) => (\r\n        <div key={`${id}-file-${i}`} className=\"mr-0.5\">\r\n          <MediaField src={f}></MediaField>\r\n        </div>\r\n      ))}\r\n      {files && files.length > 4 ? (\r\n        <div className=\"relative\">\r\n          <div className=\"w-4 h-4 rounded-full bg-fireck-4 text-10px flex items-center justify-center\">\r\n            {files.length - 4}+\r\n          </div>\r\n        </div>\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Files;\r\n","import classNames from \"classnames\";\r\n\r\nexport interface PageTitleProps\r\n  extends React.DetailedHTMLProps<React.HTMLAttributes<HTMLDivElement>, HTMLDivElement> {}\r\n\r\nconst PageTitle: React.FC<PageTitleProps> = ({ className, ...rest }) => {\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={classNames(\"text-27px font-medium capitalize leading-none\", className)}\r\n    ></div>\r\n  );\r\n};\r\n\r\nexport default PageTitle;\r\n","import Button from \"components/Button\";\r\nimport React, { useState } from \"react\";\r\nimport dataProvider from \"api/dataProvider\";\r\nimport store, { RootState } from \"store\";\r\nimport { useNotify } from \"components/NotificationsProvider\";\r\nimport PageTitle from \"components/PageTitle\";\r\nimport CollectionTable from \"components/TableElements/CollectionTable\";\r\nimport { useSelector } from \"react-redux\";\r\nimport AddRounded from \"@material-ui/icons/AddRounded\";\r\nimport { formatBytes } from \"helper\";\r\nimport { COLLECTION_IDS } from \"utils/constants\";\r\n\r\nexport interface MediaProps {}\r\n\r\nexport const MediaDocumentFormatters = {\r\n  url: (value: string) => (\r\n    <div\r\n      onClick={(e) => {\r\n        e.stopPropagation();\r\n        window.open(value, \"_blank\");\r\n      }}\r\n      className=\"bg-center bg-cover h-10 w-10 mx-auto bg-gray-E1E1E1\"\r\n      style={{ backgroundImage: `url(${value})` }}\r\n    ></div>\r\n  ),\r\n  size: (value: number) => formatBytes(value),\r\n};\r\n\r\nconst Media: React.FC<MediaProps> = () => {\r\n  const uploadRef = React.useRef(null as any);\r\n  const notify = useNotify();\r\n  const [refreshCounter, setCounter] = useState(0);\r\n\r\n  const { collectionType } = useSelector((state: RootState) => {\r\n    return {\r\n      collectionType: state.collectionTypes.find((x) => x.id === COLLECTION_IDS.MEDIA),\r\n    };\r\n  });\r\n\r\n  return (\r\n    <div className=\"h-full w-full flex flex-col\">\r\n      <div className=\"flex justify-between flex-wrap mb-3\">\r\n        <PageTitle className=\"mb-4 mr-4\">Media</PageTitle>\r\n        <input\r\n          key={`file-input-${refreshCounter}`}\r\n          type=\"file\"\r\n          multiple\r\n          className=\"hidden\"\r\n          ref={uploadRef}\r\n          onChange={async (e) => {\r\n            const files = e.target.files;\r\n\r\n            if (files && files.length) {\r\n              store.dispatch({\r\n                type: \"SET_LOADING\",\r\n                payload: `Uploading ${files.length} file${files.length > 1 ? \"s\" : \"\"}...`,\r\n              });\r\n              let uploaded = 0;\r\n              for (let file of files) {\r\n                const res = await dataProvider.uploadFile(file);\r\n                if (!(\"error\" in res)) {\r\n                  uploaded++;\r\n                  store.dispatch({\r\n                    type: \"SET_LOADING\",\r\n                    payload: `${uploaded}/${files.length} uploaded.`,\r\n                  });\r\n                } else {\r\n                  notify(res.error + \". Try reload the app\", { variant: \"error\" });\r\n                }\r\n              }\r\n\r\n              store.dispatch({ type: \"SET_LOADING\", payload: false });\r\n              setCounter((prev) => prev + 1);\r\n            }\r\n          }}\r\n        />\r\n        <Button\r\n          onClick={() => uploadRef.current.click()}\r\n          className=\"primaryBackground buttonPrimaryTextColor mb-4 h-34px pr-6 pl-5 min-w-unset\"\r\n        >\r\n          <div className=\"flex items-center\">\r\n            <AddRounded className=\"mr-2 text-lg\" fontSize=\"inherit\"></AddRounded>\r\n            <span>Upload</span>\r\n          </div>\r\n        </Button>\r\n      </div>\r\n\r\n      {!collectionType ? null : (\r\n        <CollectionTable\r\n          ground=\"Ground\"\r\n          key={`files-table-${refreshCounter}`}\r\n          valueFormatters={MediaDocumentFormatters}\r\n          collectionType={collectionType}\r\n        ></CollectionTable>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Media;\r\n"],"sourceRoot":""}